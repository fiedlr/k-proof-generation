$c #Pattern $.
$c #ElementVariable $.
$c #SetVariable $.
$c #Variable $.
$c #Symbol $.
$v ph0 ph1 ph2 ph3 ph4 ph5 ph6 ph7 ph8 $.
$v th0 th1 th2 th3 th4 th5 th6 th7 th8 $.
$v x y z w $.
$v X Y Z W $.
$v xX yY $.
$v sg0 sg1 sg2 sg3 sg4 $.
ph0-is-pattern $f #Pattern ph0 $.
ph1-is-pattern $f #Pattern ph1 $.
ph2-is-pattern $f #Pattern ph2 $.
ph3-is-pattern $f #Pattern ph3 $.
ph4-is-pattern $f #Pattern ph4 $.
ph5-is-pattern $f #Pattern ph5 $.
ph6-is-pattern $f #Pattern ph6 $.
ph7-is-pattern $f #Pattern ph7 $.
ph8-is-pattern $f #Pattern ph8 $.
th0-is-pattern $f #Pattern th0 $.
th1-is-pattern $f #Pattern th1 $.
th2-is-pattern $f #Pattern th2 $.
th3-is-pattern $f #Pattern th3 $.
th4-is-pattern $f #Pattern th4 $.
th5-is-pattern $f #Pattern th5 $.
th6-is-pattern $f #Pattern th6 $.
th7-is-pattern $f #Pattern th7 $.
th8-is-pattern $f #Pattern th8 $.
x-is-element-var $f #ElementVariable x $.
y-is-element-var $f #ElementVariable y $.
z-is-element-var $f #ElementVariable z $.
w-is-element-var $f #ElementVariable w $.
X-is-element-var $f #SetVariable X $.
Y-is-element-var $f #SetVariable Y $.
Z-is-element-var $f #SetVariable Z $.
W-is-element-var $f #SetVariable W $.
xX-is-var $f #Variable xX $.
yY-is-var $f #Variable yY $.
sg0-is-symbol $f #Symbol sg0 $.
sg1-is-symbol $f #Symbol sg1 $.
sg2-is-symbol $f #Symbol sg2 $.
sg3-is-symbol $f #Symbol sg3 $.
sg4-is-symbol $f #Symbol sg4 $.
element-var-is-var $a #Variable x $.
set-var-is-var $a #Variable X $.
var-is-pattern $a #Pattern xX $.
symbol-is-pattern $a #Pattern sg0 $.
$c #Positive $.
$c #Negative $.
$c #Fresh $.
$c #ApplicationContext $.
$c #Substitution $.
$c #Notation $.
$c |- $.
$c \bot $.
$c \imp $.
$c \app $.
$c \exists $.
$c \mu $.
$c ( ) $.
bot-is-pattern $a #Pattern \bot $.
imp-is-pattern $a #Pattern ( \imp ph0 ph1 ) $.
app-is-pattern $a #Pattern ( \app ph0 ph1 ) $.
exists-is-pattern $a #Pattern ( \exists x ph0 ) $.
${ mu-is-pattern.0 $e #Positive X ph0 $.
   mu-is-pattern $a #Pattern ( \mu X ph0 ) $. $}
positive-in-var $a #Positive xX yY $.
positive-in-symbol $a #Positive xX sg0 $.
positive-in-bot $a #Positive xX \bot $.
${ positive-in-imp.0 $e #Negative xX ph0 $.
   positive-in-imp.1 $e #Positive xX ph1 $.
   positive-in-imp $a #Positive xX ( \imp ph0 ph1 ) $. $}
${ positive-in-app.0 $e #Positive xX ph0 $.
   positive-in-app.1 $e #Positive xX ph1 $.
   positive-in-app $a #Positive xX ( \app ph0 ph1 ) $. $}
${ positive-in-exists.0 $e #Positive xX ph0 $.
   positive-in-exists $a #Positive xX ( \exists x ph0 ) $. $}
${ positive-in-mu.0 $e #Positive xX ph0 $.
   positive-in-mu $a #Positive xX ( \mu X ph0 ) $. $}
${ $d xX ph0 $.
   positive-disjoint $a #Positive xX ph0 $. $}
${ $d xX yY $.
   negative-in-var $a #Negative xX yY $. $}
negative-in-symbol $a #Negative xX sg0 $.
negative-in-bot $a #Negative xX \bot $.
${ negative-in-imp.0 $e #Positive xX ph0 $.
   negative-in-imp.1 $e #Negative xX ph1 $.
   negative-in-imp $a #Negative xX ( \imp ph0 ph1 ) $. $}
${ negative-in-app.0 $e #Negative xX ph0 $.
   negative-in-app.1 $e #Negative xX ph1 $.
   negative-in-app $a #Negative xX ( \app ph0 ph1 ) $. $}
${ negative-in-exists.0 $e #Negative xX ph0 $.
   negative-in-exists $a #Negative xX ( \exists x ph0 ) $. $}
${ negative-in-mu.0 $e #Negative xX ph0 $.
   negative-in-mu $a #Negative xX ( \mu X ph0 ) $. $}
${ $d xX ph0 $.
   negative-disjoint $a #Negative xX ph0 $. $}
${ $d xX yY $.
   fresh-in-var $a #Fresh xX yY $. $}
fresh-in-symbol $a #Fresh xX sg0 $.
fresh-in-bot $a #Fresh xX \bot $.
${ fresh-in-imp.0 $e #Fresh xX ph0 $.
   fresh-in-imp.1 $e #Fresh xX ph1 $.
   fresh-in-imp $a #Fresh xX ( \imp ph0 ph1 ) $. $}
${ fresh-in-app.0 $e #Fresh xX ph0 $.
   fresh-in-app.1 $e #Fresh xX ph1 $.
   fresh-in-app $a #Fresh xX ( \app ph0 ph1 ) $. $}
${ $d xX x $.
   fresh-in-exists.0 $e #Fresh xX ph0 $.
   fresh-in-exists $a #Fresh xX ( \exists x ph0 ) $. $}
fresh-in-exists-shadowed $a #Fresh x ( \exists x ph0 ) $.
${ $d xX X $.
   fresh-in-mu.0 $e #Fresh xX ph0 $.
   fresh-in-mu $a #Fresh xX ( \mu X ph0 ) $. $}
fresh-in-mu-shadowed $a #Fresh X ( \mu X ph0 ) $.
${ $d xX ph0 $.
   fresh-disjoint $a #Fresh xX ph0 $. $}
${ fresh-in-substitution.0 $e #Fresh xX ph1 $.
   fresh-in-substitution.1 $e #Substitution ph2 ph0 ph1 xX $.
   fresh-in-substitution $a #Fresh xX ph2 $. $}
${ fresh-after-substitution.0 $e #Fresh xX ph0 $.
   fresh-after-substitution.1 $e #Fresh xX ph1 $.
   fresh-after-substitution.2 $e #Substitution ph2 ph0 ph1 yY $.
   fresh-after-substitution $a #Fresh xX ph2 $. $}
substitution-var-same $a #Substitution ph0 xX ph0 xX $.
${ $d xX yY $.
   substitution-var-diff $a #Substitution yY yY ph0 xX $. $}
substitution-symbol $a #Substitution sg0 sg0 ph0 xX $.
substitution-bot $a #Substitution \bot \bot ph0 xX $.
${ substitution-imp.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-imp.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-imp $a #Substitution ( \imp ph1 ph2 ) ( \imp ph3 ph4 ) ph0 xX $. $}
${ substitution-app.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-app.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-app $a #Substitution ( \app ph1 ph2 ) ( \app ph3 ph4 ) ph0 xX $. $}
substitution-exists-shadowed $a #Substitution ( \exists x ph1 ) ( \exists x ph1 ) ph0 x $.
${ $d xX x $.
   $d y ph0 $.
   substitution-exists.0 $e #Substitution ph2 ph1 y x $.
   substitution-exists.1 $e #Substitution ph3 ph2 ph0 xX $.
   substitution-exists $a #Substitution ( \exists y ph3 ) ( \exists x ph1 ) ph0 xX $. $}
substitution-mu-shadowed $a #Substitution ( \mu X ph1 ) ( \mu X ph1 ) ph0 X $.
${ $d xX X $.
   $d Y ph0 $.
   substitution-mu.0 $e #Substitution ph2 ph1 Y X $.
   substitution-mu.1 $e #Substitution ph3 ph2 ph0 xX $.
   substitution-mu $a #Substitution ( \mu Y ph3 ) ( \mu X ph1 ) ph0 xX $. $}
substitution-identity $a #Substitution ph0 ph0 xX xX $.
${ yY-free-in-ph0 $e #Fresh yY ph0 $.
   ph1-definition $e #Substitution ph1 ph0 yY xX $.
   ${ substitution-fold.0 $e #Substitution ph2 ph1 ph3 yY $.
      substitution-fold $a #Substitution ph2 ph0 ph3 xX $. $}
   ${ substitution-unfold.0 $e #Substitution ph2 ph0 ph3 xX $.
      substitution-unfold $a #Substitution ph2 ph1 ph3 yY $. $} $}
${ substitution-inverse.0 $e #Fresh xX ph0 $.
   substitution-inverse.1 $e #Substitution ph1 ph0 xX yY $.
   substitution-inverse $a #Substitution ph0 ph1 yY xX $. $}
${ substitution-fresh.0 $e #Fresh xX ph0 $.
   substitution-fresh $a #Substitution ph0 ph0 ph1 xX $. $}
application-context-var $a #ApplicationContext xX xX $.
${ $d xX ph1 $.
   application-context-app-left.0 $e #ApplicationContext xX ph0 $.
   application-context-app-left $a #ApplicationContext xX ( \app ph0 ph1 ) $. $}
${ $d xX ph0 $.
   application-context-app-right.0 $e #ApplicationContext xX ph1 $.
   application-context-app-right $a #ApplicationContext xX ( \app ph0 ph1 ) $. $}
notation-reflexivity $a #Notation ph0 ph0 $.
${ notation-symmetry.0 $e #Notation ph0 ph1 $.
   notation-symmetry $a #Notation ph1 ph0 $. $}
${ notation-transitivity.0 $e #Notation ph0 ph1 $.
   notation-transitivity.1 $e #Notation ph1 ph2 $.
   notation-transitivity $a #Notation ph0 ph2 $. $}
${ notation-positive.0 $e #Positive xX ph0 $.
   notation-positive.1 $e #Notation ph1 ph0 $.
   notation-positive $a #Positive xX ph1 $. $}
${ notation-negative.0 $e #Negative xX ph0 $.
   notation-negative.1 $e #Notation ph1 ph0 $.
   notation-negative $a #Negative xX ph1 $. $}
${ notation-fresh.0 $e #Fresh xX ph0 $.
   notation-fresh.1 $e #Notation ph1 ph0 $.
   notation-fresh $a #Fresh xX ph1 $. $}
${ notation-substitution.0 $e #Substitution ph0 ph1 ph2 xX $.
   notation-substitution.1 $e #Notation ph3 ph0 $.
   notation-substitution.2 $e #Notation ph4 ph1 $.
   notation-substitution.3 $e #Notation ph5 ph2 $.
   notation-substitution $a #Substitution ph3 ph4 ph5 xX $. $}
${ notation-notation.0 $e #Notation ph0 ph1 $.
   notation-notation.1 $e #Notation ph2 ph0 $.
   notation-notation.2 $e #Notation ph3 ph1 $.
   notation-notation $p #Notation ph2 ph3 $= ( notation-transitivity notation-symmetry ) CADFABDEDBGIHH $. $}
${ notation-application-context.0 $e #ApplicationContext xX ph0 $.
   notation-application-context.1 $e #Notation ph1 ph0 $.
   notation-application-context $a #ApplicationContext xX ph1 $. $}
${ notation-proof.0 $e |- ph0 $.
   notation-proof.1 $e #Notation ph1 ph0 $.
   notation-proof $a |- ph1 $. $}
${ notation-imp.0 $e #Notation ph0 ph2 $.
   notation-imp.1 $e #Notation ph1 ph3 $.
   notation-imp $a #Notation ( \imp ph0 ph1 ) ( \imp ph2 ph3 ) $. $}
${ notation-app.0 $e #Notation ph0 ph2 $.
   notation-app.1 $e #Notation ph1 ph3 $.
   notation-app $a #Notation ( \app ph0 ph1 ) ( \app ph2 ph3 ) $. $}
${ notation-exists.0 $e #Notation ph0 ph1 $.
   notation-exists $a #Notation ( \exists x ph0 ) ( \exists x ph1 ) $. $}
${ notation-mu.0 $e #Notation ph0 ph1 $.
   notation-mu $a #Notation ( \mu X ph0 ) ( \mu X ph1 ) $. $}
$c \not $.
not-is-pattern $a #Pattern ( \not ph0 ) $.
not-is-sugar $a #Notation ( \not ph0 ) ( \imp ph0 \bot ) $.
$c \or $.
or-is-pattern $a #Pattern ( \or ph0 ph1 ) $.
or-is-sugar $a #Notation ( \or ph0 ph1 ) ( \imp ( \not ph0 ) ph1 ) $.
$c \and $.
and-is-pattern $a #Pattern ( \and ph0 ph1 ) $.
and-is-sugar $a #Notation ( \and ph0 ph1 ) ( \not ( \or ( \not ph0 ) ( \not ph1 ) ) ) $.
proof-rule-prop-1 $a |- ( \imp ph0 ( \imp ph1 ph0 ) ) $.
proof-rule-prop-2 $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \imp ph0 ph1 ) ( \imp ph0 ph2 ) ) ) $.
proof-rule-prop-3 $a |- ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ph0 ) $.
${ proof-rule-mp.0 $e |- ( \imp ph0 ph1 ) $.
   proof-rule-mp.1 $e |- ph0 $.
   proof-rule-mp $a |- ph1 $. $}
${ proof-rule-exists.0 $e #Substitution ph0 ph1 y x $.
   proof-rule-exists $a |- ( \imp ph0 ( \exists x ph1 ) ) $. $}
${ proof-rule-gen.0 $e |- ( \imp ph0 ph1 ) $.
   proof-rule-gen.1 $e #Fresh x ph1 $.
   proof-rule-gen $a |- ( \imp ( \exists x ph0 ) ph1 ) $. $}
${ proof-rule-propagation-bot.0 $e #ApplicationContext xX ph0 $.
   proof-rule-propagation-bot.1 $e #Substitution ph1 ph0 \bot xX $.
   proof-rule-propagation-bot $a |- ( \imp ph1 \bot ) $. $}
${ proof-rule-propagation-or.0 $e #ApplicationContext xX ph0 $.
   proof-rule-propagation-or.1 $e #Substitution ph1 ph0 ( \or ph4 ph5 ) xX $.
   proof-rule-propagation-or.2 $e #Substitution ph2 ph0 ph4 xX $.
   proof-rule-propagation-or.3 $e #Substitution ph3 ph0 ph5 xX $.
   proof-rule-propagation-or $a |- ( \imp ph1 ( \or ph2 ph3 ) ) $. $}
${ proof-rule-propagation-exists.0 $e #ApplicationContext xX ph0 $.
   proof-rule-propagation-exists.1 $e #Substitution ph1 ph0 ( \exists y ph3 ) xX $.
   proof-rule-propagation-exists.2 $e #Substitution ph2 ph0 ph3 xX $.
   proof-rule-propagation-exists.3 $e #Fresh y ph0 $.
   proof-rule-propagation-exists $a |- ( \imp ph1 ( \exists y ph2 ) ) $. $}
${ proof-rule-frame.0 $e #ApplicationContext xX ph0 $.
   proof-rule-frame.1 $e #Substitution ph1 ph0 ph3 xX $.
   proof-rule-frame.2 $e #Substitution ph2 ph0 ph4 xX $.
   proof-rule-frame.3 $e |- ( \imp ph3 ph4 ) $.
   proof-rule-frame $a |- ( \imp ph1 ph2 ) $. $}
${ proof-rule-prefixpoint.0 $e #Substitution ph0 ph1 ( \mu X ph1 ) X $.
   proof-rule-prefixpoint $a |- ( \imp ph0 ( \mu X ph1 ) ) $. $}
${ proof-rule-kt.0 $e #Substitution ph0 ph1 ph2 X $.
   proof-rule-kt.1 $e |- ( \imp ph0 ph2 ) $.
   proof-rule-kt $a |- ( \imp ( \mu X ph1 ) ph2 ) $. $}
${ proof-rule-set-var-substitution.0 $e #Substitution ph0 ph1 ph2 X $.
   proof-rule-set-var-substitution.1 $e |- ph1 $.
   proof-rule-set-var-substitution $a |- ph0 $. $}
proof-rule-existence $a |- ( \exists x x ) $.
${ proof-rule-singleton.0 $e #ApplicationContext xX ph0 $.
   proof-rule-singleton.1 $e #ApplicationContext yY ph1 $.
   proof-rule-singleton.2 $e #Substitution ph3 ph0 ( \and x ph2 ) xX $.
   proof-rule-singleton.3 $e #Substitution ph4 ph1 ( \and x ( \not ph2 ) ) yY $.
   proof-rule-singleton $a |- ( \not ( \and ph3 ph4 ) ) $. $}
$v x0 x1 x2 x3 $.
x0-is-element-var $f #ElementVariable x0 $.
x1-is-element-var $f #ElementVariable x1 $.
x2-is-element-var $f #ElementVariable x2 $.
x3-is-element-var $f #ElementVariable x3 $.
$v s0 s1 s2 s3 $.
s0-is-element-var $f #ElementVariable s0 $.
s1-is-element-var $f #ElementVariable s1 $.
s2-is-element-var $f #ElementVariable s2 $.
s3-is-element-var $f #ElementVariable s3 $.
$c \top $.
top-is-pattern $a #Pattern \top $.
top-is-sugar $a #Notation \top ( \not \bot ) $.
$c \iff $.
iff-is-pattern $a #Pattern ( \iff ph0 ph1 ) $.
iff-is-sugar $a #Notation ( \iff ph0 ph1 ) ( \and ( \imp ph0 ph1 ) ( \imp ph1 ph0 ) ) $.
$c \forall $.
forall-is-pattern $a #Pattern ( \forall x ph0 ) $.
forall-is-sugar $a #Notation ( \forall x ph0 ) ( \not ( \exists x ( \not ph0 ) ) ) $.
$c \nu $.
${ nu-is-pattern.0 $e #Positive X ph0 $.
   nu-is-pattern $a #Pattern ( \nu X ph0 ) $. $}
${ nu-is-sugar.0 $e #Substitution ph0 ph1 ( \not X ) X $.
   nu-is-sugar $a #Notation ( \nu X ph1 ) ( \not ( \mu X ( \not ph0 ) ) ) $. $}
$c \definedness $.
definedness-is-symbol $a #Symbol \definedness $.
$c \ceil $.
ceil-is-pattern $a #Pattern ( \ceil ph0 ) $.
ceil-is-sugar $a #Notation ( \ceil ph0 ) ( \app \definedness ph0 ) $.
axiom-definedness $a |- ( \ceil x ) $.
$c \floor $.
floor-is-pattern $a #Pattern ( \floor ph0 ) $.
floor-is-sugar $a #Notation ( \floor ph0 ) ( \not ( \ceil ( \not ph0 ) ) ) $.
$c \in $.
in-is-pattern $a #Pattern ( \in x ph0 ) $.
in-is-sugar $a #Notation ( \in x ph0 ) ( \ceil ( \and x ph0 ) ) $.
$c \included $.
included-is-pattern $a #Pattern ( \included ph0 ph1 ) $.
included-is-sugar $a #Notation ( \included ph0 ph1 ) ( \floor ( \imp ph0 ph1 ) ) $.
$c \eq $.
eq-is-pattern $a #Pattern ( \eq ph0 ph1 ) $.
eq-is-sugar $a #Notation ( \eq ph0 ph1 ) ( \floor ( \iff ph0 ph1 ) ) $.
${ eq-elim.0 $e #Substitution ph2 ph4 ph0 x $.
   eq-elim.1 $e #Substitution ph3 ph4 ph1 x $.
   eq-elim $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ph2 ph3 ) ) $. $}
$c \sort $.
sort-is-symbol $a #Symbol \sort $.
$c \inhabitant $.
inhabitant-is-symbol $a #Symbol \inhabitant $.
$c \inh $.
inh-is-pattern $a #Pattern ( \inh ph0 ) $.
inh-is-sugar $a #Notation ( \inh ph0 ) ( \app \inhabitant ph0 ) $.
$c \in-sort $.
in-sort-is-pattern $a #Pattern ( \in-sort ph0 ph1 ) $.
in-sort-is-sugar $a #Notation ( \in-sort ph0 ph1 ) ( \included ph0 ( \inh ph1 ) ) $.
inh-sort-nonempty $a |- ( \exists x ( \in-sort x \sort ) ) $.
$c \sorted-forall $.
sorted-forall-is-pattern $a #Pattern ( \sorted-forall x ph0 ph1 ) $.
sorted-forall-is-sugar $a #Notation ( \sorted-forall x ph0 ph1 ) ( \forall x ( \imp ( \in-sort x ph0 ) ph1 ) ) $.
$c \sorted-exists $.
sorted-exists-is-pattern $a #Pattern ( \sorted-exists x ph0 ph1 ) $.
sorted-exists-is-sugar $a #Notation ( \sorted-exists x ph0 ph1 ) ( \exists x ( \and ( \in-sort x ph0 ) ph1 ) ) $.
$c \forall-sort $.
forall-sort-is-pattern $a #Pattern ( \forall-sort s0 ph0 ) $.
forall-sort-is-sugar $a #Notation ( \forall-sort s0 ph0 ) ( \sorted-forall s0 \sort ph0 ) $.
$c \exists-sort $.
exists-sort-is-pattern $a #Pattern ( \exists-sort s0 ph0 ) $.
exists-sort-is-sugar $a #Notation ( \exists-sort s0 ph0 ) ( \sorted-exists s0 \sort ph0 ) $.
$c \is-singleton $.
is-singleton-is-pattern $a #Pattern ( \is-singleton ph0 ) $.
${ $d x ph0 $.
   is-singleton-is-sugar $a #Notation ( \is-singleton ph0 ) ( \exists x ( \eq x ph0 ) ) $. $}
$c \is-top $.
is-top-is-pattern $a #Pattern ( \is-top ph0 ) $.
is-top-is-sugar $a #Notation ( \is-top ph0 ) ( \eq ph0 \top ) $.
$c \is-bot $.
is-bot-is-pattern $a #Pattern ( \is-bot ph0 ) $.
is-bot-is-sugar $a #Notation ( \is-bot ph0 ) ( \eq ph0 \bot ) $.
$c \is-predicate $.
is-predicate-is-pattern $a #Pattern ( \is-predicate ph0 ) $.
is-predicate-is-sugar $a #Notation ( \is-predicate ph0 ) ( \or ( \is-top ph0 ) ( \is-bot ph0 ) ) $.
$c \is-singleton-or-bot $.
is-singleton-or-bot-is-pattern $a #Pattern ( \is-singleton-or-bot ph0 ) $.
is-singleton-or-bot-is-sugar $a #Notation ( \is-singleton-or-bot ph0 ) ( \or ( \is-singleton ph0 ) ( \is-bot ph0 ) ) $.
$c \is-constant $.
is-constant-is-pattern $a #Pattern ( \is-constant ph0 ph1 ) $.
${ $d x ph0 $.
   $d x ph1 $.
   is-constant-is-sugar $a #Notation ( \is-constant ph0 ph1 ) ( \sorted-exists x ph1 ( \eq ph0 x ) ) $. $}
$c \is-unary-function $.
is-unary-function-is-pattern $a #Pattern ( \is-unary-function ph0 ph1 ph2 ) $.
${ $d x y ph0 $.
   $d x y ph1 $.
   $d x y ph2 $.
   is-unary-function-is-sugar $a #Notation ( \is-unary-function ph0 ph1 ph2 ) ( \sorted-forall x ph1 ( \sorted-exists y ph2 ( \eq ( \app ph0 x ) y ) ) ) $. $}
$c \is-binary-function $.
is-binary-function-is-pattern $a #Pattern ( \is-binary-function ph0 ph1 ph2 ph3 ) $.
${ $d x y z ph0 $.
   $d x y z ph1 $.
   $d x y z ph2 $.
   $d x y z ph3 $.
   is-binary-function-is-sugar $a #Notation ( \is-binary-function ph0 ph1 ph2 ph3 ) ( \sorted-forall x ph1 ( \sorted-forall y ph2 ( \sorted-exists z ph3 ( \eq ( \app ph0 x y ) z ) ) ) ) $. $}
$c \unit-sort $.
unit-sort-is-symbol $a #Symbol \unit-sort $.
unit-sort-is-sort $a |- ( \exists-sort x ( \eq x \unit-sort ) ) $.
$c \unit $.
unit-is-pattern $a #Symbol \unit $.
unit-is-singleton $a |- ( \is-singleton \unit ) $.
unit-sort $a |- ( \eq \unit ( \inh \unit-sort ) ) $.
$c \pair-sort-symbol $.
pair-sort-symbol-is-symbol $a #Symbol \pair-sort-symbol $.
axiom-pair-sort-is-sort $a |- ( \is-binary-function \pair-sort-symbol \sort \sort \sort ) $.
$c \pair-sort $.
pair-sort-is-pattern $a #Pattern ( \pair-sort ph0 ph1 ) $.
pair-sort-is-sugar $a #Notation ( \pair-sort ph0 ph1 ) ( \app ( \app \pair-sort-symbol ph0 ) ph1 ) $.
$c \pair-symbol $.
pair-symbol-is-symbol $a #Symbol \pair-symbol $.
axiom-pair-symbol-is-binary-function $a ( \forall-sort s0 ( \forall-sort s1 ( \is-binary-function \pair-symbol s0 s1 ( \pair-sort s0 s1 ) ) ) ) $.
$c \pair $.
pair-is-pattern $a #Pattern ( \pair ph0 ph1 ) $.
pair-is-sugar $a #Notation ( \pair ph0 ph1 ) ( \app ( \app \pair-symbol ph0 ) ph1 ) $.
$c \pair-fst-symbol $.
pair-fst-symbol-is-symbol $a #Symbol \pair-fst-symbol $.
axiom-pair-fst-symbol-is-unary-function $a ( \forall-sort s0 ( \forall-sort s1 ( \is-unary-function \pair-fst-symbol ( \pair-sort s0 s1 ) s0 ) ) ) $.
$c \pair-fst $.
pair-fst-is-pattern $a #Pattern ( \pair-fst ph0 ) $.
pair-fst-is-sugar $a #Notation ( \pair-fst ph0 ) ( \app \pair-fst-symbol ph0 ) $.
$c \pair-snd-symbol $.
pair-snd-symbol-is-symbol $a #Symbol \pair-snd-symbol $.
axiom-pair-snd-symbol-is-unary-function $a ( \forall-sort s0 ( \forall-sort s1 ( \is-unary-function \pair-snd-symbol ( \pair-sort s0 s1 ) s1 ) ) ) $.
$c \pair-snd $.
pair-snd-is-pattern $a #Pattern ( \pair-snd ph0 ) $.
pair-snd-is-sugar $a #Notation ( \pair-snd ph0 ) ( \app \pair-snd-symbol ph0 ) $.
axiom-pair-fst $a |- ( \forall-sort s0 ( \forall-sort s1 ( \sorted-forall x0 s0 ( \sorted-forall x1 s2 ( \eq ( \pair-fst ( \pair x1 x2 ) ) x1 ) ) ) ) ) $.
axiom-pair-snd $a |- ( \forall-sort s0 ( \forall-sort s1 ( \sorted-forall x0 s0 ( \sorted-forall x1 s2 ( \eq ( \pair-snd ( \pair x1 x2 ) ) x2 ) ) ) ) ) $.
axiom-pair-inj $a |- ( \forall-sort s0 ( \forall-sort s1 ( \sorted-forall x0 s0 ( \sorted-forall x1 s2 ( \sorted-forall x2 s0 ( \sorted-forall x3 s2 ( \imp ( \eq ( \pair x0 x1 ) ( \pair x2 x3 ) ) ( \and ( \eq x0 x2 ) ( \eq x1 x3 ) ) ) ) ) ) ) ) ) $.
axiom-pair-sort-inh $a |- ( \forall-sort s0 ( \forall-sort s1 ( \eq ( \inh ( \pair-sort s0 s1 ) ) ( \pair ( \inh s0 ) ( \inh s1 ) ) ) ) ) $.
imp-reflexivity $p |- ( \imp ph0 ph0 ) $= ( imp-is-pattern proof-rule-prop-1 proof-rule-mp proof-rule-prop-2 ) AAABBAABAAABABBAAABBAABBAAABAEAAABCDAACD $.
${ rule-imp-transitivity.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-transitivity.1 $e |- ( \imp ph1 ph2 ) $.
   rule-imp-transitivity $p |- ( \imp ph0 ph2 ) $= ( imp-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 ) ABFACFABCFFABFACFFABCHBCFABCFFBCFAIEGGDG $. $}
imp-transitivity $p |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph1 ph2 ) ( \imp ph0 ph2 ) ) ) $= ( imp-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 imp-reflexivity ) ABDBCDABDDDABDBCDACDDDABDBCDABDDBCDACDDDDABDBCDABDDDABDBCDACDDDDABDBCDABDDBCDACDDFABDBCDABDACDDDDABDBCDABDDBCDACDDDDABDBCDABDACDDDBCDABDDBCDACDDDDDABDBCDABDACDDDDABDBCDABDDBCDACDDDDDABDBCDABDACDDDBCDABDDBCDACDDDFBCDABDACDDDBCDABDDBCDACDDDDABDBCDABDACDDDBCDABDDBCDACDDDDDBCDABDACDDDBCDABDDBCDACDDDDABDGBCDABDACDFEEABDBCDABCDDDDABDBCDABDACDDDDABDBCDABCDDDBCDABDACDDDDDABDBCDABCDDDDABDBCDABDACDDDDDABDBCDABCDDDBCDABDACDDDFABDBCDABCDDABDACDDDDDABDBCDABCDDDBCDABDACDDDDDABDBCDABCDDABDACDDDDBCDABCDDDBCDABDACDDDDDDABDBCDABCDDABDACDDDDDABDBCDABCDDDBCDABDACDDDDDDABDBCDABCDDABDACDDDDBCDABCDDDBCDABDACDDDDFBCDABCDDABDACDDDDBCDABCDDDBCDABDACDDDDDABDBCDABCDDABDACDDDDBCDABCDDDBCDABDACDDDDDDBCDABCDDABDACDDDDBCDABCDDDBCDABDACDDDDDABDGBCDABCDDABDACDDFEEABDABCDDABDACDDDDABDBCDABCDDABDACDDDDDABDABCDDABDACDDDBCDABCDDABDACDDDDDDABDABCDDABDACDDDDABDBCDABCDDABDACDDDDDDABDABCDDABDACDDDBCDABCDDABDACDDDDFABCDDABDACDDDBCDABCDDABDACDDDDDABDABCDDABDACDDDBCDABCDDABDACDDDDDDABCDDABDACDDDBCDABCDDABDACDDDDDABDGABCDDABDACDDDBCDGEEABCDDABDACDDDABDABCDDABDACDDDDABCDDABDACDDDABDGABCFEEEEABDBCDBCDDDABDBCDABCDDDDABDBCDBCDDBCDABCDDDDDABDBCDBCDDDABDBCDABCDDDDDABDBCDBCDDBCDABCDDDFABDBCDBCDABCDDDDDABDBCDBCDDBCDABCDDDDDABDBCDBCDABCDDDDBCDBCDDBCDABCDDDDDDABDBCDBCDABCDDDDDABDBCDBCDDBCDABCDDDDDDABDBCDBCDABCDDDDBCDBCDDBCDABCDDDDFBCDBCDABCDDDDBCDBCDDBCDABCDDDDDABDBCDBCDABCDDDDBCDBCDDBCDABCDDDDDDBCDBCDABCDDDDBCDBCDDBCDABCDDDDDABDGBCDBCDABCDDFEEABDBCDABCDDDDABDBCDBCDABCDDDDDABDBCDABCDDDBCDBCDABCDDDDDDABDBCDABCDDDDABDBCDBCDABCDDDDDDABDBCDABCDDDBCDBCDABCDDDDFBCDABCDDDBCDBCDABCDDDDDABDBCDABCDDDBCDBCDABCDDDDDDBCDABCDDDBCDBCDABCDDDDDABDGBCDABCDDDBCDGEEBCDABCDDDABDBCDABCDDDDBCDABCDDDABDGBCDAGEEEEBCDBCDDABDBCDBCDDDBCDBCDDABDGBCDHEEEEEABDABDDABDBCDABDDDABDABDBCDABDDDDABDABDDABDBCDABDDDDABDABDBCDABDDFABDBCDABDDDABDABDBCDABDDDDABDBCDABDDDABDGABDBCDGEEABDHEE $.
bot-elim $p |- ( \imp \bot ph0 ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-1 proof-rule-prop-2 proof-rule-prop-3 ) CACBCBBCABCACBCBABBCACBCBBCABBCACBCBAFACBCBABCACBCBABBACBCBABCEAGDDCACBED $.
contradiction $p |- ( \imp ( \imp ( \not ph0 ) \bot ) ph0 ) $= ( bot-is-pattern imp-is-pattern not-is-pattern notation-reflexivity notation-imp proof-rule-prop-3 not-is-sugar notation-symmetry notation-transitivity notation-proof ) ABCBCACADBCACAGADBCAABCBCAADBABCBADABCABCAHABCABCABCEIJBEFAEFK $.
top-intro $p |- \top $= ( bot-is-pattern imp-is-pattern not-is-pattern notation-symmetry top-is-pattern notation-transitivity imp-reflexivity top-is-sugar not-is-sugar notation-reflexivity notation-proof ) AABEAGEACAABHAABACACAABACAABAABAIAABAABAABJDFDDFK $.
mp $p |- ( \imp ph0 ( \imp ( \imp ph0 ph1 ) ph1 ) ) $= ( imp-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 imp-reflexivity ) AABCACCAABCBCCAABCACABCBCCCAABCACCAABCBCCCAABCACABCBCEAABCABCCCAABCACABCBCCCAABCABCCABCACABCBCCCCAABCABCCCAABCACABCBCCCCAABCABCCABCACABCBCCEABCABCCABCACABCBCCCAABCABCCABCACABCBCCCCABCABCCABCACABCBCCCAFABCABEDDABCABCCAABCABCCCABCABCCAFABCGDDDAABCFD $.
not-elim $p |- ( \imp ph0 ( \imp ( \imp ph0 \bot ) \bot ) ) $= ( bot-is-pattern mp ) ABC $.
or-intro-left $p |- ( \imp ph0 ( \imp ( \imp ph0 \bot ) ph1 ) ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 bot-elim not-elim ) AADCDCCAADCBCCAADCDCADCBCCCAADCDCCAADCBCCCAADCDCADCBCFAADCDBCCCAADCDCADCBCCCAADCDBCCADCDCADCBCCCCAADCDBCCCAADCDCADCBCCCCAADCDBCCADCDCADCBCCFADCDBCCADCDCADCBCCCAADCDBCCADCDCADCBCCCCADCDBCCADCDCADCBCCCAGADCDBFEEADCDBCCAADCDBCCCADCDBCCAGDBCADCDBCCDBCADCGBHEEEEAIE $.
contrapositive $p |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph1 \bot ) ( \imp ph0 \bot ) ) ) $= ( bot-is-pattern imp-transitivity ) ABCD $.
${ rule-contrapositive.0 $e |- ( \imp ph0 ph1 ) $.
   rule-contrapositive $p |- ( \imp ( \imp ph1 \bot ) ( \imp ph0 \bot ) ) $= ( imp-is-pattern bot-is-pattern contrapositive proof-rule-mp ) ABDBEDAEDDABFCG $. $}
and-elim-left $p |- ( \imp ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ph0 ) $= ( imp-is-pattern bot-is-pattern or-intro-left rule-contrapositive proof-rule-prop-3 rule-imp-transitivity ) ADCDCBDCCDCADCDCAADCADCDCBDCCADCBDCEFAGH $.
and-elim-right $p |- ( \imp ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ph1 ) $= ( imp-is-pattern bot-is-pattern proof-rule-prop-1 rule-contrapositive proof-rule-prop-3 rule-imp-transitivity ) ADCDCBDCCDCBDCDCBBDCADCDCBDCCBDCADCDCEFBGH $.
not-elim-alt $p |- ( \imp ( \imp ph0 \bot ) ( \imp ph0 ph1 ) ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 imp-reflexivity bot-elim ) ADCADCCADCABCCADCADCABCCCADCADCCADCABCCCADCADCABCFADCADBCCCADCADCABCCCADCADBCCADCABCCCCADCADBCCCADCADCABCCCCADCADBCCADCABCCFADBCCADCABCCCADCADBCCADCABCCCCADBCCADCABCCCADCGADBFEEADCDBCCADCADBCCCADCDBCADBCCCCADCDBCCADCADBCCCCADCDBCADBCCFDBCADBCCCADCDBCADBCCCCDBCADBCCCADCGDBCAGEEDBCADCDBCCDBCADCGBIEEEEADCAACCADCADCCADCAACADCCCADCAACCADCADCCCADCAACADCFADCAADCCCADCAACADCCCADCAADCCAACADCCCCADCAADCCCADCAACADCCCCADCAADCCAACADCCFAADCCAACADCCCADCAADCCAACADCCCCAADCCAACADCCCADCGAADFEEADCADCCADCAADCCCADCADCAADCCCCADCADCCADCAADCCCCADCADCAADCCFADCAADCCCADCADCAADCCCCADCAADCCCADCGADCAGEEADCHEEEAACADCAACCAACADCGAHEEE $.
${ rule-peirce-bot.0 $e |- ( \imp ( \imp ph0 \bot ) ph0 ) $.
   rule-peirce-bot $p |- ph0 $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-3 proof-rule-prop-2 imp-reflexivity ) ADCDCAAFADCACADCDCADCADCCADCACADCDCCADCADGADCHEBEE $. $}
peirce-bot $p |- ( \imp ( \imp ( \imp ph0 \bot ) ph0 ) ph0 ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 imp-reflexivity proof-rule-prop-3 ) ACBABACBCBBACBABABACBABACBCBABBACBABACBCBBACBABABBACBABACBCBAEACBCBABACBABACBCBABBACBCBABACBABFAHDDACBABACBABBACBABACBCBBACBABACBABACBCBBBACBABACBABBACBABACBCBBBACBABACBABACBCBEACBABACBACBBBACBABACBABACBCBBBACBABACBACBBACBABACBCBBBBACBABACBACBBBACBABACBABACBCBBBBACBABACBACBBACBABACBCBBEACBACBBACBABACBCBBBACBABACBACBBACBABACBCBBBBACBACBBACBABACBCBBBACBABFACBACEDDACBACBBACBABACBACBBBACBACBBACBABFACBGDDDACBABGDD $.
${ rule-peirce.0 $e |- ( \imp ( \imp ph0 ph1 ) ph0 ) $.
   rule-peirce $p |- ph0 $= ( imp-is-pattern bot-is-pattern proof-rule-mp peirce-bot imp-transitivity not-elim-alt ) AEDADAAGABDADAEDADAEDABDDABDADAEDADDAEDABDAHABIFCFF $. $}
peirce $p |- ( \imp ( \imp ( \imp ph0 ph1 ) ph0 ) ph0 ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 peirce-bot imp-transitivity not-elim-alt imp-reflexivity ) ABCACADCACCABCACACABCACADCACACCABCACADCACCABCACACCABCACADCACAFADCACACABCACADCACACCADCACACABCACGAHEEABCACABCACCABCACADCACCABCACABCACADCACCCABCACABCACCABCACADCACCCABCACABCACADCACFABCACADCABCCCABCACABCACADCACCCABCACADCABCCABCACADCACCCCABCACADCABCCCABCACABCACADCACCCCABCACADCABCCABCACADCACCFADCABCCABCACADCACCCABCACADCABCCABCACADCACCCCADCABCCABCACADCACCCABCACGADCABCAIEEADCABCCABCACADCABCCCADCABCCABCACGABJEEEABCACKEE $.
${ rule-or-elim-alt.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim-alt.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim-alt.2 $e |- ( \imp ( \imp ph0 \bot ) ph1 ) $.
   rule-or-elim-alt $p |- ph2 $= ( imp-is-pattern bot-is-pattern proof-rule-mp imp-transitivity peirce-bot contrapositive ) CHGCGCCKAHGCGCHGCGCHGAHGGAHGCGCHGCGGCHGAHGCJACGCHGAHGGACLDIIBCGAHGCGAHGBGBCGAHGCGGAHGBCJFIEIII $. $}
${ rule-or-elim.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim $p |- ( \imp ( \imp ( \imp ph0 \bot ) ph1 ) ph2 ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 imp-transitivity peirce-bot contrapositive imp-reflexivity ) AGFBFCGFCFFAGFBFCFAGFBFCGFCFCFFAGFBFCGFCFFAGFBFCFFAGFBFCGFCFCICGFCFCFAGFBFCGFCFCFFCGFCFCFAGFBFJCLHHAGFBFAGFCFFAGFBFCGFCFFAGFBFAGFCFCGFCFFFAGFBFAGFCFFAGFBFCGFCFFFAGFBFAGFCFCGFCFIAGFBFCGFAGFFFAGFBFAGFCFCGFCFFFAGFBFCGFAGFFAGFCFCGFCFFFFAGFBFCGFAGFFFAGFBFAGFCFCGFCFFFFAGFBFCGFAGFFAGFCFCGFCFFICGFAGFFAGFCFCGFCFFFAGFBFCGFAGFFAGFCFCGFCFFFFCGFAGFFAGFCFCGFCFFFAGFBFJCGFAGFCKHHAGFBFACFFAGFBFCGFAGFFFAGFBFACFCGFAGFFFFAGFBFACFFAGFBFCGFAGFFFFAGFBFACFCGFAGFFIACFCGFAGFFFAGFBFACFCGFAGFFFFACFCGFAGFFFAGFBFJACMHHACFAGFBFACFFACFAGFBFJDHHHHAGFBFBCFFAGFBFAGFCFFAGFBFBCFAGFCFFFAGFBFBCFFAGFBFAGFCFFFAGFBFBCFAGFCFIAGFBFAGFBFFAGFBFBCFAGFCFFFAGFBFAGFBFBCFAGFCFFFFAGFBFAGFBFFAGFBFBCFAGFCFFFFAGFBFAGFBFBCFAGFCFFIAGFBFBCFAGFCFFFAGFBFAGFBFBCFAGFCFFFFAGFBFBCFAGFCFFFAGFBFJAGFBCKHHAGFBFNHHBCFAGFBFBCFFBCFAGFBFJEHHHH $. $}
or-elim $p |- ( \imp ( \imp ph0 ph2 ) ( \imp ( \imp ph1 ph2 ) ( \imp ( \imp ( \imp ph0 \bot ) ph1 ) ph2 ) ) ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 imp-reflexivity imp-transitivity peirce-bot contrapositive )  $.
${ rule-and-intro-alt.0 $e |- ph0 $.
   rule-and-intro-alt $p |- ( \imp ph1 ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp not-elim imp-transitivity contrapositive or-elim not-elim-alt imp-reflexivity ) BEDEDAEDEDBEDDEDDBAEDEDBEDDEDDBBEDEDDBEDEDAEDEDBEDDEDDBAEDEDBEDDEDDDBBEDEDAEDEDBEDDEDHBGFAEDEDBEDDBEDDBEDEDAEDEDBEDDEDDAEDEDBEDDBEDIBEDBEDDAEDEDBEDDBEDDAEDBEDDBEDBEDDAEDEDBEDDBEDDDAEDBEDBEDJAEDEDAEDBEDDAEDBEDKAAEDEDAGCFFFBEDLFFF $. $}
and-intro $p |- ( \imp ph0 ( \imp ph1 ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) ) ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 not-elim imp-reflexivity imp-transitivity contrapositive or-elim not-elim-alt ) ABDCDCADCDCBDCCDCCCABADCDCBDCCDCCCABDCDCADCDCBDCCDCCBADCDCBDCCDCCCCABDCDCADCDCBDCCDCCCABADCDCBDCCDCCCCABDCDCADCDCBDCCDCCBADCDCBDCCDCCFABBDCDCCCABDCDCADCDCBDCCDCCBADCDCBDCCDCCCCABBDCDCCBDCDCADCDCBDCCDCCBADCDCBDCCDCCCCCABBDCDCCCABDCDCADCDCBDCCDCCBADCDCBDCCDCCCCCABBDCDCCBDCDCADCDCBDCCDCCBADCDCBDCCDCCCFBBDCDCCBDCDCADCDCBDCCDCCBADCDCBDCCDCCCCABBDCDCCBDCDCADCDCBDCCDCCBADCDCBDCCDCCCCCBBDCDCCBDCDCADCDCBDCCDCCBADCDCBDCCDCCCCAGBBDCDCADCDCBDCCDCJEEBBDCDCCABBDCDCCCBBDCDCCAGBHEEEAADCDCBDCCBDCCCABDCDCADCDCBDCCDCCCAADCDCBDCCBDCCBDCDCADCDCBDCCDCCCCAADCDCBDCCBDCCCABDCDCADCDCBDCCDCCCCAADCDCBDCCBDCCBDCDCADCDCBDCCDCCFADCDCBDCCBDCCBDCDCADCDCBDCCDCCCAADCDCBDCCBDCCBDCDCADCDCBDCCDCCCCADCDCBDCCBDCCBDCDCADCDCBDCCDCCCAGADCDCBDCCBDCKEEABDCBDCCCAADCDCBDCCBDCCCABDCBDCCADCDCBDCCBDCCCCABDCBDCCCAADCDCBDCCBDCCCCABDCBDCCADCDCBDCCBDCCFAADCBDCCCABDCBDCCADCDCBDCCBDCCCCAADCBDCCBDCBDCCADCDCBDCCBDCCCCCAADCBDCCCABDCBDCCADCDCBDCCBDCCCCCAADCBDCCBDCBDCCADCDCBDCCBDCCCFADCBDCCBDCBDCCADCDCBDCCBDCCCCAADCBDCCBDCBDCCADCDCBDCCBDCCCCCADCBDCCBDCBDCCADCDCBDCCBDCCCCAGADCBDCBDCLEEAADCDCCAADCBDCCCAADCDCADCBDCCCCAADCDCCAADCBDCCCCAADCDCADCBDCCFADCDCADCBDCCCAADCDCADCBDCCCCADCDCADCBDCCCAGADCBDCMEEAACAADCDCCAAADCDCCCAACAADCDCCCAAADCDCFAADCDCCAAADCDCCCAADCDCCAGAHEEAIEEEEBDCBDCCABDCBDCCCBDCBDCCAGBDCIEEEE $.
${ rule-and-intro.0 $e |- ph0 $.
   rule-and-intro.1 $e |- ph1 $.
   rule-and-intro $p |- ( \imp ( \imp ( \imp ( \imp ph0 \bot ) \bot ) ( \imp ph1 \bot ) ) \bot ) $= ( imp-is-pattern bot-is-pattern proof-rule-mp and-intro ) BAFEFEBFEEFEABAFEFEBFEEFEEABHCGDG $. $}
and-elim-left-sugar $p |- ( \imp ( \and ph0 ph1 ) ph0 ) $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-symmetry or-is-pattern notation-transitivity notation-reflexivity not-is-sugar notation-imp and-is-pattern and-elim-left and-is-sugar or-is-sugar notation-proof ) ADCDCBDCCDCACABLACABMABLAADCDCBDCCDCAABLAEBEGEADCDCBDCCDCABNADCDCBDCCDCAEBEGEAEBEGEADCDCBDCCDCAEBEGEAEBEGDCADCDCBDCCDCAEBEGJADCDCBDCCDCAEBEGDCADCDCBDCCDAEBEGDAEBEGADCDCBDCCAEBEGAEEBECADCDCBDCCAEBEOADCDCBDCCAEEBECADCDCBDCAEEBEAEEADCDCAEEAEDCADCDCAEJADCDCAEDCADCDAEDAEADCAEADCADCAJADCADCADCIFHFDIKFHFBEBDCBEBDCBDCBJBDCBDCBDCIFHFKFHFDIKFHFFHAIKP $.
and-elim-right-sugar $p |- ( \imp ( \and ph0 ph1 ) ph1 ) $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-symmetry or-is-pattern notation-transitivity notation-reflexivity not-is-sugar notation-imp and-is-pattern and-elim-right and-is-sugar or-is-sugar notation-proof ) ADCDCBDCCDCBCABLBCABMABLBADCDCBDCCDCBABLAEBEGEADCDCBDCCDCABNADCDCBDCCDCAEBEGEAEBEGEADCDCBDCCDCAEBEGEAEBEGDCADCDCBDCCDCAEBEGJADCDCBDCCDCAEBEGDCADCDCBDCCDAEBEGDAEBEGADCDCBDCCAEBEGAEEBECADCDCBDCCAEBEOADCDCBDCCAEEBECADCDCBDCAEEBEAEEADCDCAEEAEDCADCDCAEJADCDCAEDCADCDAEDAEADCAEADCADCAJADCADCADCIFHFDIKFHFBEBDCBEBDCBDCBJBDCBDCBDCIFHFKFHFDIKFHFFHBIKP $.
and-intro-sugar $p |- ( \imp ph0 ( \imp ph1 ( \and ph0 ph1 ) ) ) $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-symmetry or-is-pattern notation-reflexivity notation-transitivity notation-imp and-is-pattern not-is-sugar and-intro and-is-sugar or-is-sugar notation-proof ) ABADCDCBDCCDCCCABABKCCABMABABKCABADCDCBDCCDCCAHBABKBADCDCBDCCDCBHABKAEBEGEADCDCBDCCDCABNADCDCBDCCDCAEBEGEAEBEGEADCDCBDCCDCAEBEGEAEBEGDCADCDCBDCCDCAEBEGLADCDCBDCCDCAEBEGDCADCDCBDCCDAEBEGDAEBEGADCDCBDCCAEBEGAEEBECADCDCBDCCAEBEOADCDCBDCCAEEBECADCDCBDCAEEBEAEEADCDCAEEAEDCADCDCAELADCDCAEDCADCDAEDAEADCAEADCADCALADCADCADCHFIFDHJFIFBEBDCBEBDCBDCBLBDCBDCBDCHFIFJFIFDHJFIFFIJJP $.
${ rule-and-intro-sugar.0 $e |- ph0 $.
   rule-and-intro-sugar.1 $e |- ph1 $.
   rule-and-intro-sugar $p |- ( \and ph0 ph1 ) $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-symmetry or-is-pattern notation-transitivity not-is-sugar notation-reflexivity notation-imp and-is-pattern rule-and-intro and-is-sugar or-is-sugar notation-proof ) AFEFEBFEEFEABNABCDOABNAGBGIGAFEFEBFEEFEABPAFEFEBFEEFEAGBGIGAGBGIGAFEFEBFEEFEAGBGIGAGBGIFEAFEFEBFEEFEAGBGIKAFEFEBFEEFEAGBGIFEAFEFEBFEEFAGBGIFAGBGIAFEFEBFEEAGBGIAGGBGEAFEFEBFEEAGBGQAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGKAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAKAFEAFEAFELHJHFLMHJHBGBFEBGBFEBFEBKBFEBFEBFELHJHMHJHFLMHJHHJR $. $}
${ rule-and-intro-alt2-sugar.0 $e |- ( \imp ph0 ph1 ) $.
   rule-and-intro-alt2-sugar.1 $e |- ( \imp ph0 ph2 ) $.
   rule-and-intro-alt2-sugar $p |- ( \imp ph0 ( \and ph1 ph2 ) ) $= ( imp-is-pattern and-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 and-intro-sugar ) ACFABCGFACBCGFFACFABCGFFACBCGIABFACBCGFFABCBCGFFFABFACBCGFFFABCBCGFIBCBCGFFABCBCGFFFBCBCGFFAJBCKHHDHHEH $. $}
or-intro-left-sugar $p |- ( \imp ph0 ( \or ph0 ph1 ) ) $= ( imp-is-pattern bot-is-pattern not-is-pattern or-is-pattern notation-reflexivity notation-symmetry notation-transitivity notation-imp or-intro-left or-is-sugar not-is-sugar notation-proof ) AADCBCCAABFCABKAABFAADCBCAGABFAEBCADCBCABLADCBCAEBCADCBAEBAEADCAEADCADCAMADCADCADCGHIHBGJHIJN $.
or-intro-right-sugar $p |- ( \imp ph0 ( \or ph1 ph0 ) ) $= ( imp-is-pattern bot-is-pattern not-is-pattern or-is-pattern notation-reflexivity notation-symmetry notation-transitivity notation-imp proof-rule-prop-1 or-is-sugar not-is-sugar notation-proof ) ABDCACCABAFCABDCKABAFABDCACAGBAFBEACBDCACBALBDCACBEACBDCABEABEBDCBEBDCBDCBMBDCBDCBDCGHIHAGJHIJN $.
${ rule-or-elim-alt-sugar.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim-alt-sugar.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim-alt-sugar.2 $e |- ( \or ph0 ph1 ) $.
   rule-or-elim-alt-sugar $p |- ph2 $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-symmetry or-is-pattern notation-reflexivity notation-transitivity or-is-sugar not-is-sugar notation-imp notation-proof rule-or-elim-alt ) ABCDEABKAHGBGFABKAHGBGABKAIBGAHGBGABNAHGBGAIBGAHGBAIBAIAHGAIAHGAHGAOAHGAHGAHGLJMJBLPJMJQR $. $}
${ rule-or-elim-sugar.0 $e |- ( \imp ph0 ph2 ) $.
   rule-or-elim-sugar.1 $e |- ( \imp ph1 ph2 ) $.
   rule-or-elim-sugar $p |- ( \imp ( \or ph0 ph1 ) ph2 ) $= ( imp-is-pattern bot-is-pattern not-is-pattern or-is-pattern notation-reflexivity notation-symmetry notation-transitivity notation-imp rule-or-elim or-is-sugar not-is-sugar notation-proof ) AGFBFCFABICFABCDENABICAGFBFCABIAHBFAGFBFABOAGFBFAHBFAGFBAHBAHAGFAHAGFAGFAPAGFAGFAGFJKLKBJMKLCJMQ $. $}
or-elim-sugar $p |- ( \imp ( \imp ph0 ph2 ) ( \imp ( \imp ph1 ph2 ) ( \imp ( \or ph0 ph1 ) ph2 ) ) ) $= ( imp-is-pattern bot-is-pattern or-is-pattern notation-reflexivity not-is-pattern notation-imp notation-symmetry notation-transitivity or-elim or-is-sugar not-is-sugar notation-proof ) ACDBCDAEDBDCDDDACDBCDABFCDDDABCLACDBCDABFCDDACDBCDAEDBDCDDACDGBCDABFCDBCDAEDBDCDBCDGABFCAEDBDCABFAHBDAEDBDABMAEDBDAHBDAEDBAHBAHAEDAHAEDAEDANAEDAEDAEDGJKJBGIJKCGIIIO $.
${ rule-contradiction.0 $e |- ( \imp ( \not ph0 ) \bot ) $.
   rule-contradiction $p |- ph0 $= ( not-is-pattern bot-is-pattern imp-is-pattern contradiction proof-rule-mp ) ACDEAAFBG $. $}
${ rule-bot-elim.0 $e |- \bot $.
   rule-bot-elim $p |- ph0 $= ( bot-is-pattern bot-elim proof-rule-mp ) CAADBE $. $}
${ rule-not-elim-sugar.0 $e |- ph0 $.
   rule-not-elim-sugar.1 $e |- ( \not ph0 ) $.
   rule-not-elim-sugar $p |- \bot $= ( bot-is-pattern imp-is-pattern not-is-pattern proof-rule-mp notation-symmetry not-elim not-is-sugar notation-reflexivity notation-transitivity notation-proof ) ADEDAADEDEAIBGAFADECAFADEAFADEADEAJADEADEADEKHLHMG $. $}
${ rule-iff-intro.0 $e |- ( \imp ph0 ph1 ) $.
   rule-iff-intro.1 $e |- ( \imp ph1 ph0 ) $.
   rule-iff-intro $p |- ( \iff ph0 ph1 ) $= ( imp-is-pattern and-is-pattern iff-is-pattern rule-and-intro-sugar iff-is-sugar notation-reflexivity notation-symmetry notation-transitivity notation-proof ) ABEBAEFABGABEBAECDHABGABEBAEFABEBAEFABIABEBAEFABEBAEFABEBAEFJKLM $. $}
contrapositive-sugar $p |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \not ph1 ) ( \not ph0 ) ) ) $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-reflexivity not-is-sugar notation-symmetry notation-transitivity notation-imp contrapositive notation-proof ) ABCBDCADCCCABCBEAECCABKABCBEAECABCBDCADCCABCFBEAEBDCADCBEBDCBDCBGBDCBDCBDCFHIAEADCADCAGADCADCADCFHIJJL $.
${ rule-contrapositive-sugar.0 $e |- ( \imp ph0 ph1 ) $.
   rule-contrapositive-sugar $p |- ( \imp ( \not ph1 ) ( \not ph0 ) ) $= ( imp-is-pattern bot-is-pattern not-is-pattern not-is-sugar notation-reflexivity notation-symmetry notation-transitivity rule-contrapositive notation-imp notation-proof ) BEDAEDDBFAFDABCKBFAFBEDAEDBFBEDBEDBGBEDBEDBEDHIJAFAEDAEDAGAEDAEDAEDHIJLM $. $}
${ rule-contrapositive-alt-sugar.0 $e |- ( \imp ( \not ph0 ) ( \not ph1 ) ) $.
   rule-contrapositive-alt-sugar $p |- ( \imp ph1 ph0 ) $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-symmetry not-is-sugar notation-reflexivity notation-transitivity rule-imp-transitivity not-elim notation-imp notation-proof rule-contrapositive proof-rule-prop-3 ) BAEDEDABBEDEDAEDEDBLAEDBEDAFBFDAEDBEDDCAEDBEDAFBFAFAEDAFAEDAEDAHAEDAEDAEDIGJGBFBEDBFBEDBEDBHBEDBEDBEDIGJGMNOKAPK $. $}
excluded-middle $p |- ( \or ph0 ( \not ph0 ) ) $= ( not-is-pattern imp-is-pattern or-is-pattern imp-reflexivity or-is-sugar notation-reflexivity notation-symmetry notation-transitivity notation-proof ) ABABCAABDABEAABDABABCABABCAABFABABCABABCABABCGHIJ $.
case $p |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ( \not ph0 ) ph1 ) ph1 ) ) $= ( imp-is-pattern not-is-pattern or-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 imp-reflexivity or-elim-sugar excluded-middle ) ABCADBCAADECCABCADBCBCCABCADBCAADECADBCBCCCABCADBCAADECCABCADBCBCCCABCADBCAADECADBCBCGABCADBCAADEBCCCABCADBCAADECADBCBCCCABCADBCAADEBCCADBCAADECADBCBCCCCABCADBCAADEBCCCABCADBCAADECADBCBCCCCABCADBCAADEBCCADBCAADECADBCBCCGADBCAADEBCCADBCAADECADBCBCCCABCADBCAADEBCCADBCAADECADBCBCCCCADBCAADEBCCADBCAADECADBCBCCCABCHADBCAADEBGFFABCADBCADBCCCABCADBCAADEBCCCABCADBCADBCCADBCAADEBCCCCABCADBCADBCCCABCADBCAADEBCCCCABCADBCADBCCADBCAADEBCCGABCADBCADBCAADEBCCCCABCADBCADBCCADBCAADEBCCCCABCADBCADBCAADEBCCCADBCADBCCADBCAADEBCCCCCABCADBCADBCAADEBCCCCABCADBCADBCCADBCAADEBCCCCCABCADBCADBCAADEBCCCADBCADBCCADBCAADEBCCCGADBCADBCAADEBCCCADBCADBCCADBCAADEBCCCCABCADBCADBCAADEBCCCADBCADBCCADBCAADEBCCCCCADBCADBCAADEBCCCADBCADBCCADBCAADEBCCCCABCHADBCADBCAADEBCGFFABCADBCABCCCABCADBCADBCAADEBCCCCABCADBCABCCADBCADBCAADEBCCCCCABCADBCABCCCABCADBCADBCAADEBCCCCCABCADBCABCCADBCADBCAADEBCCCGABCADBCABCADBCAADEBCCCCCABCADBCABCCADBCADBCAADEBCCCCCABCADBCABCADBCAADEBCCCCADBCABCCADBCADBCAADEBCCCCCCABCADBCABCADBCAADEBCCCCCABCADBCABCCADBCADBCAADEBCCCCCCABCADBCABCADBCAADEBCCCCADBCABCCADBCADBCAADEBCCCCGADBCABCADBCAADEBCCCCADBCABCCADBCADBCAADEBCCCCCABCADBCABCADBCAADEBCCCCADBCABCCADBCADBCAADEBCCCCCCADBCABCADBCAADEBCCCCADBCABCCADBCADBCAADEBCCCCCABCHADBCABCADBCAADEBCCGFFABCABCADBCAADEBCCCCABCADBCABCADBCAADEBCCCCCABCABCADBCAADEBCCCADBCABCADBCAADEBCCCCCCABCABCADBCAADEBCCCCABCADBCABCADBCAADEBCCCCCCABCABCADBCAADEBCCCADBCABCADBCAADEBCCCCGABCADBCAADEBCCCADBCABCADBCAADEBCCCCCABCABCADBCAADEBCCCADBCABCADBCAADEBCCCCCCABCADBCAADEBCCCADBCABCADBCAADEBCCCCCABCHABCADBCAADEBCCCADBCHFFABCADBCAADEBCCCABCABCADBCAADEBCCCCABCADBCAADEBCCCABCHAADBJFFFFABCABCCABCADBCABCCCABCABCADBCABCCCCABCABCCABCADBCABCCCCABCABCADBCABCCGABCADBCABCCCABCABCADBCABCCCCABCADBCABCCCABCHABCADBCHFFABCIFFFFADBCADBCCABCADBCADBCCCADBCADBCCABCHADBCIFFFFABCAADECABCADBCAADECCABCAADEADBCAADECCCABCAADECABCADBCAADECCCABCAADEADBCAADECGAADEADBCAADECCABCAADEADBCAADECCCAADEADBCAADECCABCHAADEADBCHFFAADEABCAADECAADEABCHAKFFF $.
${ rule-case.0 $e |- ( \imp ph0 ph1 ) $.
   rule-case.1 $e |- ( \imp ( \not ph0 ) ph1 ) $.
   rule-case $p |- ph1 $= ( not-is-pattern imp-is-pattern or-is-pattern imp-reflexivity or-is-sugar notation-reflexivity notation-symmetry notation-transitivity notation-proof rule-or-elim-alt-sugar ) AAEBCDAEAEFAAEGAEHAAEGAEAEFAEAEFAAEIAEAEFAEAEFAEAEFJKLMN $. $}
${ rule-case-alt.0 $e |- ( \or ph0 ph1 ) $.
   rule-case-alt.1 $e |- ( \imp ph0 ph2 ) $.
   rule-case-alt.2 $e |- ( \imp ph1 ph2 ) $.
   rule-case-alt $p |- ph2 $= ( or-is-pattern rule-or-elim-sugar proof-rule-mp ) ABGCABCEFHDI $. $}
${ rule-imp-compat-in-or.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-compat-in-or.1 $e |- ( \imp ph2 ph3 ) $.
   rule-imp-compat-in-or $p |- ( \imp ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) $= ( or-is-pattern rule-imp-transitivity or-intro-left-sugar or-intro-right-sugar rule-or-elim-sugar ) ACBDGABBDGEBDIHCDBDGFDBJHK $. $}
${ rule-imp-compat-in-and.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-compat-in-and.1 $e |- ( \imp ph2 ph3 ) $.
   rule-imp-compat-in-and $p |- ( \imp ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) $= ( not-is-pattern or-is-pattern and-is-pattern rule-contrapositive-sugar imp-is-pattern and-is-sugar notation-reflexivity notation-symmetry notation-transitivity rule-imp-compat-in-or notation-imp notation-proof ) AGCGHGBGDGHGKACIBDIKBGDGHAGCGHBGAGDGCGABEJCDFJPJACIBDIAGCGHGBGDGHGACIAGCGHGAGCGHGACLAGCGHGAGCGHGAGCGHGMNOBDIBGDGHGBGDGHGBDLBGDGHGBGDGHGBGDGHGMNOQR $. $}
iff-elim-left $p |- ( \imp ( \iff ph0 ph1 ) ( \imp ph0 ph1 ) ) $= ( imp-is-pattern and-is-pattern iff-is-pattern notation-reflexivity and-elim-left-sugar iff-is-sugar notation-symmetry notation-transitivity notation-imp notation-proof ) ABCBACDABCCABEABCCABCBACGABEABCABCBACDABCABEABCBACDABCBACDABHABCBACDABCBACDABCBACDFIJABCFKL $.
iff-elim-right $p |- ( \imp ( \iff ph0 ph1 ) ( \imp ph1 ph0 ) ) $= ( imp-is-pattern and-is-pattern iff-is-pattern notation-reflexivity and-elim-right-sugar iff-is-sugar notation-symmetry notation-transitivity notation-imp notation-proof ) ABCBACDBACCABEBACCABCBACGABEBACABCBACDBACABEABCBACDABCBACDABHABCBACDABCBACDABCBACDFIJBACFKL $.
${ rule-iff-elim-left.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-elim-left $p |- ( \imp ph0 ph1 ) $= ( imp-is-pattern not-is-pattern or-is-pattern bot-is-pattern and-is-pattern notation-symmetry notation-transitivity iff-is-pattern and-is-sugar not-is-sugar and-elim-left-sugar iff-is-sugar notation-reflexivity notation-proof proof-rule-mp ) ABDBADHABDABDBADNABKABDBADHCABDBADHABDEBADEFEABKABDBADLABKABDEBADEFEABKABDBADHABDEBADEFEABOABDEBADEFEABDBADHABDEBADEFEABDEBADEFGDABDBADHABDEBADEFMABDBADHABDEBADEFGDABDBADHABDEBADEFEABDEBADEFGDABDBADLABDEBADEFGDABDEBADEFEABDEBADEFEABDEBADEFGDABDEBADEFEABDEBADEFGDABDEBADEFGDABDEBADEFMABDEBADEFGDABDEBADEFGDABDEBADEFGDPIJIIJIJIJIJQR $. $}
${ rule-iff-elim-right.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-elim-right $p |- ( \imp ph1 ph0 ) $= ( imp-is-pattern not-is-pattern or-is-pattern bot-is-pattern and-is-pattern notation-symmetry notation-transitivity iff-is-pattern and-is-sugar not-is-sugar and-elim-right-sugar iff-is-sugar notation-reflexivity notation-proof proof-rule-mp ) ABDBADHBADABDBADNABKABDBADHCABDBADHABDEBADEFEABKABDBADLABKABDEBADEFEABKABDBADHABDEBADEFEABOABDEBADEFEABDBADHABDEBADEFEABDEBADEFGDABDBADHABDEBADEFMABDBADHABDEBADEFGDABDBADHABDEBADEFEABDEBADEFGDABDBADLABDEBADEFGDABDEBADEFEABDEBADEFEABDEBADEFGDABDEBADEFEABDEBADEFGDABDEBADEFGDABDEBADEFMABDEBADEFGDABDEBADEFGDABDEBADEFGDPIJIIJIJIJIJQR $. $}
iff-reflexivity $p |- ( \iff ph0 ph0 ) $= ( imp-reflexivity rule-iff-intro ) AAABABC $.
${ rule-iff-symmetry.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-symmetry $p |- ( \iff ph1 ph0 ) $= ( rule-iff-elim-right rule-iff-elim-left rule-iff-intro ) BAABCDABCEF $. $}
${ rule-iff-transitivity.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-transitivity.1 $e |- ( \iff ph1 ph2 ) $.
   rule-iff-transitivity $p |- ( \iff ph0 ph2 ) $= ( rule-iff-elim-left rule-imp-transitivity rule-iff-elim-right rule-iff-intro ) ACABCABDFBCEFGCBABCEHABDHGI $. $}
${ rule-iff-compat-in-or.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-or.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-or $p |- ( \iff ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) $= ( or-is-pattern rule-iff-elim-left rule-imp-compat-in-or rule-iff-elim-right rule-iff-intro ) ACGBDGABCDABEHCDFHIBADCABEJCDFJIK $. $}
${ rule-iff-compat-in-and.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-and.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-and $p |- ( \iff ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) $= ( and-is-pattern rule-iff-elim-left rule-imp-compat-in-and rule-iff-elim-right rule-iff-intro ) ACGBDGABCDABEHCDFHIBADCABEJCDFJIK $. $}
${ rule-iff-compat-in-not.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-not $p |- ( \iff ( \not ph0 ) ( \not ph1 ) ) $= ( not-is-pattern rule-contrapositive-sugar rule-iff-elim-right rule-iff-elim-left rule-iff-intro ) ADBDBAABCFEABABCGEH $. $}
double-negation $p |- ( \iff ( \not ( \not ph0 ) ) ph0 ) $= ( imp-is-pattern not-is-pattern bot-is-pattern or-is-pattern notation-symmetry notation-transitivity not-is-sugar and-is-pattern notation-reflexivity notation-imp iff-is-pattern iff-is-sugar and-is-sugar or-is-sugar proof-rule-prop-3 not-elim rule-iff-intro notation-proof ) ADBDBALACCALADBDBAAPAQRACCALACCABAACCBIADBDBALACCAMADBDBALACCABAACCBIADBDBALADBDBABAADBDBBIACCABAACCBIADBDBAMACCABAACCBIADBDBABAADBDBBIACCABAACCBIACCABCAACCBCECADBDBABAADBDBBIACCABAACCBNADBDBABAADBDBBIACCABCAACCBCECADBDBABAADBDBBIADBDBABCAADBDBBCECACCABCAACCBCECADBDBABAADBDBBNACCABCAACCBCECADBDBABCAADBDBBCECACCABCAACCBCECACCABCAACCBCEDBADBDBABCAADBDBBCECACCABCAACCBCEHADBDBABCAADBDBBCECACCABCAACCBCEDBADBDBABCAADBDBBCECADBDBABCAADBDBBCEDBACCABCAACCBCEDBADBDBABCAADBDBBCEHACCABCAACCBCEDBADBDBABCAADBDBBCEDBACCABCAACCBCEDADBDBABCAADBDBBCEDACCABCAACCBCEACCABCCAACCBCBADBDBABCAADBDBBCEACCABCAACCBCOADBDBABCAADBDBBCEACCABCCAACCBCBADBDBABCAADBDBBCEADBDBABCCAADBDBBCBACCABCCAACCBCBADBDBABCAADBDBBCOACCABCCAACCBCBADBDBABCCAADBDBBCBACCABCCAACCBCADBDBABCCAADBDBBCACCABCCACCABCDBADBDBABCCACCABCHADBDBABCCACCABCDBADBDBABCCADBDBABCDBACCABCDBADBDBABCHACCABCDBADBDBABCDBACCABCDADBDBABCDACCABCACCABDBADBDBABCACCABHADBDBABCACCABDBADBDBABCADBDBABDBACCABDBADBDBABHACCABDBADBDBABDBACCABDADBDBABDACCAADBDBAACCACDBADBDBACHADBDBACDBADBDACDACADBACADBADBAHADBADBADBJFGFDJKFGAJKDJKFGFGDJKFGFGAACCBCAACCBDBAADBDBBCAACCBHAADBDBBCAACCBDBAADBDBBCAADBDBBDBAACCBDBAADBDBBHAACCBDBAADBDBBDBAACCBDAADBDBBDAACCAADBDBAJACCACDBADBDBACHADBDBACDBADBDACDACADBACADBADBAHADBADBADBJFGFDJKFGKDJKFGFGKFGFGDJKFGFGFGFGFGFGS $.
dn-intro-sugar $p |- ( \imp ph0 ( \not ( \not ph0 ) ) ) $= ( not-is-pattern double-negation rule-iff-elim-right ) ABBAACD $.
dn-elim-sugar $p |- ( \imp ( \not ( \not ph0 ) ) ph0 ) $= ( not-is-pattern double-negation rule-iff-elim-left ) ABBAACD $.
imp-to-or $p |- ( \iff ( \imp ph0 ph1 ) ( \or ( \not ph0 ) ph1 ) ) $= ( imp-is-pattern not-is-pattern bot-is-pattern notation-reflexivity notation-symmetry or-is-pattern notation-transitivity notation-imp not-is-sugar notation-proof imp-transitivity proof-rule-prop-3 proof-rule-mp or-is-sugar not-elim-alt proof-rule-prop-1 rule-or-elim-sugar rule-iff-intro ) ABCADBHABCADDBCCABCADBHCADDACABCADDBCCADDABMAECECACADDACANADDAAECECAADDADECAECECADKAECECADECAECEADEADAECADAECAECAKAECAECAECFGIGEFJGIAFJLOABCADBHABCADDBCABCFADBHADDBCADDBCADBPADDBCADDBCADDBCFGIJLADBABCAECABCCADABCCABQADABCAECABCADAECAECAKAECAECAECFGIABCFJLBARST $.
bot-to-and $p |- ( \iff \bot ( \and ph0 ( \not ph0 ) ) ) $= ( bot-is-pattern imp-is-pattern not-is-pattern or-is-pattern notation-symmetry notation-transitivity notation-reflexivity not-is-sugar notation-imp and-is-pattern or-is-sugar notation-proof bot-elim not-elim imp-reflexivity proof-rule-mp and-is-sugar rule-iff-intro ) BAADKAADKNADADDEDBCAADKBCABCABCBCEBCBCADADDEDBCABCABCBCEABCABCBCEBCBCABCABCBCEOABCBCABCBCCABCABCBCEABCBCPABCABCBCEABCDABCBCCABCBCABCBCCABCABCBCLABCBCABCBCCABCDABCBCCABCBCABCBCABCDABCBCABCDABCBCABCDABCBCABCBCABCIABCBCABCBCABCBCHFGFABCBCHJFGMQADADDEDBABCABCBCEBCBADADDEDADADDEBCABCABCBCEBCADADDEIABCABCBCEBCADADDEBCABCABCBCEBADADDEBABCABCBCEABCDABCBCCADADDEABCABCBCLADADDEABCDABCBCCADADDEADDADDCABCDABCBCCADADDLABCDABCBCCADDADDCABCDABCBCADDADDABCDABCBCADDABCIADDABCBCADDADBCABCBCADIABCBCADBCABCBADBADABCADABCABCAIABCABCABCHFGFBHJFGFGADDABCBCADDADBCABCBCADIABCBCADBCABCBADBADABCADABCABCAIABCABCABCHFGFBHJFGFJFGFGBHJFGBHJMAADKBADADDEDBAADKADADDEDADADDEDAADRADADDEDADADDEDADADDEDHFGBHJMS $.
top-to-or $p |- ( \iff \top ( \or ph0 ( \not ph0 ) ) ) $= ( not-is-pattern or-is-pattern imp-is-pattern top-is-pattern proof-rule-prop-1 proof-rule-mp imp-reflexivity or-is-sugar notation-reflexivity notation-symmetry notation-transitivity notation-proof top-intro rule-iff-intro ) EAABCAABCEAABCDAABCEFABABDAABCABHAABCABABDABABDAABIABABDABABDABABDJKLMGEAABCEDEAABCFNGO $.
iff-to-and $p |- ( \iff ( \iff ph0 ph1 ) ( \and ( \or ( \not ph0 ) ph1 ) ( \or ( \not ph1 ) ph0 ) ) ) $= ( not-is-pattern imp-is-pattern or-is-pattern and-is-pattern iff-is-pattern bot-is-pattern notation-symmetry notation-transitivity not-is-sugar notation-reflexivity notation-imp iff-is-sugar imp-to-or and-is-sugar or-is-sugar rule-iff-compat-in-and notation-proof ) ABDBADFACBEBCAEFGABGACBEBCAEFGABDACBEBADBCAEABOBAORABGACBEBCAEFGABGACBEBCAEFDACBEBCAEFABGDFABDBADFACBEBCAEFGABGACBEBCAEFNABDBADFACBEBCAEFGABGACBEBCAEFDACBEBCAEFABGDFABDBADFACBEBCAEFGABDBADFACBEBCAEFDACBEBCAEFABDBADFDFABGACBEBCAEFDACBEBCAEFABGDFABDBADFACBEBCAEFNABGACBEBCAEFDACBEBCAEFABGDFABDBADFACBEBCAEFDACBEBCAEFABDBADFDFABGACBEBCAEFDACBEBCAEFABGDFABGACBEBCAEFDCACBEBCAEFABGDCECABDBADFACBEBCAEFDACBEBCAEFABDBADFDFABGACBEBCAEFDACBEBCAEFABGDPABDBADFACBEBCAEFDACBEBCAEFABDBADFDFABGACBEBCAEFDCACBEBCAEFABGDCECABDBADFACBEBCAEFDACBEBCAEFABDBADFDFABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCECABGACBEBCAEFDCACBEBCAEFABGDCECABDBADFACBEBCAEFDACBEBCAEFABDBADFDPABGACBEBCAEFDCACBEBCAEFABGDCECABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCECABGACBEBCAEFDCACBEBCAEFABGDCECABGACBEBCAEFDCACBEBCAEFABGDCEHDABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCECABGACBEBCAEFDCACBEBCAEFABGDCEKABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCECABGACBEBCAEFDCACBEBCAEFABGDCEHDABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCECABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCEHDABGACBEBCAEFDCACBEBCAEFABGDCEHDABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCEKABGACBEBCAEFDCACBEBCAEFABGDCEHDABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCEHDABGACBEBCAEFDCACBEBCAEFABGDCEHABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCEHABGACBEBCAEFDCACBEBCAEFABGDCEABGACBEBCAEFDCCACBEBCAEFABGDCDABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCEABGACBEBCAEFDCACBEBCAEFABGDCQABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCEABGACBEBCAEFDCCACBEBCAEFABGDCDABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCEABDBADFACBEBCAEFDCCACBEBCAEFABDBADFDCDABGACBEBCAEFDCCACBEBCAEFABGDCDABDBADFACBEBCAEFDCACBEBCAEFABDBADFDCQABGACBEBCAEFDCCACBEBCAEFABGDCDABDBADFACBEBCAEFDCCACBEBCAEFABDBADFDCDABGACBEBCAEFDCCACBEBCAEFABGDCABDBADFACBEBCAEFDCCACBEBCAEFABDBADFDCABGACBEBCAEFDCCABGACBEBCAEFDCHDABDBADFACBEBCAEFDCCABGACBEBCAEFDCKABDBADFACBEBCAEFDCCABGACBEBCAEFDCHDABDBADFACBEBCAEFDCCABDBADFACBEBCAEFDCHDABGACBEBCAEFDCHDABDBADFACBEBCAEFDCKABGACBEBCAEFDCHDABDBADFACBEBCAEFDCHDABGACBEBCAEFDCHABDBADFACBEBCAEFDCHABGACBEBCAEFDCABGACBEBCAEFDHDABDBADFACBEBCAEFDCABGACBEBCAEFDKABDBADFACBEBCAEFDCABGACBEBCAEFDHDABDBADFACBEBCAEFDCABDBADFACBEBCAEFDHDABGACBEBCAEFDHDABDBADFACBEBCAEFDKABGACBEBCAEFDHDABDBADFACBEBCAEFDHDABGACBEBCAEFDHABDBADFACBEBCAEFDHABGACBEBCAEFABDBADFACBEBCAEFABGABDBADFABDBADFABNABDBADFABDBADFABDBADFLIJACBEBCAEFLMHLMIJIJHLMIJIJACBEBCAEFABGDCACBEBCAEFABGDHDACBEBCAEFABDBADFDCACBEBCAEFABGDKACBEBCAEFABDBADFDCACBEBCAEFABGDHDACBEBCAEFABDBADFDCACBEBCAEFABDBADFDHDACBEBCAEFABGDHDACBEBCAEFABDBADFDKACBEBCAEFABGDHDACBEBCAEFABDBADFDHDACBEBCAEFABGDHACBEBCAEFABDBADFDHACBEBCAEFABGACBEBCAEFABDBADFACBEBCAEFLABGABDBADFABDBADFABNABDBADFABDBADFABDBADFLIJMHLMIJIJMIJIJHLMIJIJIJIJIJIJS $.
and-associativity $p |- ( \iff ( \and ( \and ph0 ph1 ) ph2 ) ( \and ph0 ( \and ph1 ph2 ) ) ) $= ( and-is-pattern and-elim-left-sugar rule-imp-transitivity and-elim-right-sugar rule-and-intro-alt2-sugar imp-reflexivity rule-iff-intro ) ABDCDABCDDABDCDABCDABDCDABDAABDCEABEFABDCDBCABDCDABDBABDCEABGFABDCDCCABDCGCIFHHABCDDABDCABCDDABABCDEABCDDBCDBABCDGBCEFHABCDDBCDCABCDGBCGFHJ $.
and-commutativity $p |- ( \iff ( \and ph0 ph1 ) ( \and ph1 ph0 ) ) $= ( and-is-pattern and-elim-right-sugar and-elim-left-sugar rule-and-intro-alt2-sugar rule-iff-intro ) ABCBACABCBAABDABEFBACABBADBAEFG $.
or-associativity $p |- ( \iff ( \or ( \or ph0 ph1 ) ph2 ) ( \or ph0 ( \or ph1 ph2 ) ) ) $= ( or-is-pattern or-intro-left-sugar or-intro-right-sugar rule-imp-transitivity rule-or-elim-sugar rule-iff-intro ) ABDCDABCDDABDCABCDDABABCDDABCDEBBCDABCDDBCEBCDAFGHCBCDABCDDCBFBCDAFGHABCDABDCDAABDABDCDABEABDCEGBCABDCDBABDABDCDBAFABDCEGCABDFHHI $.
or-commutativity $p |- ( \iff ( \or ph0 ph1 ) ( \or ph1 ph0 ) ) $= ( or-is-pattern or-intro-right-sugar or-intro-left-sugar rule-or-elim-sugar rule-iff-intro ) ABCBACABBACABDBAEFBAABCBADABEFG $.
de-morgan-and $p |- ( \iff ( \not ( \and ph0 ph1 ) ) ( \or ( \not ph0 ) ( \not ph1 ) ) ) $= ( imp-is-pattern bot-is-pattern not-is-pattern notation-symmetry or-is-pattern notation-transitivity and-is-pattern not-is-sugar notation-reflexivity notation-imp or-is-sugar and-is-sugar notation-proof proof-rule-prop-3 not-elim rule-iff-intro ) ABIEAEBEGADCDCBDCCDCDCADCDCBDCCCABIEAEBEGCADCDCBDCCPABIEAEBEGADCDCBDCCDCDCADCDCBDCCABIEABIDCADCDCBDCCDCDCABIJADCDCBDCCDCDCABIDCADCDCBDCCDCDABIDABIADCDCBDCCDCABIAEBEGEADCDCBDCCDCABNADCDCBDCCDCAEBEGEAEBEGEADCDCBDCCDCAEBEGEAEBEGDCADCDCBDCCDCAEBEGJADCDCBDCCDCAEBEGDCADCDCBDCCDAEBEGDAEBEGADCDCBDCCAEBEGAEEBECADCDCBDCCAEBEMADCDCBDCCAEEBECADCDCBDCAEEBEAEEADCDCAEEAEDCADCDCAEJADCDCAEDCADCDAEDAEADCAEADCADCAJADCADCADCKFHFDKLFHFBEBDCBEBDCBDCBJBDCBDCBDCKFHFLFHFDKLFHFFHFDKLFHAEBEGAEEBECADCDCBDCCAEBEMADCDCBDCCAEEBECADCDCBDCAEEBEAEEADCDCAEEAEDCADCDCAEJADCDCAEDCADCDAEDAEADCAEADCADCAJADCADCADCKFHFDKLFHFBEBDCBEBDCBDCBJBDCBDCBDCKFHFLFHLOADCDCBDCCADCDCBDCCDCDCCAEBEGABIECADCDCBDCCQAEBEGABIEADCDCBDCCADCDCBDCCDCDCAEBEGAEEBECADCDCBDCCAEBEMADCDCBDCCAEEBECADCDCBDCAEEBEAEEADCDCAEEAEDCADCDCAEJADCDCAEDCADCDAEDAEADCAEADCADCAJADCADCADCKFHFDKLFHFBEBDCBEBDCBDCBJBDCBDCBDCKFHFLFHABIEABIDCADCDCBDCCDCDCABIJADCDCBDCCDCDCABIDCADCDCBDCCDCDABIDABIADCDCBDCCDCABIAEBEGEADCDCBDCCDCABNADCDCBDCCDCAEBEGEAEBEGEADCDCBDCCDCAEBEGEAEBEGDCADCDCBDCCDCAEBEGJADCDCBDCCDCAEBEGDCADCDCBDCCDAEBEGDAEBEGADCDCBDCCAEBEGAEEBECADCDCBDCCAEBEMADCDCBDCCAEEBECADCDCBDCAEEBEAEEADCDCAEEAEDCADCDCAEJADCDCAEDCADCDAEDAEADCAEADCADCAJADCADCADCKFHFDKLFHFBEBDCBEBDCBDCBJBDCBDCBDCKFHFLFHFDKLFHFFHFDKLFHLOR $.
de-morgan-or $p |- ( \iff ( \not ( \or ph0 ph1 ) ) ( \and ( \not ph0 ) ( \not ph1 ) ) ) $= ( not-is-pattern or-is-pattern imp-is-pattern and-is-pattern bot-is-pattern notation-symmetry notation-transitivity not-is-sugar notation-reflexivity notation-imp iff-is-pattern and-is-sugar double-negation rule-iff-symmetry iff-is-sugar or-is-sugar rule-iff-compat-in-or rule-iff-compat-in-not notation-proof ) ABDCACCBCCDCMABDCACBCFMABDACCBCCDAACCBBCCACCAAOPBCCBBOPSTABDCACBCFMABDCACBCFEACBCFABDCEFABDCACCBCCDCMABDCACBCFQABDCACCBCCDCMABDCACBCFEACBCFABDCEFABDCACCBCCDCMABDCACCBCCDCEACCBCCDCABDCEFABDCACBCFEACBCFABDCEFABDCACCBCCDCQABDCACBCFEACBCFABDCEFABDCACCBCCDCEACCBCCDCABDCEFABDCACBCFEACBCFABDCEFABDCACBCFECACBCFABDCECDCABDCACCBCCDCEACCBCCDCABDCEFABDCACBCFEACBCFABDCENABDCACCBCCDCEACCBCCDCABDCEFABDCACBCFECACBCFABDCECDCABDCACCBCCDCEACCBCCDCABDCEFABDCACCBCCDCECACCBCCDCABDCECDCABDCACBCFECACBCFABDCECDCABDCACCBCCDCEACCBCCDCABDCENABDCACBCFECACBCFABDCECDCABDCACCBCCDCECACCBCCDCABDCECDCABDCACBCFECACBCFABDCECDCABDCACBCFECACBCFABDCECDGEABDCACCBCCDCECACCBCCDCABDCECDCABDCACBCFECACBCFABDCECDJABDCACCBCCDCECACCBCCDCABDCECDCABDCACBCFECACBCFABDCECDGEABDCACCBCCDCECACCBCCDCABDCECDCABDCACCBCCDCECACCBCCDCABDCECDGEABDCACBCFECACBCFABDCECDGEABDCACCBCCDCECACCBCCDCABDCECDJABDCACBCFECACBCFABDCECDGEABDCACCBCCDCECACCBCCDCABDCECDGEABDCACBCFECACBCFABDCECDGABDCACCBCCDCECACCBCCDCABDCECDGABDCACBCFECACBCFABDCECDABDCACBCFECCACBCFABDCECEABDCACCBCCDCECACCBCCDCABDCECDABDCACBCFECACBCFABDCECRABDCACCBCCDCECACCBCCDCABDCECDABDCACBCFECCACBCFABDCECEABDCACCBCCDCECACCBCCDCABDCECDABDCACCBCCDCECCACCBCCDCABDCECEABDCACBCFECCACBCFABDCECEABDCACCBCCDCECACCBCCDCABDCECRABDCACBCFECCACBCFABDCECEABDCACCBCCDCECCACCBCCDCABDCECEABDCACBCFECCACBCFABDCECABDCACCBCCDCECCACCBCCDCABDCECABDCACBCFECCABDCACBCFECGEABDCACCBCCDCECCABDCACBCFECJABDCACCBCCDCECCABDCACBCFECGEABDCACCBCCDCECCABDCACCBCCDCECGEABDCACBCFECGEABDCACCBCCDCECJABDCACBCFECGEABDCACCBCCDCECGEABDCACBCFECGABDCACCBCCDCECGABDCACBCFECABDCACBCFEGEABDCACCBCCDCECABDCACBCFEJABDCACCBCCDCECABDCACBCFEGEABDCACCBCCDCECABDCACCBCCDCEGEABDCACBCFEGEABDCACCBCCDCEJABDCACBCFEGEABDCACCBCCDCEGEABDCACBCFEGABDCACCBCCDCEGABDCACBCFABDCACCBCCDCABDCKACBCFACCBCCDCACCBCCDCACBCNACCBCCDCACCBCCDCACCBCCDCKHILGKLHIHIGKLHIHIACBCFABDCECACBCFABDCEGEACCBCCDCABDCECACBCFABDCEJACCBCCDCABDCECACBCFABDCEGEACCBCCDCABDCECACCBCCDCABDCEGEACBCFABDCEGEACCBCCDCABDCEJACBCFABDCEGEACCBCCDCABDCEGEACBCFABDCEGACCBCCDCABDCEGACBCFABDCACCBCCDCABDCACBCFACCBCCDCACCBCCDCACBCNACCBCCDCACCBCCDCACCBCCDCKHIABDCKLGKLHIHILHIHIGKLHIHIHIHIHIHIUA $.
or-idempotency $p |- ( \iff ( \or ph0 ph0 ) ph0 ) $= ( imp-reflexivity or-is-pattern rule-or-elim-sugar or-intro-left-sugar rule-iff-intro ) AACAAAAABABDAAEF $.
and-idempotency $p |- ( \iff ( \and ph0 ph0 ) ph0 ) $= ( imp-is-pattern and-is-pattern proof-rule-mp and-elim-left-sugar proof-rule-prop-2 and-intro-sugar imp-reflexivity rule-iff-intro ) AACAAAEAABAAACBAAAACBBAABAAACBBAAAACFAAGDAHDI $.
or-complement $p |- ( \iff ( \or ( \not ph0 ) ph0 ) \top ) $= ( imp-is-pattern bot-is-pattern not-is-pattern or-is-pattern top-is-pattern notation-symmetry notation-reflexivity notation-transitivity proof-rule-prop-1 proof-rule-mp not-is-sugar notation-imp top-intro proof-rule-prop-3 or-is-sugar notation-proof rule-iff-intro ) ADAEFFADAEFBFADAEJNKADAEFADAEBADAEFJACBCBABADAEAOADAEADDABACBCBABADAPACBCBABADDABACBCBAADDAADDACBCBADDADCBACBCBADLACBCBADCBACBCADCADACBADACBACBALACBACBACBHGIGCHMGIGAHMGIQKR $.
and-top $p |- ( \iff ( \and \top ph0 ) ph0 ) $= ( top-is-pattern and-is-pattern and-elim-right-sugar imp-is-pattern and-intro-sugar top-intro proof-rule-mp rule-iff-intro ) BACABADBABACEBAFGHI $.
or-top $p |- ( \iff ( \or \top ph0 ) \top ) $= ( top-is-pattern or-is-pattern imp-reflexivity imp-is-pattern proof-rule-prop-1 top-intro proof-rule-mp rule-or-elim-sugar or-intro-left-sugar rule-iff-intro ) BACBBABBDBABEBAFGHIBAJK $.
and-bot $p |- ( \imp ( \and \bot ph0 ) \bot ) $= ( bot-is-pattern imp-is-pattern not-is-pattern notation-symmetry or-is-pattern notation-transitivity notation-reflexivity not-is-sugar notation-imp and-is-pattern and-elim-left and-is-sugar or-is-sugar notation-proof ) BBCBCABCCBCBCBAKBCBALBAKBBBCBCABCCBCBBAKBDADFDBBCBCABCCBCBAMBBCBCABCCBCBDADFDBDADFDBBCBCABCCBCBDADFDBDADFBCBBCBCABCCBCBDADFIBBCBCABCCBCBDADFBCBBCBCABCCBBDADFBBDADFBBCBCABCCBDADFBDDADCBBCBCABCCBDADNBBCBCABCCBDDADCBBCBCABCBDDADBDDBBCBCBDDBDBCBBCBCBDIBBCBCBDBCBBCBBDBBDBBCBDBBCBBCBIBBCBBCBBCHEGEBHJEGEADABCADABCABCAIABCABCABCHEGEJEGEBHJEGEEGBHJO $.
or-commutativity-alt $p |- ( \imp ( \imp ( \not ph0 ) ph1 ) ( \imp ( \not ph1 ) ph0 ) ) $= ( imp-is-pattern not-is-pattern or-is-pattern notation-symmetry or-is-sugar notation-reflexivity notation-transitivity or-commutativity rule-iff-elim-left notation-imp notation-proof ) ABEBAECADBCBDACCABEBAEABJKADBCBDACABEBAEABEADBCABEADBCADBCABGADBCADBCADBCHFIFBAEBDACBAEBDACBDACBAGBDACBDACBDACHFIFLM $.
or-to-imp-alt $p |- ( \imp ( \or ph0 ph1 ) ( \imp ( \not ph0 ) ph1 ) ) $= ( imp-is-pattern not-is-pattern or-is-pattern notation-reflexivity imp-reflexivity or-is-sugar notation-symmetry notation-transitivity notation-imp notation-proof ) ADBCADBCCABEADBCCADBCGABEADBCADBCADBCABEADBCADBCABHADBCADBCADBCFIJADBCFKL $.
${ rule-or-left-distributivity-right.0 $e |- ( \and ( \or ph0 ph2 ) ( \or ph1 ph2 ) ) $.
   rule-or-left-distributivity-right $p |- ( \or ( \and ph0 ph1 ) ph2 ) $= ( imp-is-pattern and-is-pattern not-is-pattern or-is-pattern proof-rule-mp proof-rule-prop-2 or-commutativity-alt or-to-imp-alt case or-intro-right-sugar imp-transitivity proof-rule-prop-1 and-intro-sugar and-elim-left-sugar and-elim-right-sugar or-intro-left-sugar ) CGABFCHEABFCHCABFCHECGABFCHEABFCHECABFCHMCABFNIABFABFCHECGABFCHECGABFEABFABFCHECGABFCHEECGABFABFCHOCGBECGABFECGBABFEECGBECGABFEECGBABFJCGAECGBABFEECGABABFEEECGAECGBABFEEECGABABFEJABABFEECGABABFEEEABABFEECGPABQIIAGCECGAEACKACHAGCEACLACHBCHFACHACHBCHRDIIIIIBGCECGBEBCKBCHBGCEBCLACHBCHFBCHACHBCHSDIIIIIABFCTII $. $}
or-left-distributivity-right $p |- ( \imp ( \and ( \or ph0 ph2 ) ( \or ph1 ph2 ) ) ( \or ( \and ph0 ph1 ) ph2 ) ) $= ( imp-is-pattern or-is-pattern and-is-pattern not-is-pattern proof-rule-mp proof-rule-prop-2 proof-rule-prop-1 or-commutativity-alt or-to-imp-alt imp-reflexivity case or-intro-right-sugar imp-transitivity and-intro-sugar and-elim-left-sugar and-elim-right-sugar or-intro-left-sugar ) ACEBCEFCGABFCEDDACEBCEFABFCEDACEBCEFCGABFCEDABFCEDDACEBCEFCGABFCEDDACEBCEFABFCEDDACEBCEFCGABFCEDABFCEIACEBCEFCABFCEDDACEBCEFCGABFCEDABFCEDDACEBCEFCABFCEDCGABFCEDABFCEDDDACEBCEFCABFCEDDACEBCEFCGABFCEDABFCEDDDACEBCEFCABFCEDCGABFCEDABFCEDICABFCEDCGABFCEDABFCEDDACEBCEFCABFCEDCGABFCEDABFCEDDDCABFCEDCGABFCEDABFCEDDACEBCEFJCABFCENHHCABFCEDACEBCEFCABFCEDDCABFCEDACEBCEFJCABFOHHHACEBCEFABFABFCEDDACEBCEFCGABFCEDDACEBCEFABFABFCEDCGABFCEDDDACEBCEFABFABFCEDDACEBCEFCGABFCEDDDACEBCEFABFABFCEDCGABFCEDIACEBCEFCGABFDDACEBCEFABFABFCEDCGABFCEDDDACEBCEFCGABFDABFABFCEDCGABFCEDDDDACEBCEFCGABFDDACEBCEFABFABFCEDCGABFCEDDDDACEBCEFCGABFDABFABFCEDCGABFCEDDICGABFDABFABFCEDCGABFCEDDDACEBCEFCGABFDABFABFCEDCGABFCEDDDDCGABFDABFABFCEDCGABFCEDDDACEBCEFJCGABFABFCEPHHACEBCEFCGBDDACEBCEFCGABFDDACEBCEFCGBDCGABFDDDACEBCEFCGBDDACEBCEFCGABFDDDACEBCEFCGBDCGABFDIACEBCEFCGBABFDDDACEBCEFCGBDCGABFDDDACEBCEFCGBABFDDCGBDCGABFDDDDACEBCEFCGBABFDDDACEBCEFCGBDCGABFDDDDACEBCEFCGBABFDDCGBDCGABFDDICGBABFDDCGBDCGABFDDDACEBCEFCGBABFDDCGBDCGABFDDDDCGBABFDDCGBDCGABFDDDACEBCEFJCGBABFIHHACEBCEFCGADDACEBCEFCGBABFDDDACEBCEFCGADCGBABFDDDDACEBCEFCGADDACEBCEFCGBABFDDDDACEBCEFCGADCGBABFDDIACEBCEFCGABABFDDDDACEBCEFCGADCGBABFDDDDACEBCEFCGABABFDDDCGADCGBABFDDDDDACEBCEFCGABABFDDDDACEBCEFCGADCGBABFDDDDDACEBCEFCGABABFDDDCGADCGBABFDDDICGABABFDDDCGADCGBABFDDDDACEBCEFCGABABFDDDCGADCGBABFDDDDDCGABABFDDDCGADCGBABFDDDDACEBCEFJCGABABFDIHHACEBCEFABABFDDDACEBCEFCGABABFDDDDACEBCEFABABFDDCGABABFDDDDDACEBCEFABABFDDDACEBCEFCGABABFDDDDDACEBCEFABABFDDCGABABFDDDIABABFDDCGABABFDDDDACEBCEFABABFDDCGABABFDDDDDABABFDDCGABABFDDDDACEBCEFJABABFDDCGJHHABABFDDACEBCEFABABFDDDABABFDDACEBCEFJABQHHHHACEBCEFAGCDDACEBCEFCGADDACEBCEFAGCDCGADDDACEBCEFAGCDDACEBCEFCGADDDACEBCEFAGCDCGADIAGCDCGADDACEBCEFAGCDCGADDDAGCDCGADDACEBCEFJACKHHACEBCEFACEDACEBCEFAGCDDACEBCEFACEAGCDDDACEBCEFACEDACEBCEFAGCDDDACEBCEFACEAGCDIACEAGCDDACEBCEFACEAGCDDDACEAGCDDACEBCEFJACLHHACEBCEFACEBCEFDACEBCEFACEDACEBCEFACEBCEFACEDDACEBCEFACEBCEFDACEBCEFACEDDACEBCEFACEBCEFACEIACEBCEFACEDACEBCEFACEBCEFACEDDACEBCEFACEDACEBCEFJACEBCERHHACEBCEFMHHHHHHACEBCEFBGCDDACEBCEFCGBDDACEBCEFBGCDCGBDDDACEBCEFBGCDDACEBCEFCGBDDDACEBCEFBGCDCGBDIBGCDCGBDDACEBCEFBGCDCGBDDDBGCDCGBDDACEBCEFJBCKHHACEBCEFBCEDACEBCEFBGCDDACEBCEFBCEBGCDDDACEBCEFBCEDACEBCEFBGCDDDACEBCEFBCEBGCDIBCEBGCDDACEBCEFBCEBGCDDDBCEBGCDDACEBCEFJBCLHHACEBCEFACEBCEFDACEBCEFBCEDACEBCEFACEBCEFBCEDDACEBCEFACEBCEFDACEBCEFBCEDDACEBCEFACEBCEFBCEIACEBCEFBCEDACEBCEFACEBCEFBCEDDACEBCEFBCEDACEBCEFJACEBCESHHACEBCEFMHHHHHHABFABFCEDACEBCEFABFABFCEDDABFABFCEDACEBCEFJABFCTHHH $.
or-left-distributivity $p |- ( \iff ( \or ( \and ph0 ph1 ) ph2 ) ( \and ( \or ph0 ph2 ) ( \or ph1 ph2 ) ) ) $= ( or-is-pattern and-is-pattern or-intro-left-sugar rule-imp-transitivity rule-and-intro-alt2-sugar or-intro-right-sugar and-elim-left-sugar and-elim-right-sugar rule-or-elim-sugar or-left-distributivity-right rule-iff-intro ) ABECDACDBCDEABECACDBCDEABEACDBCDABEAACDABJACFGABEBBCDABKBCFGHCACDBCDCAICBIHLABCMN $.
or-right-distributivity $p |- ( \iff ( \or ph0 ( \and ph1 ph2 ) ) ( \and ( \or ph0 ph1 ) ( \or ph0 ph2 ) ) ) $= ( or-is-pattern and-is-pattern rule-iff-elim-left or-commutativity rule-imp-transitivity or-left-distributivity rule-imp-compat-in-and rule-iff-elim-right rule-iff-intro ) ABCEDABDACDEABCEDBCEADABDACDEABCEDBCEADABCEGFBCEADBADCADEABDACDEBCEADBADCADEBCAIFBADABDCADACDBADABDBAGFCADACDCAGFJHHABDACDEBCEADABCEDABDACDEBADCADEBCEADABDBADACDCADABDBADABGFACDCADACGFJBCEADBADCADEBCAIKHBCEADABCEDBCEAGFHL $.
and-left-distributivity $p |- ( \iff ( \and ( \or ph0 ph1 ) ph2 ) ( \or ( \and ph0 ph2 ) ( \and ph1 ph2 ) ) ) $= ( not-is-pattern and-is-pattern or-is-pattern rule-imp-transitivity rule-iff-elim-left de-morgan-and rule-iff-elim-right de-morgan-or rule-imp-compat-in-and or-left-distributivity imp-reflexivity rule-imp-compat-in-or rule-contrapositive-alt-sugar rule-iff-intro ) ABFCEACEBCEFACEBCEFABFCEACEBCEFDADCDFBDCDFEABFCEDACEBCEFDACEDBCEDEADCDFBDCDFEACEBCEFDACEDBCEDEACEBCEKHACEDADCDFBCEDBDCDFACEDADCDFACIHBCEDBDCDFBCIHLGADCDFBDCDFEADBDECDFABFCEDADBDECDFADCDFBDCDFEADBDCDMJADBDECDFABFDCDFABFCEDADBDEABFDCDCDABFDADBDEABKJCDNOABFCEDABFDCDFABFCIJGGGPABFCEACEBCEFABFCEDADBDECDFACEBCEFDABFCEDABFDCDFADBDECDFABFCEDABFDCDFABFCIHABFDADBDECDCDABFDADBDEABKHCDNOGADBDECDFACEDBCEDEACEBCEFDADBDECDFADCDFBDCDFEACEDBCEDEADBDECDFADCDFBDCDFEADBDCDMHADCDFACEDBDCDFBCEDACEDADCDFACIJBCEDBDCDFBCIJLGACEBCEFDACEDBCEDEACEBCEKJGGPQ $.
resolution-1 $p |- ( \imp ( \and ( \not ph0 ) ph0 ) \bot ) $= ( not-is-pattern and-is-pattern bot-is-pattern and-commutativity rule-iff-elim-left bot-to-and rule-iff-elim-right rule-imp-transitivity ) ABACAABCDABACAABCABAEFDAABCAGHI $.
resolution-2 $p |- ( \imp ( \and ( \or ( \not ph0 ) ph1 ) ph0 ) ph1 ) $= ( not-is-pattern imp-is-pattern or-is-pattern bot-is-pattern and-is-pattern notation-symmetry notation-transitivity notation-reflexivity not-is-sugar notation-imp proof-rule-mp or-is-sugar notation-proof and-is-sugar proof-rule-prop-2 and-elim-left-sugar imp-transitivity not-elim rule-imp-transitivity and-elim-right-sugar ) ACCBDAGBDACBEAGBDACCBDAGADACCBDAGBDACCBDAGABDDACCBDAGADACCBDAGBDDACCBDAGABQACCBDAGACCBDABDACCBDARAACCDACCBDABDDAACCBSAAFDFDDAACCDATAACCAAFDFDAJACCACFDAFDFDACKAFDFDACFDAFDFACFACAFDACAFDAFDAKAFDAFDAFDJHIHFJLHILOMUAMACCBDAUBMACBEAGBACCBDAGBACBEAGACBECACECACCBDAGACBEAPACCBDAGACBECACECACCBDAGACCBDCACECACBECACECACCBDAPACBECACECACCBDCACECACBECACECACBECACEFDACCBDCACECACBECACEKACCBDCACECACBECACEFDACCBDCACECACCBDCACEFDACBECACEFDACCBDCACEKACBECACEFDACCBDCACEFDACBECACEFACCBDCACEFACBECACEACBECCACDACCBDCACEACBECACNACCBDCACEACBECCACDACCBDCACEACCBDCCACDACBECCACDACCBDCACNACBECCACDACCBDCCACDACBECCACACCBDCCACACBECCACBECFDACCBDCCACBECKACCBDCCACBECFDACCBDCCACCBDCFDACBECFDACCBDCKACBECFDACCBDCFDACBECFACCBDCFACBECACBEFDACCBDCACBEKACCBDCACBEFDACCBDCACCBDFDACBEFDACCBDKACBEFDACCBDFDACBEFACCBDFACBEACCBDACCBDACBNACCBDACCBDACCBDJHIFJLHIHIFJLHIHIACJLHIHIFJLHIHIHIHIBJLO $.
resolution-3 $p |- ( \imp ( \and ( \not ph0 ) ( \or ph0 ph1 ) ) ph1 ) $= ( not-is-pattern imp-is-pattern or-is-pattern bot-is-pattern and-is-pattern notation-symmetry notation-transitivity notation-reflexivity not-is-sugar notation-imp or-is-sugar proof-rule-mp and-is-sugar proof-rule-prop-2 and-elim-right-sugar and-elim-left-sugar notation-proof ) ACACBDGBDACABEGBDACACBDGACDACACBDGBDACACBDGACBDDACACBDGACDACACBDGBDDACACBDGACBPACACBDQNACACBDRNACABEGBACACBDGBACABEGACCABECECACACBDGACABEOACACBDGACCABECECACACBDGACCACBDCECACCABECECACACBDOACCABECECACCACBDCECACCABECECACCABECEFDACCACBDCECACCABECEKACCACBDCECACCABECEFDACCACBDCECACCACBDCEFDACCABECEFDACCACBDCEKACCABECEFDACCACBDCEFDACCABECEFACCACBDCEFACCABECEACCCABECDACCACBDCEACCABECMACCACBDCEACCCABECDACCACBDCEACCCACBDCDACCCABECDACCACBDCMACCCABECDACCCACBDCDACCCABECACCCACBDCACCCJABECABEFDACBDCABEKACBDCABEFDACBDCACBDFDABEFDACBDKABEFDACBDFDABEFACBDFABEACBDACBDABMACBDACBDACBDJHIFJLHIHILHIHIFJLHIHIHIHIBJLS $.
resolution-4 $p |- ( \imp ( \and ( \or ( \not ph0 ) ph1 ) ( \or ph0 ph2 ) ) ( \or ph1 ph2 ) ) $= ( or-is-pattern and-is-pattern not-is-pattern rule-imp-transitivity and-left-distributivity rule-iff-elim-left resolution-3 or-intro-right-sugar and-elim-left-sugar or-intro-left-sugar rule-or-elim-sugar ) AFBDACDEAFACDEBACDEDBCDAFBDACDEAFACDEBACDEDAFBACDHIAFACDEBACDEBCDAFACDECBCDACJCBKGBACDEBBCDBACDLBCMGNG $.
${ premises-switch.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   premises-switch $p |- ( \imp ph1 ( \imp ph0 ph2 ) ) $= ( not-is-pattern and-is-pattern or-is-pattern iff-reflexivity rule-iff-transitivity imp-is-pattern rule-iff-compat-in-and and-associativity rule-iff-symmetry rule-iff-compat-in-not rule-iff-compat-in-or and-commutativity rule-imp-transitivity rule-iff-elim-left bot-is-pattern imp-to-or de-morgan-or double-negation and-idempotency and-elim-left-sugar rule-imp-compat-in-and resolution-2 proof-rule-mp contradiction resolution-1 and-bot ) ABCJJBACJJABCJJBACJJJESJABCJJBACJJJABCJJBACJJJUHABCJJBACJJJECEABAEBECGGFFFSABCJJBACJJJECEABAEBECGGFFFABCJJBACJJJEAEBECGGBACEFFFCEABAEBECGGFFFABCJJBACJJJEAEBECGGEBEAECGGGEAEBECGGBACEFFFABCJJBACJJJAEBECGGEBEAECGGGABCJJBACJJJABCJJEBACJJGAEBECGGEBEAECGGGABCJJBACJJTABCJJEAEBECGGEBACJJBEAECGGABCJJAEBECGGABCJJAEBCJGAEBECGGABCJTAEAEBCJBECGAAAHNBCJBECGBECGBCTBEBECCBBBHNCHOIOINBACJJBEACJGBEAECGGBACJTBEBEACJAECGBBBHNACJAECGAECGACTAEAECCAAAHNCHOIOIOINAEBECGGEBEAECGGGEAEBECGGEEBEAECGGEFAEBECGGBACEFFFAEBECGGEBEAECGGUAAEBECGGEEBEAECGGEFAEBECGGBACEFFFAEBECGGBACEFFFAEBECGGEEAEBECGGBEAECGGEBACEFFAEBECGGEEAEBECGGAEBECGGAEBECGGUBAEBECGGAEBECGGAEBECGGAEAEBECGBECGAAAHNBEBECCBBBHNCHOOAEAEBECGBECGAAAHNBEBECCBBBHNCHOOIIBEAECGGEBEEAECGEFBACEFFBEAECGUABEEAECGEFBACEFFBACEFFBEEBAECGEACEFBEEBBBUBBHIAECGEAEECEFACEFAECUAAEECEFACEFACEFAEEACECEAEEAAAUBAHICEHKACEFHIIKBACEFFHIIKAEBECGGBACEFFFHIIIAEBECGGBACEFFFAEBECGGBACEFFFCEABAEBECGGFFFAEBECGGBACEFFFHAEBECGGBACEFFFBAEBECGGACEFFFCEABAEBECGGFFFAEBECGGBACEFFFBAEBECGGACEFFFBAEBECGGACEFFFAEBECGGBACEFFFBAEBECGGFACEFFBAEBECGGACEFFFAEBECGGBACEFFFAEBECGGBFACEFFBAEBECGGFACEFFAEBECGGBACEFFFAEBECGGBACEFFFAEBECGGBFACEFFAEBECGGBACEFFFHAEBECGGBFACEFFAEBECGGBACEFFFAEBECGGBACEFLMIAEBECGGBFBAEBECGGFACEFACEFAEBECGGBPACEFHKIBAEBECGGACEFLIBBAEBECGGACEFFAEBECGGACEFFBHAEBECGGACEFFHKIBAEBECGGACEFFFABAEBECGGCEFFFCEABAEBECGGFFFBAEBECGGACEFFFABAEBECGGCEFFFABAEBECGGCEFFFBAEBECGGACEFFFABFAEBECGGCEFFABAEBECGGCEFFFBAEBECGGACEFFFBAFAEBECGGCEFFABFAEBECGGCEFFBAEBECGGACEFFFBAAEBECGGCEFFFBAFAEBECGGCEFFBBAEBECGGACEFFAAEBECGGCEFFBHAEBECGGACEFFAAEBECGGFCEFAAEBECGGCEFFAEBECGGACEFFAEBECGGAFCEFAAEBECGGFCEFAEBECGGACEFFAEBECGGACEFFAEBECGGAFCEFAEBECGGACEFFHAEBECGGAFCEFAEBECGGACEFFAEBECGGACELMIAEBECGGAFAAEBECGGFCECEAEBECGGAPCEHKIAAEBECGGCELIKBAFAEBECGGCEFFBAAEBECGGCEFFFBAAEBECGGCEFLMIBAFABFAEBECGGCEFAEBECGGCEFBAPAEBECGGCEFHKIABAEBECGGCEFLIAABAEBECGGCEFFBAEBECGGCEFFAHBAEBECGGCEFFHKIABAEBECGGCEFFFCEABAEBECGGFFFCEABAEBECGGFFFABAEBECGGCEFFFCEABAEBECGGFFFCEABAEBECGGFFFABAEBECGGCEFFFCEAFBAEBECGGFFCEABAEBECGGFFFABAEBECGGCEFFFACEFBAEBECGGFFCEAFBAEBECGGFFABAEBECGGCEFFFACEBAEBECGGFFFACEFBAEBECGGFFAABAEBECGGCEFFCEBAEBECGGFFAHBAEBECGGCEFFCEBFAEBECGGFCEBAEBECGGFFBAEBECGGCEFFBCEFAEBECGGFCEBFAEBECGGFBAEBECGGCEFFBCEAEBECGGFFBCEFAEBECGGFBBAEBECGGCEFCEAEBECGGFBHAEBECGGCEPKBCEFAEBECGGFBCEAEBECGGFFBCEAEBECGGLMIBCEFCEBFAEBECGGAEBECGGBCEPAEAEBECGBECGAAAHNBEBECCBBBHNCHOOKICEBAEBECGGLIKACEFBAEBECGGFFACEBAEBECGGFFFACEBAEBECGGFLMIACEFCEAFBAEBECGGFBAEBECGGFACEPBAEBECGGFHKICEABAEBECGGFLICECEABAEBECGGFFABAEBECGGFFCEHABAEBECGGFFHKICECEABAEBECGGFFABAEBECGGFFCEHABAEBECGGFFHKIIIIIRCEABAEBECGGFFFCBECGCEABAEBECGGFFFFFSCEABAEBECGGFFFBECGCEABAEBECGGFFFFCBECGCEABAEBECGGFFFFFCEABAEBECGGFFFCEABAEBECGGFFFCEABAEBECGGFFFFBECGCEABAEBECGGFFFFCEABAEBECGGFFFCEABAEBECGGFFFCEABAEBECGGFFFFCEABAEBECGGFFFCEABAEBECGGFFFFCEABAEBECGGFFFCEABAEBECGGFFFUCMRCEABAEBECGGFFFBECGCEABAEBECGGFFFCEABAEBECGGFFFCEABAEBECGGFFFAEBECGGAFCEBFFBECGCEABAEBECGGFFFAEBECGGAFCEBFFCEABAEBECGGFFFAEBECGGACEBFFFAEBECGGAFCEBFFCEABAEBECGGFFFAEBECGGACEBFFFAEBECGGACEBFFFCEABAEBECGGFFFACEBAEBECGGFFFAEBECGGACEBFFFCEABAEBECGGFFFACEBAEBECGGFFFACEBAEBECGGFFFCEABAEBECGGFFFACEFBAEBECGGFFACEBAEBECGGFFFCEABAEBECGGFFFCEAFBAEBECGGFFACEFBAEBECGGFFCEABAEBECGGFFFCEABAEBECGGFFFCEAFBAEBECGGFFCECEABAEBECGGFFABAEBECGGFFCEHABAEBECGGFFHKCEAFBAEBECGGFFCEABAEBECGGFFFCEABAEBECGGFLMICEAFACEFBAEBECGGFBAEBECGGFCEAPBAEBECGGFHKIACEBAEBECGGFLIAACEBAEBECGGFFCEBAEBECGGFFAHCEBAEBECGGFFHKIACEBAEBECGGFFFAEBECGGAFCEBFFAEBECGGACEBFFFACEBAEBECGGFFFAAEBECGGFCEBFFAEBECGGAFCEBFFACEBAEBECGGFFFAAEBECGGCEBFFFAAEBECGGFCEBFFAACEBAEBECGGFFAEBECGGCEBFFAHCEBAEBECGGFFAEBECGGCEFBFAEBECGGCEBFFCEBAEBECGGFFCEAEBECGGFBFAEBECGGCEFBFCEBAEBECGGFFCEAEBECGGBFFCEAEBECGGFBFCECEBAEBECGGFAEBECGGBFCEHBAEBECGGPKCEAEBECGGFBFCEAEBECGGBFFCEAEBECGGBLMICEAEBECGGFAEBECGGCEFBBCEAEBECGGPBHKIAEBECGGCEBLIKAAEBECGGFCEBFFAAEBECGGCEBFFFAAEBECGGCEBFLMIAAEBECGGFAEBECGGAFCEBFCEBFAAEBECGGPCEBFHKIAEBECGGACEBFLIIAEBECGGAEBECGGACEBFFACEBFFAEAEBECGBECGAAAHNBEBECCBBBHNCHOOACEBFFHKIAEBECGGAFCEBFFAEBECGGACEBFFFAEBECGGACEBFLMIRAEBECGGAFCEBFFAEBECGGAFBECGAEBECGGAFCEBFUDAEBECGGAFBECGBECGABECGUFBECGBECGBEBECCBBBHNCHORQQQCEABAEBECGGFFFCEABAEBECGGFFFCECEABAEBECGGFFABAEBECGGFFCEHABAEBECGGFFHKRUEQBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFUCMRBECGCEABAEBECGGFFFFCBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFBECGBFCEAAEBECGGFFFCBECGCEABAEBECGGFFFFBECGBFCEAAEBECGGFFFBECGCEABAEBECGGFFFFBECGBCEAAEBECGGFFFFBECGBFCEAAEBECGGFFFBECGCEABAEBECGGFFFFBECGBCEAAEBECGGFFFFBECGBCEAAEBECGGFFFFBECGCEABAEBECGGFFFFBBECGCEAAEBECGGFFFFBECGBCEAAEBECGGFFFFBECGCEABAEBECGGFFFFBBECGCEAAEBECGGFFFFBBECGCEAAEBECGGFFFFBECGCEABAEBECGGFFFFBBECGFCEAAEBECGGFFFBBECGCEAAEBECGGFFFFBECGCEABAEBECGGFFFFBECGBFCEAAEBECGGFFFBBECGFCEAAEBECGGFFFBECGCEABAEBECGGFFFFBECGBCEAAEBECGGFFFFBECGBFCEAAEBECGGFFFBECGBECGCEABAEBECGGFFFBCEAAEBECGGFFFBEBECCBBBHNCHOCEABAEBECGGFFFBCEFAAEBECGGFFBCEAAEBECGGFFFCEABAEBECGGFFFCEBFAAEBECGGFFBCEFAAEBECGGFFCEABAEBECGGFFFCEBAAEBECGGFFFCEBFAAEBECGGFFCECEABAEBECGGFFBAAEBECGGFFCEHABAEBECGGFFBAFAEBECGGFBAAEBECGGFFABAEBECGGFFABFAEBECGGFBAFAEBECGGFABAEBECGGFFABAEBECGGFFABFAEBECGGFABAEBECGGFFHABFAEBECGGFABAEBECGGFFABAEBECGGLMIABFBAFAEBECGGAEBECGGABPAEAEBECGBECGAAAHNBEBECCBBBHNCHOOKIBAAEBECGGLIKCEBFAAEBECGGFFCEBAAEBECGGFFFCEBAAEBECGGFLMICEBFBCEFAAEBECGGFAAEBECGGFCEBPAAEBECGGFHKIBCEAAEBECGGFLIKBECGBFCEAAEBECGGFFFBECGBCEAAEBECGGFFFFBECGBCEAAEBECGGFFLMIBECGBFBBECGFCEAAEBECGGFFCEAAEBECGGFFBECGBPCEAAEBECGGFFHKIBBECGCEAAEBECGGFFLIBBBECGCEAAEBECGGFFFBECGCEAAEBECGGFFFBHBECGCEAAEBECGGFFFHKIBBECGCEAAEBECGGFFFFBECGBFCEAAEBECGGFFFBECGBCEAAEBECGGFFFFBBECGCEAAEBECGGFFFFBBECGFCEAAEBECGGFFFBECGBFCEAAEBECGGFFFBBECGCEAAEBECGGFFFFBBECGCEAAEBECGGFFFFBBECGFCEAAEBECGGFFFBBBECGCEAAEBECGGFFFBECGCEAAEBECGGFFFBHBECGCEAAEBECGGFFFHKBBECGFCEAAEBECGGFFFBBECGCEAAEBECGGFFFFBBECGCEAAEBECGGFFLMIBBECGFBECGBFCEAAEBECGGFFCEAAEBECGGFFBBECGPCEAAEBECGGFFHKIBECGBCEAAEBECGGFFLIIBECGBECGBCEAAEBECGGFFFBCEAAEBECGGFFFBEBECCBBBHNCHOBCEAAEBECGGFFFHKIBECGBFCEAAEBECGGFFFBECGBCEAAEBECGGFFFFBECGBCEAAEBECGGFFLMIRBECGBFCEAAEBECGGFFFBECGBFCBECGBFCEAAEBECGGFFUDBECGBFCCBCUFCCCHRQQQBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFHRUEQQCBECGCEABAEBECGGFFFFFSCBECGCEABAEBECGGFFFFFFSCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFFSCBECGCEABAEBECGGFFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFUCMRCBECGCEABAEBECGGFFFFFSCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCECFBECGABAEBECGGFFFFSCBECGCEABAEBECGGFFFFFCECFBECGABAEBECGGFFFFCBECGCEABAEBECGGFFFFFCECBECGABAEBECGGFFFFFCECFBECGABAEBECGGFFFFCBECGCEABAEBECGGFFFFFCECBECGABAEBECGGFFFFFCECBECGABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCECBECGABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFHCBECGCEABAEBECGGFFFFFHICBECGCEABAEBECGGFFFFFCECFBECGABAEBECGGFFFFCECBECGABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCCEFBECGABAEBECGGFFFFCECFBECGABAEBECGGFFFFCBECGCEABAEBECGGFFFFFCCEBECGABAEBECGGFFFFFCCEFBECGABAEBECGGFFFFCCBECGCEABAEBECGGFFFFCEBECGABAEBECGGFFFFCHBECGCEABAEBECGGFFFFCEBECGFABAEBECGGFFFCEBECGABAEBECGGFFFFBECGCEABAEBECGGFFFFBECGCEFABAEBECGGFFFCEBECGFABAEBECGGFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFFFBECGCEFABAEBECGGFFFBECGCEABAEBECGGFFFFHBECGCEFABAEBECGGFFFBECGCEABAEBECGGFFFFBECGCEABAEBECGGFFLMIBECGCEFCEBECGFABAEBECGGFFABAEBECGGFFBECGCEPABAEBECGGFFHKICEBECGABAEBECGGFFLIKCCEFBECGABAEBECGGFFFFCCEBECGABAEBECGGFFFFFCCEBECGABAEBECGGFFFLMICCEFCECFBECGABAEBECGGFFFBECGABAEBECGGFFFCCEPBECGABAEBECGGFFFHKICECBECGABAEBECGGFFFLIICECECBECGABAEBECGGFFFFCBECGABAEBECGGFFFFCEHCBECGABAEBECGGFFFFHKICECFBECGABAEBECGGFFFFCECBECGABAEBECGGFFFFFCECBECGABAEBECGGFFFLMIRCECFBECGABAEBECGGFFFFCECFSCECFBECGABAEBECGGFFFUDCUIQQCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFCBECGCEABAEBECGGFFFFFHRUEQCBECGCEABAEBECGGFFFFFUJQQQUGDUG $. $}
premises-switch-alt $p |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ph1 ( \imp ph0 ph2 ) ) ) $= ( not-is-pattern and-is-pattern or-is-pattern rule-iff-transitivity iff-reflexivity imp-is-pattern rule-iff-compat-in-and and-associativity rule-iff-symmetry rule-iff-compat-in-not and-commutativity rule-iff-compat-in-or rule-imp-transitivity rule-iff-elim-left bot-is-pattern imp-to-or de-morgan-or double-negation and-idempotency or-commutativity and-elim-left-sugar rule-imp-compat-in-and or-associativity contradiction resolution-3 resolution-2 resolution-1 and-bot proof-rule-mp ) ABCIIBACIIIDRIABCIIBACIIIABCIIBACIIIUGABCIIBACIIIDCDABADBDCFFEEERABCIIBACIIIDCDABADBDCFFEEEABCIIBACIIIDADBDCFFBACDEEECDABADBDCFFEEEABCIIBACIIIDADBDCFFDBDADCFFFDADBDCFFBACDEEEABCIIBACIIIADBDCFFDBDADCFFFABCIIBACIIIABCIIDBACIIFADBDCFFDBDADCFFFABCIIBACIISABCIIDADBDCFFDBACIIBDADCFFABCIIADBDCFFABCIIADBCIFADBDCFFABCISADADBCIBDCFAAAHMBCIBDCFBDCFBCSBDBDCCBBBHMCHOGOGMBACIIBDACIFBDADCFFBACISBDBDACIADCFBBBHMACIADCFADCFACSADADCCAAAHMCHOGOGOGMADBDCFFDBDADCFFFDADBDCFFDDBDADCFFDEADBDCFFBACDEEEADBDCFFDBDADCFFTADBDCFFDDBDADCFFDEADBDCFFBACDEEEADBDCFFBACDEEEADBDCFFDDADBDCFFBDADCFFDBACDEEADBDCFFDDADBDCFFADBDCFFADBDCFFUAADBDCFFADBDCFFADBDCFFADADBDCFBDCFAAAHMBDBDCCBBBHMCHOOADADBDCFBDCFAAAHMBDBDCCBBBHMCHOOGGBDADCFFDBDDADCFDEBACDEEBDADCFTBDDADCFDEBACDEEBACDEEBDDBADCFDACDEBDDBBBUABHGADCFDADDCDEACDEADCTADDCDEACDEACDEADDACDCDADDAAAUAAHGCDHJACDEHGGJBACDEEHGGJADBDCFFBACDEEEHGGGADBDCFFBACDEEEADBDCFFBACDEEECDABADBDCFFEEEADBDCFFBACDEEEHADBDCFFBACDEEEBADBDCFFACDEEECDABADBDCFFEEEADBDCFFBACDEEEBADBDCFFACDEEEBADBDCFFACDEEEADBDCFFBACDEEEBADBDCFFEACDEEBADBDCFFACDEEEADBDCFFBACDEEEADBDCFFBEACDEEBADBDCFFEACDEEADBDCFFBACDEEEADBDCFFBACDEEEADBDCFFBEACDEEADBDCFFBACDEEEHADBDCFFBEACDEEADBDCFFBACDEEEADBDCFFBACDEKLGADBDCFFBEBADBDCFFEACDEACDEADBDCFFBNACDEHJGBADBDCFFACDEKGBBADBDCFFACDEEADBDCFFACDEEBHADBDCFFACDEEHJGBADBDCFFACDEEEABADBDCFFCDEEECDABADBDCFFEEEBADBDCFFACDEEEABADBDCFFCDEEEABADBDCFFCDEEEBADBDCFFACDEEEABEADBDCFFCDEEABADBDCFFCDEEEBADBDCFFACDEEEBAEADBDCFFCDEEABEADBDCFFCDEEBADBDCFFACDEEEBAADBDCFFCDEEEBAEADBDCFFCDEEBBADBDCFFACDEEAADBDCFFCDEEBHADBDCFFACDEEAADBDCFFECDEAADBDCFFCDEEADBDCFFACDEEADBDCFFAECDEAADBDCFFECDEADBDCFFACDEEADBDCFFACDEEADBDCFFAECDEADBDCFFACDEEHADBDCFFAECDEADBDCFFACDEEADBDCFFACDKLGADBDCFFAEAADBDCFFECDCDADBDCFFANCDHJGAADBDCFFCDKGJBAEADBDCFFCDEEBAADBDCFFCDEEEBAADBDCFFCDEKLGBAEABEADBDCFFCDEADBDCFFCDEBANADBDCFFCDEHJGABADBDCFFCDEKGAABADBDCFFCDEEBADBDCFFCDEEAHBADBDCFFCDEEHJGABADBDCFFCDEEECDABADBDCFFEEECDABADBDCFFEEEABADBDCFFCDEEECDABADBDCFFEEECDABADBDCFFEEEABADBDCFFCDEEECDAEBADBDCFFEECDABADBDCFFEEEABADBDCFFCDEEEACDEBADBDCFFEECDAEBADBDCFFEEABADBDCFFCDEEEACDBADBDCFFEEEACDEBADBDCFFEEAABADBDCFFCDEECDBADBDCFFEEAHBADBDCFFCDEECDBEADBDCFFECDBADBDCFFEEBADBDCFFCDEEBCDEADBDCFFECDBEADBDCFFEBADBDCFFCDEEBCDADBDCFFEEBCDEADBDCFFEBBADBDCFFCDECDADBDCFFEBHADBDCFFCDNJBCDEADBDCFFEBCDADBDCFFEEBCDADBDCFFKLGBCDECDBEADBDCFFADBDCFFBCDNADADBDCFBDCFAAAHMBDBDCCBBBHMCHOOJGCDBADBDCFFKGJACDEBADBDCFFEEACDBADBDCFFEEEACDBADBDCFFEKLGACDECDAEBADBDCFFEBADBDCFFEACDNBADBDCFFEHJGCDABADBDCFFEKGCDCDABADBDCFFEEABADBDCFFEECDHABADBDCFFEEHJGCDCDABADBDCFFEEABADBDCFFEECDHABADBDCFFEEHJGGGGGQCDABADBDCFFEEEADADBDFCDABADBDCFFEEEEERCDABADBDCFFEEEADBDFCDABADBDCFFEEEEADADBDFCDABADBDCFFEEEEECDABADBDCFFEEECDABADBDCFFEEECDABADBDCFFEEEEADBDFCDABADBDCFFEEEECDABADBDCFFEEECDABADBDCFFEEECDABADBDCFFEEEECDABADBDCFFEEECDABADBDCFFEEEECDABADBDCFFEEECDABADBDCFFEEEUBLQCDABADBDCFFEEEADBDFCDABADBDCFFEEECDABADBDCFFEEECDABADBDCFFEEECDCADBDFFEABEEADBDFCDABADBDCFFEEECDCADBDFFEABEECDABADBDCFFEEECDCADBDFFABEEECDCADBDFFEABEECDABADBDCFFEEECDCADBDFFABEEECDCADBDFFABEEECDABADBDCFFEEECADBDFFCDABEEECDCADBDFFABEEECDABADBDCFFEEEADBDCFFCDABEEECADBDFFCDABEEECDABADBDCFFEEEADBDCFFCDEABEEADBDCFFCDABEEECDABADBDCFFEEECDADBDCFFEABEEADBDCFFCDEABEECDABADBDCFFEEECDADBDCFFABEEECDADBDCFFEABEECDCDABADBDCFFEEADBDCFFABEECDHABADBDCFFEEADBDCFFAEBEADBDCFFABEEABADBDCFFEEAADBDCFFEBEADBDCFFAEBEABADBDCFFEEAADBDCFFBEEAADBDCFFEBEAABADBDCFFEADBDCFFBEAHBADBDCFFNJAADBDCFFEBEAADBDCFFBEEAADBDCFFBKLGAADBDCFFEADBDCFFAEBBAADBDCFFNBHJGADBDCFFABKGJCDADBDCFFEABEECDADBDCFFABEEECDADBDCFFABEKLGCDADBDCFFEADBDCFFCDEABEABECDADBDCFFNABEHJGADBDCFFCDABEKGADBDCFFCADBDFFCDABEECDABEEADBDCFFCADFBDFCADBDFFADBDCFFADCFBDFCADFBDFADBDCFFADCBDFFADCFBDFADADBDCFCBDFAAAHMBDCUCOADCFBDFADCBDFFADCBDUFLGADCFCADFBDBDADCUCBBBHMOGCADBDUFGCDABEEHJGCADBDFFCDABEEECDCADBDFFEABEECDCADBDFFABEEECADBDFFCDABEEECADBDFFCDEABEECDCADBDFFEABEECADBDFFCDABEEECADBDFFCDABEEECADBDFFCDEABEECADBDFFCADBDFFCDABEECDABEECADBDFFHCDABEEHJCADBDFFCDEABEECADBDFFCDABEEECADBDFFCDABEKLGCADBDFFCDECDCADBDFFEABEABECADBDFFCDNABEHJGCDCADBDFFABEKGGCDCDCADBDFFABEECADBDFFABEECDHCADBDFFABEEHJGCDCADBDFFEABEECDCADBDFFABEEECDCADBDFFABEKLGQCDCADBDFFEABEECDCADBDFFEADBDFCDCADBDFFEABEUDCDCADBDFFEADBDFADBDFCADBDFUHADBDFADBDFADBDFHQPPPCDABADBDCFFEEECDABADBDCFFEEECDCDABADBDCFFEEABADBDCFFEECDHABADBDCFFEEHJQUEPADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEEADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEEADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEUBLQADBDFCDABADBDCFFEEEEADADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEBDADFBECDAADBDCFFEEEADADBDFCDABADBDCFFEEEEBDADFBECDAADBDCFFEEEADBDFCDABADBDCFFEEEEBDADFBCDAADBDCFFEEEEBDADFBECDAADBDCFFEEEADBDFCDABADBDCFFEEEEADBDFBCDAADBDCFFEEEEBDADFBCDAADBDCFFEEEEADBDFCDABADBDCFFEEEEBADBDFCDAADBDCFFEEEEADBDFBCDAADBDCFFEEEEADBDFCDABADBDCFFEEEEBADBDFCDAADBDCFFEEEEBADBDFCDAADBDCFFEEEEADBDFCDABADBDCFFEEEEBADBDFECDAADBDCFFEEEBADBDFCDAADBDCFFEEEEADBDFCDABADBDCFFEEEEADBDFBECDAADBDCFFEEEBADBDFECDAADBDCFFEEEADBDFCDABADBDCFFEEEEADBDFBCDAADBDCFFEEEEADBDFBECDAADBDCFFEEEADBDFADBDFCDABADBDCFFEEEBCDAADBDCFFEEEADBDFHCDABADBDCFFEEEBCDEAADBDCFFEEBCDAADBDCFFEEECDABADBDCFFEEECDBEAADBDCFFEEBCDEAADBDCFFEECDABADBDCFFEEECDBAADBDCFFEEECDBEAADBDCFFEECDCDABADBDCFFEEBAADBDCFFEECDHABADBDCFFEEBAEADBDCFFEBAADBDCFFEEABADBDCFFEEABEADBDCFFEBAEADBDCFFEABADBDCFFEEABADBDCFFEEABEADBDCFFEABADBDCFFEEHABEADBDCFFEABADBDCFFEEABADBDCFFKLGABEBAEADBDCFFADBDCFFABNADADBDCFBDCFAAAHMBDBDCCBBBHMCHOOJGBAADBDCFFKGJCDBEAADBDCFFEECDBAADBDCFFEEECDBAADBDCFFEKLGCDBEBCDEAADBDCFFEAADBDCFFECDBNAADBDCFFEHJGBCDAADBDCFFEKGJADBDFBECDAADBDCFFEEEADBDFBCDAADBDCFFEEEEADBDFBCDAADBDCFFEEKLGADBDFBEBADBDFECDAADBDCFFEECDAADBDCFFEEADBDFBNCDAADBDCFFEEHJGBADBDFCDAADBDCFFEEKGBBADBDFCDAADBDCFFEEEADBDFCDAADBDCFFEEEBHADBDFCDAADBDCFFEEEHJGBADBDFCDAADBDCFFEEEEADBDFBECDAADBDCFFEEEADBDFBCDAADBDCFFEEEEBADBDFCDAADBDCFFEEEEBADBDFECDAADBDCFFEEEADBDFBECDAADBDCFFEEEBADBDFCDAADBDCFFEEEEBADBDFCDAADBDCFFEEEEBADBDFECDAADBDCFFEEEBBADBDFCDAADBDCFFEEEADBDFCDAADBDCFFEEEBHADBDFCDAADBDCFFEEEHJBADBDFECDAADBDCFFEEEBADBDFCDAADBDCFFEEEEBADBDFCDAADBDCFFEEKLGBADBDFEADBDFBECDAADBDCFFEECDAADBDCFFEEBADBDFNCDAADBDCFFEEHJGADBDFBCDAADBDCFFEEKGGADBDFBDADFBCDAADBDCFFEEEBCDAADBDCFFEEEADBDUCBCDAADBDCFFEEEHJGBDADFBECDAADBDCFFEEEBDADFBCDAADBDCFFEEEEBDADFBCDAADBDCFFEEKLGQBDADFBECDAADBDCFFEEEBDADFBEADBDADFBECDAADBDCFFEEUDBDADFBEADADBADUIADADAAAHMQPPPADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEADBDFCDABADBDCFFEEEEHQUEPPADADBDFCDABADBDCFFEEEEERADADBDFCDABADBDCFFEEEEEERADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEERADADBDFCDABADBDCFFEEEEEEADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEEADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEEADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEUBLQADADBDFCDABADBDCFFEEEEERADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEADAEADBDFCDBADBDCFFEEEERADADBDFCDABADBDCFFEEEEEADAEADBDFCDBADBDCFFEEEEADADBDFCDABADBDCFFEEEEEADAADBDFCDBADBDCFFEEEEEADAEADBDFCDBADBDCFFEEEEADADBDFCDABADBDCFFEEEEEADAADBDFCDBADBDCFFEEEEEADAADBDFCDBADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEAADADBDFCDBADBDCFFEEEEEADAADBDFCDBADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEAADADBDFCDBADBDCFFEEEEEAADADBDFCDBADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEAADEADBDFCDBADBDCFFEEEEAADADBDFCDBADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEADAEADBDFCDBADBDCFFEEEEAADEADBDFCDBADBDCFFEEEEADADBDFCDABADBDCFFEEEEEADAADBDFCDBADBDCFFEEEEEADAEADBDFCDBADBDCFFEEEEADADADBDFCDABADBDCFFEEEEAADBDFCDBADBDCFFEEEEAAAHMADBDFCDABADBDCFFEEEEAADBDFECDBADBDCFFEEEAADBDFCDBADBDCFFEEEEADBDFCDABADBDCFFEEEEADBDFAECDBADBDCFFEEEAADBDFECDBADBDCFFEEEADBDFCDABADBDCFFEEEEADBDFACDBADBDCFFEEEEADBDFAECDBADBDCFFEEEADBDFADBDFCDABADBDCFFEEEACDBADBDCFFEEEADBDFHCDABADBDCFFEEEACDEBADBDCFFEEACDBADBDCFFEEECDABADBDCFFEEECDAEBADBDCFFEEACDEBADBDCFFEECDABADBDCFFEEECDABADBDCFFEEECDAEBADBDCFFEECDCDABADBDCFFEEABADBDCFFEECDHABADBDCFFEEHJCDAEBADBDCFFEECDABADBDCFFEEECDABADBDCFFEKLGCDAEACDEBADBDCFFEBADBDCFFECDANBADBDCFFEHJGACDBADBDCFFEKGJADBDFAECDBADBDCFFEEEADBDFACDBADBDCFFEEEEADBDFACDBADBDCFFEEKLGADBDFAEAADBDFECDBADBDCFFEECDBADBDCFFEEADBDFANCDBADBDCFFEEHJGAADBDFCDBADBDCFFEEKGJADAEADBDFCDBADBDCFFEEEEADAADBDFCDBADBDCFFEEEEEADAADBDFCDBADBDCFFEEEKLGADAEAADEADBDFCDBADBDCFFEEEADBDFCDBADBDCFFEEEADANADBDFCDBADBDCFFEEEHJGAADADBDFCDBADBDCFFEEEKGAAADADBDFCDBADBDCFFEEEEADADBDFCDBADBDCFFEEEEAHADADBDFCDBADBDCFFEEEEHJGAADADBDFCDBADBDCFFEEEEEADAEADBDFCDBADBDCFFEEEEADAADBDFCDBADBDCFFEEEEEAADADBDFCDBADBDCFFEEEEEAADEADBDFCDBADBDCFFEEEEADAEADBDFCDBADBDCFFEEEEAADADBDFCDBADBDCFFEEEEEAADADBDFCDBADBDCFFEEEEEAADEADBDFCDBADBDCFFEEEEAAADADBDFCDBADBDCFFEEEEADADBDFCDBADBDCFFEEEEAHADADBDFCDBADBDCFFEEEEHJAADEADBDFCDBADBDCFFEEEEAADADBDFCDBADBDCFFEEEEEAADADBDFCDBADBDCFFEEEKLGAADEADAEADBDFCDBADBDCFFEEEADBDFCDBADBDCFFEEEAADNADBDFCDBADBDCFFEEEHJGADAADBDFCDBADBDCFFEEEKGGADADAADBDFCDBADBDCFFEEEEAADBDFCDBADBDCFFEEEEAAAHMAADBDFCDBADBDCFFEEEEHJGADAEADBDFCDBADBDCFFEEEEADAADBDFCDBADBDCFFEEEEEADAADBDFCDBADBDCFFEEEKLGQADAEADBDFCDBADBDCFFEEEEADAERADAEADBDFCDBADBDCFFEEEUDAUJPPADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEADADBDFCDABADBDCFFEEEEEHQUEPADADBDFCDABADBDCFFEEEEEUKPPPUL $.
${ $d xX ph0 $.
   substitution-disjoint $a #Substitution ph0 ph0 ph1 xX $. $}
substitution-top $a #Substitution \top \top ph0 xX $.
${ substitution-not.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-not $a #Substitution ( \not ph1 ) ( \not ph2 ) ph0 xX $. $}
${ substitution-or.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-or.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-or $a #Substitution ( \or ph1 ph2 ) ( \or ph3 ph4 ) ph0 xX $. $}
${ substitution-and.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-and.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-and $a #Substitution ( \and ph1 ph2 ) ( \and ph3 ph4 ) ph0 xX $. $}
${ substitution-iff.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-iff.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-iff $a #Substitution ( \iff ph1 ph2 ) ( \iff ph3 ph4 ) ph0 xX $. $}
${ substitution-ceil.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-ceil $a #Substitution ( \ceil ph1 ) ( \ceil ph2 ) ph0 xX $. $}
${ substitution-floor.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-floor $a #Substitution ( \floor ph1 ) ( \floor ph2 ) ph0 xX $. $}
${ substitution-included.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-included.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-included $a #Substitution ( \included ph1 ph2 ) ( \included ph3 ph4 ) ph0 xX $. $}
${ substitution-eq.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-eq.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-eq $a #Substitution ( \eq ph1 ph2 ) ( \eq ph3 ph4 ) ph0 xX $. $}
${ substitution-inh.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-inh $a #Substitution ( \inh ph1 ) ( \inh ph2 ) ph0 xX $. $}
${ substitution-in-sort.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-in-sort.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-in-sort $a #Substitution ( \in-sort ph1 ph2 ) ( \in-sort ph3 ph4 ) ph0 xX $. $}
${ substitution-pair-sort.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-pair-sort.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-pair-sort $a #Substitution ( \pair-sort ph1 ph2 ) ( \pair-sort ph3 ph4 ) ph0 xX $. $}
${ substitution-pair.0 $e #Substitution ph1 ph3 ph0 xX $.
   substitution-pair.1 $e #Substitution ph2 ph4 ph0 xX $.
   substitution-pair $a #Substitution ( \pair ph1 ph2 ) ( \pair ph3 ph4 ) ph0 xX $. $}
${ substitution-pair-fst.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-pair-fst $a #Substitution ( \pair-fst ph1 ) ( \pair-fst ph2 ) ph0 xX $. $}
${ substitution-pair-snd.0 $e #Substitution ph1 ph2 ph0 xX $.
   substitution-pair-snd $a #Substitution ( \pair-snd ph1 ) ( \pair-snd ph2 ) ph0 xX $. $}
${ $d xX x $.
   $d ph2 x $.
   substitution-exists-alt.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-exists-alt $a #Substitution ( \exists x ph0 ) ( \exists x ph1 ) ph2 xX $. $}
${ notation-not.0 $e #Notation ph0 ph1 $.
   notation-not $a #Notation ( \not ph0 ) ( \not ph1 ) $. $}
${ notation-or.0 $e #Notation ph0 ph2 $.
   notation-or.1 $e #Notation ph1 ph3 $.
   notation-or $a #Notation ( \or ph0 ph1 ) ( \or ph2 ph3 ) $. $}
${ notation-and.0 $e #Notation ph0 ph2 $.
   notation-and.1 $e #Notation ph1 ph3 $.
   notation-and $a #Notation ( \and ph0 ph1 ) ( \and ph2 ph3 ) $. $}
${ notation-iff.0 $e #Notation ph0 ph2 $.
   notation-iff.1 $e #Notation ph1 ph3 $.
   notation-iff $a #Notation ( \iff ph0 ph1 ) ( \iff ph2 ph3 ) $. $}
${ notation-forall.0 $e #Notation ph0 ph1 $.
   notation-forall $a #Notation ( \forall x ph0 ) ( \forall x ph1 ) $. $}
${ notation-ceil.0 $e #Notation ph0 ph1 $.
   notation-ceil $a #Notation ( \ceil ph0 ) ( \ceil ph1 ) $. $}
${ notation-floor.0 $e #Notation ph0 ph1 $.
   notation-floor $a #Notation ( \floor ph0 ) ( \floor ph1 ) $. $}
${ notation-in.0 $e #Notation ph0 ph1 $.
   notation-in $a #Notation ( \in x ph0 ) ( \in x ph1 ) $. $}
${ notation-included.0 $e #Notation ph0 ph2 $.
   notation-included.1 $e #Notation ph1 ph3 $.
   notation-included $a #Notation ( \included ph0 ph1 ) ( \included ph2 ph3 ) $. $}
${ notation-eq.0 $e #Notation ph0 ph2 $.
   notation-eq.1 $e #Notation ph1 ph3 $.
   notation-eq $a #Notation ( \eq ph0 ph1 ) ( \eq ph2 ph3 ) $. $}
${ notation-inh.0 $e #Notation ph0 ph1 $.
   notation-inh $a #Notation ( \inh ph0 ) ( \inh ph1 ) $. $}
${ notation-in-sort.0 $e #Notation ph0 ph2 $.
   notation-in-sort.1 $e #Notation ph1 ph3 $.
   notation-in-sort $a #Notation ( \in-sort ph0 ph1 ) ( \in-sort ph2 ph3 ) $. $}
${ notation-sorted-forall.0 $e #Notation ph0 ph2 $.
   notation-sorted-forall.1 $e #Notation ph1 ph3 $.
   notation-sorted-forall $a #Notation ( \sorted-forall x ph0 ph1 ) ( \sorted-forall x ph2 ph3 ) $. $}
${ notation-sorted-exists.0 $e #Notation ph0 ph2 $.
   notation-sorted-exists.1 $e #Notation ph1 ph3 $.
   notation-sorted-exists $a #Notation ( \sorted-exists x ph0 ph1 ) ( \sorted-exists x ph2 ph3 ) $. $}
${ notation-forall-sort.0 $e #Notation ph0 ph1 $.
   notation-forall-sort $a #Notation ( \forall-sort s0 ph0 ) ( \forall-sort s0 ph1 ) $. $}
${ notation-exists-sort.0 $e #Notation ph0 ph1 $.
   notation-exists-sort $a #Notation ( \exists-sort s0 ph0 ) ( \exists-sort s0 ph1 ) $. $}
${ notation-is-top.0 $e #Notation ph0 ph1 $.
   notation-is-top $a #Notation ( \is-top ph0 ) ( \is-top ph1 ) $. $}
${ notation-is-bot.0 $e #Notation ph0 ph1 $.
   notation-is-bot $a #Notation ( \is-bot ph0 ) ( \is-bot ph1 ) $. $}
${ notation-is-predicate.0 $e #Notation ph0 ph1 $.
   notation-is-predicate $a #Notation ( \is-predicate ph0 ) ( \is-predicate ph1 ) $. $}
${ $d x ph0 $.
   propagation-app-bot-left $a |- ( \imp ( \app \bot ph0 ) \bot ) $. $}
${ $d x ph0 $.
   propagation-app-bot-right $a |- ( \imp ( \app ph0 \bot ) \bot ) $. $}
${ $d x ph2 $.
   propagation-app-or-left $a |- ( \imp ( \app ( \or ph0 ph1 ) ph2 ) ( \or ( \app ph0 ph2 ) ( \app ph1 ph2 ) ) ) $. $}
${ $d x ph0 $.
   propagation-app-or-right $a |- ( \imp ( \app ph0 ( \or ph1 ph2 ) ) ( \or ( \app ph0 ph1 ) ( \app ph0 ph2 ) ) ) $. $}
${ $d y ph1 $.
   $d y x $.
   propagation-app-exists-left.0 $e #Fresh x ph1 $.
   propagation-app-exists-left $a |- ( \imp ( \app ( \exists x ph0 ) ph1 ) ( \exists x ( \app ph0 ph1 ) ) ) $. $}
${ $d y ph0 $.
   $d y x $.
   propagation-app-exists-right.0 $e #Fresh x ph0 $.
   propagation-app-exists-right $a |- ( \imp ( \app ph0 ( \exists x ph1 ) ) ( \exists x ( \app ph0 ph1 ) ) ) $. $}
${ $d x ph2 $.
   frame-app-left.0 $e |- ( \imp ph0 ph1 ) $.
   frame-app-left $a |- ( \imp ( \app ph0 ph2 ) ( \app ph1 ph2 ) ) $. $}
${ $d x ph0 $.
   frame-app-right.0 $e |- ( \imp ph1 ph2 ) $.
   frame-app-right $a |- ( \imp ( \app ph0 ph1 ) ( \app ph0 ph2 ) ) $. $}
lemma-top $a |- \top $.
${ lemma-forall-gen.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-forall-gen.1 $e #Fresh x ph0 $.
   lemma-forall-gen $a |- ( \imp ph0 ( \forall x ph1 ) ) $. $}
lemma-dn-intro $a |- ( \imp ph0 ( \imp ( \imp ph0 \bot ) \bot ) ) $.
lemma-imp2-iff $a |- ( \imp ( \and ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ph0 ( \imp ph2 ph1 ) ) ) ( \imp ph0 ( \iff ph1 ph2 ) ) ) $.
${ lemma-forall-intro.0 $e |- ph0 $.
   lemma-forall-intro $a |- ( \forall x ph0 ) $. $}
${ forall-elim.0 $e #Substitution ph1 ph0 y x $.
   forall-elim $a |- ( \imp ( \forall x ph0 ) ph1 ) $. $}
forall-elim-alt $a |- ( \imp ( \forall x ph0 ) ph0 ) $.
forall-elim-alt2 $a |- ( \imp ( \imp ph0 ( \forall x ph1 ) ) ( \imp ph0 ph1 ) ) $.
forall-intro-alt $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \forall x ph0 ) ph1 ) ) $.
exists-intro-alt $a |- ( \imp ph0 ( \exists x ph0 ) ) $.
${ lemma-forall-elim.0 $e |- ( \forall x ph0 ) $.
   lemma-forall-elim $a |- ph0 $. $}
${ $d x ph0 $.
   lemma-forall-sort-elim-disjoint.0 $e |- ( \forall-sort x ph0 ) $.
   lemma-forall-sort-elim-disjoint $a |- ph0 $. $}
${ $d x y $.
   alpha-exists.0 $e #Fresh y ph0 $.
   alpha-exists.1 $e #Substitution ph1 ph0 y x $.
   alpha-exists $a |- ( \iff ( \exists x ph0 ) ( \exists y ph1 ) ) $. $}
${ $d x y $.
   alpha-forall.0 $e #Fresh y ph0 $.
   alpha-forall.1 $e #Substitution ph1 ph0 y x $.
   alpha-forall $a |- ( \iff ( \forall x ph0 ) ( \forall y ph1 ) ) $. $}
${ $d x y $.
   alpha-forall-sort.0 $e #Fresh y ph0 $.
   alpha-forall-sort.1 $e #Substitution ph1 ph0 y x $.
   alpha-forall-sort $a |- ( \iff ( \forall-sort x ph0 ) ( \forall-sort y ph1 ) ) $. $}
${ $d x y $.
   fv-subst-left.0 $e |- ph0 $.
   fv-subst-left.1 $e #Substitution ph1 ph0 y x $.
   fv-subst-left.2 $e #Fresh y ph0 $.
   fv-subst-left $a |- ph1 $. $}
${ $d x y $.
   fv-subst-right.0 $e |- ph1 $.
   fv-subst-right.1 $e #Substitution ph1 ph0 y x $.
   fv-subst-right.2 $e #Fresh y ph0 $.
   fv-subst-right $a |- ph0 $. $}
lemma-ceil-compat-in-or $a |- ( \iff ( \ceil ( \or ph0 ph1 ) ) ( \or ( \ceil ph0 ) ( \ceil ph1 ) ) ) $.
lemma-x-and-ph-imp-not-ceil-x-and-not-ph $a |- ( \imp ( \and x ph0 ) ( \not ( \ceil ( \and x ( \not ph0 ) ) ) ) ) $.
lemma-curry-left $a |- ( \imp ( \imp ( \and ph0 ph1 ) ph2 ) ( \imp ph0 ( \imp ph1 ph2 ) ) ) $.
lemma-curry-right $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \and ph0 ph1 ) ph2 ) ) $.
${ rule-uncurry.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   rule-uncurry $a |- ( \imp ( \and ph0 ph1 ) ph2 ) $. $}
${ rule-curry.0 $e |- ( \imp ( \and ph0 ph1 ) ph2 ) $.
   rule-curry $a |- ( \imp ph0 ( \imp ph1 ph2 ) ) $. $}
${ prenex-exists-and-left.0 $e #Fresh x ph1 $.
   prenex-exists-and-left $a |- ( \imp ( \and ( \exists x ph0 ) ph1 ) ( \exists x ( \and ph0 ph1 ) ) ) $. $}
${ prenex-forall-and-left.0 $e #Fresh x ph1 $.
   prenex-forall-and-left $a |- ( \imp ( \and ( \forall x ph0 ) ph1 ) ( \forall x ( \and ph0 ph1 ) ) ) $. $}
lemma-disjoint-disj $a |- ( \imp ( \or ph0 ph1 ) ( \or ( \and ph0 ( \not ph1 ) ) ph1 ) ) $.
${ lemma-ph-imp-exists-x-and-ph.0 $e #Fresh x ph0 $.
   lemma-ph-imp-exists-x-and-ph $a |- ( \imp ph0 ( \exists x ( \and x ph0 ) ) ) $. $}
${ $d x ph0 $.
   lemma-app-context-imp-ceil.0 $e #ApplicationContext y ph1 $.
   lemma-app-context-imp-ceil.1 $e #Substitution ph2 ph1 ph0 y $.
   lemma-app-context-imp-ceil.2 $e #Substitution ph3 ph1 ( \exists x ( \and x ph0 ) ) y $.
   lemma-app-context-imp-ceil.3 $e #Substitution ph4 ph1 ( \and x ph0 ) y $.
   lemma-app-context-imp-ceil.4 $e |- ( \imp ph2 ph3 ) $.
   lemma-app-context-imp-ceil.5 $e |- ( \imp ph3 ( \exists x ph4 ) ) $.
   lemma-app-context-imp-ceil $a |- ( \imp ph2 ( \ceil ph0 ) ) $. $}
${ $d x ph0 $.
   lemma-ph-imp-ceil-ph $a |- ( \imp ph0 ( \ceil ph0 ) ) $. $}
${ $d x ph0 $.
   $d y sg0 $.
   $d y sg1 $.
   lemma-app-app-ph-imp-ceil-ph $a |- ( \imp ( \app sg0 ( \app sg1 ph0 ) ) ( \ceil ph0 ) ) $. $}
${ lemma-imp-compat-in-ceil.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-ceil $a |- ( \imp ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ lemma-imp-compat-in-floor.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-floor $a |- ( \imp ( \floor ph0 ) ( \floor ph1 ) ) $. $}
lemma-ceil2-imp-ceil $a |- ( \imp ( \ceil ( \ceil ph0 ) ) ( \ceil ph0 ) ) $.
lemma-floor-imp-floor2 $a |- ( \imp ( \floor ph0 ) ( \floor ( \floor ph0 ) ) ) $.
lemma-floor-elim-alt $a |- ( \imp ( \floor ph0 ) ph0 ) $.
${ lemma-floor-intro.0 $e |- ph0 $.
   lemma-floor-intro $a |- ( \floor ph0 ) $. $}
${ lemma-floor-elim.0 $e |- ( \floor ph0 ) $.
   lemma-floor-elim $a |- ph0 $. $}
lemma-floor-compat-in-and $a |- ( \iff ( \floor ( \and ph0 ph1 ) ) ( \and ( \floor ph0 ) ( \floor ph1 ) ) ) $.
lemma-floor-imp-floor $a |- ( \imp ( \floor ( \imp ph0 ph1 ) ) ( \imp ( \floor ph0 ) ( \floor ph1 ) ) ) $.
${ lemma-floor-imp-elim.0 $e |- ( \floor ( \imp ph0 ph1 ) ) $.
   lemma-floor-imp-elim $a |- ( \imp ( \floor ph0 ) ( \floor ph1 ) ) $. $}
${ lemma-in-sort.0 $e |- ( \in-sort ph1 ph0 ) $.
   lemma-in-sort $a |- ( \imp ph1 ( \inh ph0 ) ) $. $}
${ lemma-mp2.0 $e |- ph0 $.
   lemma-mp2.1 $e |- ph1 $.
   lemma-mp2.2 $e |- ( \imp ( \and ph0 ph1 ) ph2 ) $.
   lemma-mp2 $a |- ph2 $. $}
${ lemma-iff-intro-d.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-iff-intro-d.1 $e |- ( \imp ph0 ( \imp ph2 ph1 ) ) $.
   lemma-iff-intro-d $a |- ( \imp ph0 ( \iff ph1 ph2 ) ) $. $}
${ lemma-pmp2.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-pmp2.1 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-pmp2 $a |- ( \imp ph0 ph2 ) $. $}
${ lemma-imp-not-not.0 $e |- ( \imp ph1 ph0 ) $.
   lemma-imp-not-not $a |- ( \imp ( \not ph0 ) ( \not ph1 ) ) $. $}
${ lemma-double-not-ceil-alt.0 $e |- ( \imp ( \ceil ( \not ( \ceil ph0 ) ) ) ( \not ( \ceil ph0 ) ) ) $.
   lemma-double-not-ceil-alt $a |- ( \imp ( \ceil ph0 ) ( \not ( \ceil ( \not ( \ceil ph0 ) ) ) ) ) $. $}
${ lemma-not-ceil-elim.0 $e |- ( \not ph0 ) $.
   lemma-not-ceil-elim $a |- ( \not ( \ceil ph0 ) ) $. $}
lemma-and-ceil $a |- ( \eq ( \and ( \ceil x ) ph0 ) ph0 ) $.
lemma-or-and $a |- ( \eq ( \or ( \and ( \not ph1 ) ph0 ) ( \and ( \ceil ph1 ) ph0 ) ) ph0 ) $.
${ lemma-not-and-rewrite.0 $e |- ( \imp ph1 ( \not ph0 ) ) $.
   lemma-not-and-rewrite $a |- ( \not ( \and ph0 ph1 ) ) $. $}
${ lemma-eq-intro.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-eq-intro.1 $e |- ( \imp ph1 ph0 ) $.
   lemma-eq-intro $a |- ( \eq ph0 ph1 ) $. $}
${ lemma-eq-1.0 $e |- ( \imp ph1 ph0 ) $.
   lemma-eq-1 $a |- ( \eq ( \and ph0 ph1 ) ph1 ) $. $}
lemma-eq-imp $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ph0 ph1 ) ) $.
lemma-eq-reflexivity $a |- ( \eq ph0 ph0 ) $.
${ lemma-eq-symmetry.0 $e |- ( \eq ph1 ph0 ) $.
   lemma-eq-symmetry $a |- ( \eq ph0 ph1 ) $. $}
${ lemma-eq-transitivity.0 $e |- ( \eq ph0 ph1 ) $.
   lemma-eq-transitivity.1 $e |- ( \eq ph1 ph2 ) $.
   lemma-eq-transitivity $a |- ( \eq ph0 ph2 ) $. $}
${ lemma-eq-congruence-or.0 $e |- ( \eq ph0 ph2 ) $.
   lemma-eq-congruence-or.1 $e |- ( \eq ph1 ph3 ) $.
   lemma-eq-congruence-or $a |- ( \eq ( \or ph0 ph1 ) ( \or ph2 ph3 ) ) $. $}
${ lemma-eq-congruence-and.0 $e |- ( \eq ph0 ph2 ) $.
   lemma-eq-congruence-and.1 $e |- ( \eq ph1 ph3 ) $.
   lemma-eq-congruence-and $a |- ( \eq ( \and ph0 ph1 ) ( \and ph2 ph3 ) ) $. $}
${ lemma-eq-congruence-not.0 $e |- ( \eq ph0 ph1 ) $.
   lemma-eq-congruence-not $a |- ( \eq ( \not ph0 ) ( \not ph1 ) ) $. $}
${ lemma-eq-congruence-ceil.0 $e |- ( \eq ph0 ph1 ) $.
   lemma-eq-congruence-ceil $a |- ( \eq ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ lemma-prenex-forall-imp.0 $e #Fresh x ph1 $.
   lemma-prenex-forall-imp.1 $e |- ( \forall x ( \imp ph0 ph1 ) ) $.
   lemma-prenex-forall-imp $a |- ( \imp ( \exists x ph0 ) ph1 ) $. $}
lemma-i-giveup-on-naming-2 $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \imp ph3 ph1 ) ( \imp ph0 ( \imp ph3 ph2 ) ) ) ) $.
${ functional-substitution-var-same.0 $e #Fresh x ph0 $.
   functional-substitution-var-same.1 $e #Substitution ph2 ph1 ph0 x $.
   functional-substitution-var-same $a |- ( \imp ( \exists x ( \eq x ph0 ) ) ( \imp ( \forall x ph1 ) ph2 ) ) $. $}
${ fresh-in-eq.0 $e #Fresh xX ph0 $.
   fresh-in-eq.1 $e #Fresh xX ph1 $.
   fresh-in-eq $a #Fresh xX ( \eq ph0 ph1 ) $. $}
${ $d x y $.
   $d x ph0 $.
   functional-substitution-var-diff.0 $e #Fresh y ph0 $.
   functional-substitution-var-diff.1 $e #Substitution ph2 ph1 ph0 x $.
   functional-substitution-var-diff $a |- ( \imp ( \exists y ( \eq y ph0 ) ) ( \imp ( \forall x ph1 ) ph2 ) ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   functional-substitution.0 $e #Fresh y ph0 $.
   functional-substitution.1 $e #Substitution ph2 ph1 ph0 x $.
   functional-substitution.2 $e #Substitution ph3 ph1 z x $.
   functional-substitution $a |- ( \imp ( \exists y ( \eq y ph0 ) ) ( \imp ( \forall x ph1 ) ph2 ) ) $. $}
${ lemma-imp-compat-in-exists.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-exists $a |- ( \imp ( \exists x ph0 ) ( \exists x ph1 ) ) $. $}
${ lemma-imp-compat-in-forall.0 $e |- ( \imp ph0 ph1 ) $.
   lemma-imp-compat-in-forall $a |- ( \imp ( \forall x ph0 ) ( \forall x ph1 ) ) $. $}
exists-and-elim $a |- ( \imp ( \exists x ( \and ph0 ph1 ) ) ( \and ( \exists x ph0 ) ( \exists x ph1 ) ) ) $.
${ rule-exists-and-elim.0 $e |- ( \exists x ( \and ph0 ph1 ) ) $.
   rule-exists-and-elim-left $a |- ( \exists x ph0 ) $.
   rule-exists-and-elim-right $a |- ( \exists x ph1 ) $. $}
${ singleton-inclusion.0 $e #Fresh y ph0 $.
   singleton-inclusion.1 $e #Fresh y ph1 $.
   singleton-inclusion $a |- ( \imp ( \exists y ( \and ( \included y ph1 ) ( \eq y ph0 ) ) ) ( \included ph0 ph1 ) ) $. $}
${ lemma-floor-intro-imp3.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-floor-intro-imp3 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \floor ph2 ) ) ) $. $}
${ lemma-floor-intro-imp3-alt.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-floor-intro-imp3-alt $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ph2 ) ) $. $}
${ lemma-floor-intro-imp4.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ph3 ) ) ) $.
   lemma-floor-intro-imp4 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ( \floor ph3 ) ) ) ) $. $}
${ lemma-floor-intro-imp4-alt.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ph3 ) ) ) $.
   lemma-floor-intro-imp4-alt $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ph3 ) ) ) $. $}
${ lemma-floor-intro-imp5.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ( \imp ph3 ph4 ) ) ) ) $.
   lemma-floor-intro-imp5 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ( \imp ( \floor ph3 ) ( \floor ph4 ) ) ) ) ) $. $}
${ lemma-floor-intro-imp6.0 $e |- ( \imp ph0 ( \imp ph1 ( \imp ph2 ( \imp ph3 ( \imp ph4 ph5 ) ) ) ) ) $.
   lemma-floor-intro-imp6 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ph1 ) ( \imp ( \floor ph2 ) ( \imp ( \floor ph3 ) ( \imp ( \floor ph4 ) ( \floor ph5 ) ) ) ) ) ) $. $}
in-sort-and-left-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \and ph1 ph2 ) ph0 ) ) $.
in-sort-and-right-alt $a |- ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \and ph1 ph2 ) ph0 ) ) $.
in-sort-or-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \or ph1 ph2 ) ph0 ) ) ) $.
${ in-sort-and-left.0 $e |- ( \in-sort ph1 ph0 ) $.
   in-sort-and-left $a |- ( \in-sort ( \and ph1 ph2 ) ph0 ) $. $}
${ in-sort-and-right.0 $e |- ( \in-sort ph2 ph0 ) $.
   in-sort-and-right $a |- ( \in-sort ( \and ph1 ph2 ) ph0 ) $. $}
${ in-sort-or.0 $e |- ( \in-sort ph1 ph0 ) $.
   in-sort-or.1 $e |- ( \in-sort ph2 ph0 ) $.
   in-sort-or $a |- ( \in-sort ( \or ph1 ph2 ) ph0 ) $. $}
in-sort-inh $a |- ( \in-sort ( \inh ph0 ) ph0 ) $.
eq-imp-included $a |- ( \imp ( \eq ph0 ph1 ) ( \included ph0 ph1 ) ) $.
${ fresh-in-in-sort.0 $e #Fresh xX ph0 $.
   fresh-in-in-sort.1 $e #Fresh xX ph1 $.
   fresh-in-in-sort $a #Fresh xX ( \in-sort ph0 ph1 ) $. $}
${ lemma-prenex-forall-or.0 $e #Fresh x ph1 $.
   lemma-prenex-forall-or $a |- ( \imp ( \forall x ( \or ph0 ph1 ) ) ( \or ( \forall x ph0 ) ph1 ) ) $. $}
${ lemma-prenex-forall-imp-alt.0 $e #Fresh x ph1 $.
   lemma-prenex-forall-imp-alt $a |- ( \imp ( \forall x ( \imp ph0 ph1 ) ) ( \imp ( \exists x ph0 ) ph1 ) ) $. $}
${ lemma-and-top-elim-in-sort.0 $e |- ( \in-sort ph1 ph0 ) $.
   lemma-and-top-elim-in-sort $a |- ( \eq ( \and ph1 ( \inh ph0 ) ) ph1 ) $. $}
lemma-eq-transitivity-alt $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph1 ph2 ) ( \eq ph0 ph2 ) ) ) $.
${ rule-weakening.0 $e |- ph1 $.
   rule-weakening $a |- ( \imp ph0 ph1 ) $. $}
weakening-imp2 $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph2 ph0 ) ( \imp ph2 ph1 ) ) ) $.
weakening-imp3 $a |- ( \imp ( \imp ph0 ( \imp ph1 ph2 ) ) ( \imp ( \imp ph3 ph0 ) ( \imp ( \imp ph3 ph1 ) ( \imp ph3 ph2 ) ) ) ) $.
weakening-imp4 $a |- ( \imp ( \imp ph0 ( \imp ph1 ( \imp ph2 ph3 ) ) ) ( \imp ( \imp ph4 ph0 ) ( \imp ( \imp ph4 ph1 ) ( \imp ( \imp ph4 ph2 ) ( \imp ph4 ph3 ) ) ) ) ) $.
${ rule-weakening-imp2.0 $e |- ( \imp ph0 ph1 ) $.
   rule-weakening-imp2 $a |- ( \imp ( \imp ph2 ph0 ) ( \imp ph2 ph1 ) ) $. $}
eq-compat-in-or $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph2 ph3 ) ( \eq ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) ) ) $.
eq-compat-in-and $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph2 ph3 ) ( \eq ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) ) ) $.
eq-compat-in-not $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ( \not ph0 ) ( \not ph1 ) ) ) $.
eq-compat-in-imp $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph2 ph3 ) ( \eq ( \imp ph0 ph2 ) ( \imp ph1 ph3 ) ) ) ) $.
${ rule-eq-compat-in-or.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-or.1 $e |- ( \eq ph2 ph3 ) $.
   rule-eq-compat-in-or $a |- ( \eq ( \or ph0 ph2 ) ( \or ph1 ph3 ) ) $. $}
${ rule-eq-compat-in-and.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-and.1 $e |- ( \eq ph2 ph3 ) $.
   rule-eq-compat-in-and $a |- ( \eq ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) $. $}
${ rule-eq-compat-in-not.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-not $a |- ( \eq ( \not ph0 ) ( \not ph1 ) ) $. $}
${ rule-eq-compat-in-ceil.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-ceil $a |- ( \eq ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ rule-eq-compat-in-floor.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-compat-in-floor $a |- ( \eq ( \floor ph0 ) ( \floor ph1 ) ) $. $}
${ lemma-floor-intro-alt.0 $e |- ( \imp ( \floor ph0 ) ph1 ) $.
   lemma-floor-intro-alt $a |- ( \imp ( \floor ph0 ) ( \floor ph1 ) ) $. $}
eq-symmetry $a |- ( \imp ( \eq ph1 ph0 ) ( \eq ph0 ph1 ) ) $.
eq-transitivity $a |- ( \imp ( \eq ph0 ph1 ) ( \imp ( \eq ph1 ph2 ) ( \eq ph0 ph2 ) ) ) $.
eq-intro $a |- ( \imp ( \included ph0 ph1 ) ( \imp ( \included ph1 ph0 ) ( \eq ph0 ph1 ) ) ) $.
${ rule-eq-intro-hyp.0 $e |- ( \imp ph2 ( \included ph0 ph1 ) ) $.
   rule-eq-intro-hyp.1 $e |- ( \imp ph2 ( \included ph1 ph0 ) ) $.
   rule-eq-intro-hyp $a |- ( \imp ph2 ( \eq ph0 ph1 ) ) $. $}
${ rule-eq-transitivity-hyp.0 $e |- ( \imp ph3 ( \eq ph0 ph1 ) ) $.
   rule-eq-transitivity-hyp.1 $e |- ( \imp ph3 ( \eq ph1 ph2 ) ) $.
   rule-eq-transitivity-hyp $a |- ( \imp ph3 ( \eq ph0 ph2 ) ) $. $}
${ eq-elim-alt.0 $e #Substitution ph2 ph4 ph0 x $.
   eq-elim-alt.1 $e #Substitution ph3 ph4 ph1 x $.
   eq-elim-alt $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ph2 ph3 ) ) $. $}
${ eq-elim-alt-hyp.0 $e #Substitution ph2 ph4 ph0 x $.
   eq-elim-alt-hyp.1 $e #Substitution ph3 ph4 ph1 x $.
   eq-elim-alt-hyp.2 $e |- ( \imp ph5 ( \eq ph0 ph1 ) ) $.
   eq-elim-alt-hyp $a |- ( \imp ph5 ( \eq ph2 ph3 ) ) $. $}
included-transitivity $a |- ( \imp ( \included ph0 ph1 ) ( \imp ( \included ph1 ph2 ) ( \included ph0 ph2 ) ) ) $.
${ rule-included-transitivity-hyp.0 $e |- ( \imp ph3 ( \included ph0 ph1 ) ) $.
   rule-included-transitivity-hyp.1 $e |- ( \imp ph3 ( \included ph1 ph2 ) ) $.
   rule-included-transitivity-hyp $a |- ( \imp ph3 ( \included ph0 ph2 ) ) $. $}
unit-sort-singleton $a |- ( \exists x ( \eq x ( \inh \unit-sort ) ) ) $.
unit-sort-nonempty $a |- ( \exists x ( \in-sort x \unit-sort ) ) $.
ceil-propagation-exists-left $a |- ( \imp ( \ceil ( \exists x ph0 ) ) ( \exists x ( \ceil ph0 ) ) ) $.
ceil-propagation-exists-right $a |- ( \imp ( \exists x ( \ceil ph0 ) ) ( \ceil ( \exists x ph0 ) ) ) $.
ceil-propagation-exists $a |- ( \iff ( \ceil ( \exists x ph0 ) ) ( \exists x ( \ceil ph0 ) ) ) $.
floor-propagation-forall-right $a |- ( \imp ( \floor ( \forall x ph0 ) ) ( \forall x ( \floor ph0 ) ) ) $.
floor-propagation-forall-left $a |- ( \imp ( \forall x ( \floor ph0 ) ) ( \floor ( \forall x ph0 ) ) ) $.
${ rule-eq-to-iff.0 $e |- ( \eq ph0 ph1 ) $.
   rule-eq-to-iff $a |- ( \iff ph0 ph1 ) $. $}
${ rule-iff-to-eq.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-to-eq $a |- ( \eq ph0 ph1 ) $. $}
${ rule-iff-compat-in-ceil.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-ceil $a |- ( \iff ( \ceil ph0 ) ( \ceil ph1 ) ) $. $}
${ rule-iff-compat-in-floor.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-floor $a |- ( \iff ( \floor ph0 ) ( \floor ph1 ) ) $. $}
${ rule-iff-compat-in-app.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-app.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-app $a |- ( \iff ( \app ph0 ph2 ) ( \app ph1 ph3 ) ) $. $}
${ rule-iff-compat-in-imp.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-imp.1 $e |- ( \iff ph2 ph3 ) $.
   rule-iff-compat-in-imp $a |- ( \iff ( \imp ph0 ph2 ) ( \imp ph1 ph3 ) ) $. $}
${ rule-iff-compat-in-iff.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-iff.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-iff $a |- ( \iff ( \iff ph0 ph1 ) ( \iff ph2 ph3 ) ) $. $}
${ rule-iff-compat-in-eq.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-eq.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-eq $a |- ( \iff ( \eq ph0 ph1 ) ( \eq ph2 ph3 ) ) $. $}
${ rule-iff-compat-in-exists.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-exists $a |- ( \iff ( \exists x ph0 ) ( \exists x ph1 ) ) $. $}
${ rule-iff-compat-in-forall.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-forall $a |- ( \iff ( \forall x ph0 ) ( \forall x ph1 ) ) $. $}
${ rule-iff-compat-in-sorted-exists.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-sorted-exists.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-sorted-exists $a |- ( \iff ( \sorted-exists x ph0 ph1 ) ( \sorted-exists x ph2 ph3 ) ) $. $}
sorted-forall-to-sorted-exists $a |- ( \iff ( \sorted-forall x ph0 ph1 ) ( \not ( \sorted-exists x ph0 ( \not ph1 ) ) ) ) $.
${ rule-iff-compat-in-sorted-forall.0 $e |- ( \iff ph0 ph2 ) $.
   rule-iff-compat-in-sorted-forall.1 $e |- ( \iff ph1 ph3 ) $.
   rule-iff-compat-in-sorted-forall $a |- ( \iff ( \sorted-forall x ph0 ph1 ) ( \sorted-forall x ph2 ph3 ) ) $. $}
${ prenex-exists-and-right.0 $e #Fresh x ph1 $.
   prenex-exists-and-right $a |- ( \imp ( \exists x ( \and ph0 ph1 ) ) ( \and ( \exists x ph0 ) ph1 ) ) $. $}
${ prenex-exists-and.0 $e #Fresh x ph1 $.
   prenex-exists-and $a |- ( \iff ( \and ( \exists x ph0 ) ph1 ) ( \exists x ( \and ph0 ph1 ) ) ) $. $}
${ prenex-sorted-exists-and.0 $e #Fresh x ph2 $.
   prenex-sorted-exists-and $a |- ( \iff ( \and ( \sorted-exists x ph0 ph1 ) ph2 ) ( \sorted-exists x ph0 ( \and ph1 ph2 ) ) ) $. $}
${ lemma-prenex-forall-imp-right.0 $e #Fresh x ph0 $.
   lemma-prenex-forall-imp-right $a |- ( \iff ( \forall x ( \imp ph0 ph1 ) ) ( \imp ph0 ( \forall x ph1 ) ) ) $. $}
${ forall-not-to-not-exists.0 $e |- ( \forall x ( \not ph0 ) ) $.
   forall-not-to-not-exists $a |- ( \not ( \exists x ph0 ) ) $. $}
${ imp-compat-in-sorted-exists.0 $e |- ( \imp ph0 ph1 ) $.
   imp-compat-in-sorted-exists $a |- ( \imp ( \sorted-exists x ph2 ph0 ) ( \sorted-exists x ph2 ph1 ) ) $. $}
eq-compat-in-ceil $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ( \ceil ph0 ) ( \ceil ph1 ) ) ) $.
x-in-ceil-imp-ceil $a |- ( \imp ( \in x ( \ceil ph0 ) ) ( \ceil ph0 ) ) $.
${ weakened-mp.0 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   weakened-mp.1 $e |- ( \imp ph0 ph1 ) $.
   weakened-mp $a |- ( \imp ph0 ph2 ) $. $}
${ $d x ph1 $.
   forall-propagate-in-floor-imp $a |- ( \imp ( \forall x ( \floor ( \imp ph0 ph1 ) ) ) ( \floor ( \imp ( \exists x ph0 ) ph1 ) ) ) $. $}
${ lemma-imp-compat-in-exists-alt.0 $e #Fresh x ph0 $.
   lemma-imp-compat-in-exists-alt.1 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   lemma-imp-compat-in-exists-alt $a |- ( \imp ph0 ( \imp ( \exists x ph1 ) ( \exists x ph2 ) ) ) $. $}
${ imp-compat-in-eq-and.0 $e |- ( \imp ph0 ph1 ) $.
   imp-compat-in-eq-and $a |- ( \imp ( \eq ( \and ph0 ph2 ) ph2 ) ( \eq ( \and ph1 ph2 ) ph2 ) ) $. $}
${ lemma-prenex-exists-imp-right.0 $e #Fresh x ph0 $.
   lemma-prenex-exists-imp-right $a |- ( \imp ( \exists x ( \imp ph0 ph1 ) ) ( \imp ph0 ( \exists x ph1 ) ) ) $. $}
${ prenex-forall-iff-left.0 $e #Fresh x ph1 $.
   prenex-forall-iff-left $a |- ( \imp ( \forall x ( \iff ph0 ph1 ) ) ( \iff ( \forall x ph0 ) ph1 ) ) $. $}
restricted-inclusion $a |- ( \imp ( \included ph0 ph1 ) ( \eq ( \and ph1 ph0 ) ph0 ) ) $.
iff-transitivity $a |- ( \imp ( \iff ph0 ph1 ) ( \imp ( \iff ph1 ph2 ) ( \iff ph0 ph2 ) ) ) $.
${ prenex-forall-or-left.0 $e #Fresh x ph0 $.
   prenex-forall-or-left $a |- ( \imp ( \forall x ( \or ph0 ph1 ) ) ( \or ph0 ( \forall x ph1 ) ) ) $. $}
${ prenex-forall-or-right.0 $e #Fresh x ph0 $.
   prenex-forall-or-right $a |- ( \imp ( \or ph0 ( \forall x ph1 ) ) ( \forall x ( \or ph0 ph1 ) ) ) $. $}
${ rule-imp-compat-in-and-alt.0 $e |- ( \imp ph4 ( \imp ph0 ph1 ) ) $.
   rule-imp-compat-in-and-alt.1 $e |- ( \imp ph4 ( \imp ph2 ph3 ) ) $.
   rule-imp-compat-in-and-alt $a |- ( \imp ph4 ( \imp ( \and ph0 ph2 ) ( \and ph1 ph3 ) ) ) $. $}
$c \kore-bottom $.
$c \kore-top $.
$c \kore-not $.
$c \kore-and $.
$c \kore-or $.
$c \kore-implies $.
$c \kore-iff $.
$c \kore-exists $.
$c \kore-forall $.
$c \kore-forall-sort $.
$c \kore-mu $.
$c \kore-nu $.
$c \kore-ceil $.
$c \kore-floor $.
$c \kore-equals $.
$c \kore-in $.
$c \kore-next $.
$c \kore-all-path-next $.
$c \kore-eventually $.
$c \kore-weak-eventually $.
$c \kore-always $.
$c \kore-well-founded $.
$c \kore-well-founded-alt $.
$c \kore-rewrites $.
$c \kore-rewrites-star $.
$c \kore-rewrites-plus $.
$c \kore-one-path-reaches-plus $.
$c \kore-one-path-reaches-star $.
$c \kore-circularity $.
$c \kore-non-terminating $.
$c \kore-all-path-next-nt $.
$c \kore-all-path-eventually $.
$c \kore-all-path-rewrites $.
$c \kore-all-path-rewrites-star $.
$c \kore-all-path-rewrites-plus $.
$c \kore-dv $.
$c \kore-valid $.
$c \kore-is-sort $.
$c \kore-inj $.
$c \kore-is-predicate $.
$c \kore-is-nonempty-sort $.
kore-exists-is-pattern $a #Pattern ( \kore-exists ph0 ph1 x ph2 ) $.
kore-exists-is-sugar $a #Notation ( \kore-exists ph0 ph1 x ph2 ) ( \and ( \sorted-exists x ph0 ph2 ) ( \inh ph1 ) ) $.
kore-forall-sort-is-pattern $a #Pattern ( \kore-forall-sort s0 ph0 ) $.
kore-forall-sort-is-sugar $a #Notation ( \kore-forall-sort s0 ph0 ) ( \forall-sort s0 ph0 ) $.
kore-valid-is-pattern $a #Pattern ( \kore-valid ph0 ph1 ) $.
kore-valid-is-sugar $a #Notation ( \kore-valid ph0 ph1 ) ( \eq ph1 ( \kore-top ph0 ) ) $.
kore-bottom-is-pattern $a #Pattern ( \kore-bottom ph0 ) $.
kore-bottom-is-sugar $a #Notation ( \kore-bottom ph0 ) \bot $.
kore-top-is-pattern $a #Pattern ( \kore-top ph0 ) $.
kore-top-is-sugar $a #Notation ( \kore-top ph0 ) ( \inh ph0 ) $.
kore-not-is-pattern $a #Pattern ( \kore-not ph0 ph1 ) $.
kore-not-is-sugar $a #Notation ( \kore-not ph0 ph1 ) ( \and ( \not ph1 ) ( \kore-top ph0 ) ) $.
kore-and-is-pattern $a #Pattern ( \kore-and ph0 ph1 ph2 ) $.
kore-and-is-sugar $a #Notation ( \kore-and ph0 ph1 ph2 ) ( \and ph1 ph2 ) $.
kore-or-is-pattern $a #Pattern ( \kore-or ph0 ph1 ph2 ) $.
kore-or-is-sugar $a #Notation ( \kore-or ph0 ph1 ph2 ) ( \or ph1 ph2 ) $.
kore-implies-is-pattern $a #Pattern ( \kore-implies ph0 ph1 ph2 ) $.
kore-implies-is-sugar $a #Notation ( \kore-implies ph0 ph1 ph2 ) ( \kore-or ph0 ( \kore-not ph0 ph1 ) ph2 ) $.
kore-iff-is-pattern $a #Pattern ( \kore-iff ph0 ph1 ph2 ) $.
kore-iff-is-sugar $a #Notation ( \kore-iff ph0 ph1 ph2 ) ( \kore-and ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ph2 ph1 ) ) $.
kore-ceil-is-pattern $a #Pattern ( \kore-ceil ph0 ph1 ph2 ) $.
kore-ceil-is-sugar $a #Notation ( \kore-ceil ph0 ph1 ph2 ) ( \and ( \ceil ph2 ) ( \kore-top ph1 ) ) $.
kore-floor-is-pattern $a #Pattern ( \kore-floor ph0 ph1 ph2 ) $.
kore-floor-is-sugar $a #Notation ( \kore-floor ph0 ph1 ph2 ) ( \kore-not ph1 ( \kore-ceil ph0 ph1 ( \kore-not ph0 ph2 ) ) ) $.
kore-equals-is-pattern $a #Pattern ( \kore-equals ph0 ph1 ph2 ph3 ) $.
kore-equals-is-sugar $a #Notation ( \kore-equals ph0 ph1 ph2 ph3 ) ( \kore-floor ph0 ph1 ( \kore-iff ph0 ph2 ph3 ) ) $.
kore-in-is-pattern $a #Pattern ( \kore-in ph0 ph1 ph2 ph3 ) $.
kore-in-is-sugar $a #Notation ( \kore-in ph0 ph1 ph2 ph3 ) ( \kore-floor ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) $.
$c \kore-next-symbol $.
kore-next-is-symbol $a #Symbol \kore-next-symbol $.
kore-next-is-pattern $a #Pattern ( \kore-next ph0 ph1 ) $.
kore-next-is-sugar $a #Notation ( \kore-next ph0 ph1 ) ( \app \kore-next-symbol ph1 ) $.
kore-next-sorting $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \kore-next ph0 ph1 ) ph0 ) ) $.
${ kore-mu-is-pattern.0 $e #Positive X ph1 $.
   kore-mu-is-pattern $a #Pattern ( \kore-mu ph0 X ph1 ) $. $}
kore-mu-is-sugar $a #Notation ( \kore-mu ph0 X ph1 ) ( \and ( \mu X ph1 ) ( \inh ph0 ) ) $.
${ kore-nu-is-pattern.0 $e #Positive X ph1 $.
   kore-nu-is-pattern $a #Pattern ( \kore-nu ph0 X ph1 ) $. $}
${ kore-nu-is-sugar.0 $e #Substitution ph2 ph1 ( \kore-not ph0 X ) X $.
   kore-nu-is-sugar $a #Notation ( \kore-nu ph0 X ph1 ) ( \kore-not ph0 ( \kore-mu ph0 X ( \kore-not ph0 ph2 ) ) ) $. $}
kore-all-path-next-is-pattern $a #Pattern ( \kore-all-path-next ph0 ph1 ) $.
kore-all-path-next-is-sugar $a #Notation ( \kore-all-path-next ph0 ph1 ) ( \kore-not ph0 ( \kore-next ph0 ( \kore-not ph0 ph1 ) ) ) $.
kore-eventually-is-pattern $a #Pattern ( \kore-eventually ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-is-sugar $a #Notation ( \kore-eventually ph0 ph1 ) ( \kore-mu ph0 X ( \kore-or ph0 ph1 ( \kore-next ph0 X ) ) ) $. $}
kore-weak-eventually-is-pattern $a #Pattern ( \kore-weak-eventually ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-weak-eventually-is-sugar $a #Notation ( \kore-weak-eventually ph0 ph1 ) ( \kore-not ph0 ( \kore-mu ph0 X ( \kore-not ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-not ph0 X ) ) ) ) ) ) $. $}
kore-always-is-pattern $a #Pattern ( \kore-always ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-always-is-sugar $a #Notation ( \kore-always ph0 ph1 ) ( \kore-not ph0 ( \kore-mu ph0 X ( \kore-not ph0 ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ( \kore-not ph0 X ) ) ) ) ) ) $. $}
kore-well-founded-is-pattern $a #Pattern ( \kore-well-founded ph0 ) $.
${ $d X ph0 $.
   kore-well-founded-is-sugar $a #Notation ( \kore-well-founded ph0 ) ( \kore-mu ph0 X ( \kore-all-path-next ph0 X ) ) $. $}
kore-well-founded-alt-is-pattern $a #Pattern ( \kore-well-founded-alt ph0 ) $.
${ $d X ph0 $.
   kore-well-founded-alt-is-sugar $a #Notation ( \kore-well-founded-alt ph0 ) ( \kore-mu ph0 X ( \kore-all-path-next ph0 ( \kore-always ph0 X ) ) ) $. $}
kore-rewrites-is-pattern $a #Pattern ( \kore-rewrites ph0 ph1 ph2 ) $.
kore-rewrites-is-sugar $a #Notation ( \kore-rewrites ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-next ph0 ph2 ) ) $.
kore-rewrites-star-is-pattern $a #Pattern ( \kore-rewrites-star ph0 ph1 ph2 ) $.
kore-rewrites-star-is-sugar $a #Notation ( \kore-rewrites-star ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-eventually ph0 ph2 ) ) $.
kore-rewrites-plus-is-pattern $a #Pattern ( \kore-rewrites-plus ph0 ph1 ph2 ) $.
kore-rewrites-plus-is-sugar $a #Notation ( \kore-rewrites-plus ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-next ph0 ( \kore-eventually ph0 ph2 ) ) ) $.
kore-one-path-reaches-star-is-pattern $a #Pattern ( \kore-one-path-reaches-star ph0 ph1 ph2 ) $.
kore-one-path-reaches-star-is-sugar $a #Notation ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) $.
kore-one-path-reaches-plus-is-pattern $a #Pattern ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) $.
kore-one-path-reaches-plus-is-sugar $a #Notation ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph2 ) ) ) $.
kore-circularity-is-pattern $a #Pattern ( \kore-circularity ph0 ph1 ) $.
kore-circularity-is-sugar $a #Notation ( \kore-circularity ph0 ph1 ) ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) $.
kore-non-terminating-is-pattern $a #Pattern ( \kore-non-terminating ph0 ) $.
kore-non-terminating-is-sugar $a #Notation ( \kore-non-terminating ph0 ) ( \kore-next ph0 ( \kore-top ph0 ) ) $.
kore-all-path-next-nt-is-pattern $a #Pattern ( \kore-all-path-next-nt ph0 ph1 ) $.
kore-all-path-next-nt-is-sugar $a #Notation ( \kore-all-path-next-nt ph0 ph1 ) ( \kore-and ph0 ( \kore-all-path-next ph0 ph1 ) ( \kore-non-terminating ph0 ) ) $.
kore-all-path-eventually-is-pattern $a #Pattern ( \kore-all-path-eventually ph0 ph1 ) $.
${ $d X ph0 $.
   $d X ph1 $.
   kore-all-path-eventually-is-sugar $a #Notation ( \kore-all-path-eventually ph0 ph1 ) ( \kore-mu ph0 X ( \kore-or ph0 ph1 ( \kore-all-path-next-nt ph0 X ) ) ) $. $}
kore-all-path-rewrites-is-pattern $a #Pattern ( \kore-all-path-rewrites ph0 ph1 ph2 ) $.
kore-all-path-rewrites-is-sugar $a #Notation ( \kore-all-path-rewrites ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-all-path-next-nt ph0 ph2 ) ) $.
kore-all-path-rewrites-star-is-pattern $a #Pattern ( \kore-all-path-rewrites-star ph0 ph1 ph2 ) $.
kore-all-path-rewrites-star-is-sugar $a #Notation ( \kore-all-path-rewrites-star ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-all-path-eventually ph0 ph2 ) ) $.
kore-all-path-rewrites-plus-is-pattern $a #Pattern ( \kore-all-path-rewrites-plus ph0 ph1 ph2 ) $.
kore-all-path-rewrites-plus-is-sugar $a #Notation ( \kore-all-path-rewrites-plus ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ( \kore-all-path-next-nt ph0 ( \kore-all-path-eventually ph0 ph2 ) ) ) $.
$c \kore-dv-symbol $.
kore-dv-is-symbol $a #Symbol \kore-dv-symbol $.
kore-dv-is-pattern $a #Pattern ( \kore-dv ph0 ph1 ) $.
kore-dv-is-sugar $a #Notation ( \kore-dv ph0 ph1 ) ( \app ( \app \kore-dv-symbol ph0 ) ph1 ) $.
kore-dv-sorting $a |- ( \in-sort ( \kore-dv ph0 ph1 ) ph0 ) $.
kore-is-sort-is-pattern $a #Pattern ( \kore-is-sort ph0 ) $.
${ $d s0 ph0 $.
   kore-is-sort-is-sugar $a #Notation ( \kore-is-sort ph0 ) ( \exists-sort s0 ( \eq s0 ph0 ) ) $. $}
kore-forall-is-pattern $a #Pattern ( \kore-forall ph0 ph1 x ph2 ) $.
kore-forall-is-sugar $a #Notation ( \kore-forall ph0 ph1 x ph2 ) ( \kore-not ph1 ( \kore-exists ph0 ph1 x ( \kore-not ph1 ph2 ) ) ) $.
$c \kore-inj-symbol $.
kore-inj-is-symbol $a #Symbol \kore-inj-symbol $.
kore-inj-is-pattern $a #Pattern ( \kore-inj ph0 ph1 ph2 ) $.
kore-inj-is-sugar $a #Notation ( \kore-inj ph0 ph1 ph2 ) ( \app ( \app ( \app \kore-inj-symbol ph0 ) ph1 ) ph2 ) $.
kore-inj-id $a |- ( \eq ( \kore-inj ph0 ph1 ph2 ) ph2 ) $.
kore-is-predicate-is-pattern $a #Pattern ( \kore-is-predicate ph0 ph1 ) $.
kore-is-predicate-is-sugar $a #Notation ( \kore-is-predicate ph0 ph1 ) ( \or ( \kore-valid ph0 ph1 ) ( \is-bot ph1 ) ) $.
kore-is-nonempty-sort-is-pattern $a #Pattern ( \kore-is-nonempty-sort ph0 ) $.
kore-is-nonempty-sort-is-sugar $a #Notation ( \kore-is-nonempty-sort ph0 ) ( \ceil ( \inh ph0 ) ) $.
${ $d xX y $.
   $d xX ph1 $.
   $d y ph6 $.
   substitution-kore-exists.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-exists.1 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-exists $a #Substitution ( \kore-exists ph0 ph1 y ph2 ) ( \kore-exists ph3 ph1 y ph5 ) ph6 xX $. $}
${ $d xX y $.
   $d y ph6 $.
   substitution-kore-exists-alt.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-exists-alt.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-exists-alt.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-exists-alt $a #Substitution ( \kore-exists ph0 ph1 y ph2 ) ( \kore-exists ph3 ph4 y ph5 ) ph6 xX $. $}
${ $d x ph1 $.
   substitution-kore-exists-shadowed $a #Substitution ( \kore-exists ph0 ph1 x ph2 ) ( \kore-exists ph0 ph1 x ph2 ) ph3 x $. $}
${ $d xX x $.
   $d x ph2 $.
   substitution-kore-forall-sort.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-forall-sort $a #Substitution ( \kore-forall-sort x ph0 ) ( \kore-forall-sort x ph1 ) ph2 xX $. $}
substitution-kore-forall-sort-shadowed $a #Substitution ( \kore-forall-sort x ph0 ) ( \kore-forall-sort x ph0 ) ph1 x $.
${ substitution-kore-valid.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-valid.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-valid $a #Substitution ( \kore-valid ph0 ph1 ) ( \kore-valid ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-bottom.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-bottom $a #Substitution ( \kore-bottom ph0 ) ( \kore-bottom ph1 ) ph2 xX $. $}
${ substitution-kore-top.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-top $a #Substitution ( \kore-top ph0 ) ( \kore-top ph1 ) ph2 xX $. $}
${ substitution-kore-not.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-not.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-not $a #Substitution ( \kore-not ph0 ph1 ) ( \kore-not ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-and.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-and.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-and.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-and $a #Substitution ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-or.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-or.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-or.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-or $a #Substitution ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-implies.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-implies.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-implies.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-implies $a #Substitution ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-ceil.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-ceil.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-ceil.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-ceil $a #Substitution ( \kore-ceil ph0 ph1 ph2 ) ( \kore-ceil ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-floor.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-floor.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-floor.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-floor $a #Substitution ( \kore-floor ph0 ph1 ph2 ) ( \kore-floor ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-equals.0 $e #Substitution ph0 ph4 ph8 xX $.
   substitution-kore-equals.1 $e #Substitution ph1 ph5 ph8 xX $.
   substitution-kore-equals.2 $e #Substitution ph2 ph6 ph8 xX $.
   substitution-kore-equals.3 $e #Substitution ph3 ph7 ph8 xX $.
   substitution-kore-equals $a #Substitution ( \kore-equals ph0 ph1 ph2 ph3 ) ( \kore-equals ph4 ph5 ph6 ph7 ) ph8 xX $. $}
${ substitution-kore-in.0 $e #Substitution ph0 ph4 ph8 xX $.
   substitution-kore-in.1 $e #Substitution ph1 ph5 ph8 xX $.
   substitution-kore-in.2 $e #Substitution ph2 ph6 ph8 xX $.
   substitution-kore-in.3 $e #Substitution ph3 ph7 ph8 xX $.
   substitution-kore-in $a #Substitution ( \kore-in ph0 ph1 ph2 ph3 ) ( \kore-in ph4 ph5 ph6 ph7 ) ph8 xX $. $}
${ substitution-kore-next.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-next.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-next $a #Substitution ( \kore-next ph0 ph1 ) ( \kore-next ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-rewrites.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-rewrites.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-rewrites.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-rewrites $a #Substitution ( \kore-rewrites ph0 ph1 ph2 ) ( \kore-rewrites ph3 ph4 ph5 ) ph6 xX $. $}
${ $d X xX $.
   $d X ph4 $.
   substitution-kore-mu.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-mu.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-mu.2 $e #Positive X ph1 $.
   substitution-kore-mu.3 $e #Positive X ph3 $.
   substitution-kore-mu $a #Substitution ( \kore-mu ph0 X ph1 ) ( \kore-mu ph2 X ph3 ) ph4 xX $. $}
${ $d Y xX $.
   $d Y ph0 $.
   $d Y ph1 $.
   $d Y ph2 $.
   $d Y ph3 $.
   $d Y ph4 $.
   substitution-kore-eventually.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-eventually.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-eventually $a #Substitution ( \kore-eventually ph0 ph1 ) ( \kore-eventually ph2 ph3 ) ph4 xX $. $}
${ $d Y xX $.
   $d Y ph0 $.
   $d Y ph1 $.
   $d Y ph2 $.
   $d Y ph3 $.
   $d Y ph4 $.
   substitution-kore-weak-eventually.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-weak-eventually.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-weak-eventually $a #Substitution ( \kore-weak-eventually ph0 ph1 ) ( \kore-weak-eventually ph2 ph3 ) ph4 xX $. $}
${ $d Y xX $.
   $d Y ph0 $.
   $d Y ph1 $.
   $d Y ph2 $.
   $d Y ph3 $.
   $d Y ph4 $.
   substitution-kore-always.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-always.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-always $a #Substitution ( \kore-always ph0 ph1 ) ( \kore-always ph2 ph3 ) ph4 xX $. $}
${ substitution-kore-rewrites-star.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-rewrites-star.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-rewrites-star.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-rewrites-star $a #Substitution ( \kore-rewrites-star ph0 ph1 ph2 ) ( \kore-rewrites-star ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-rewrites-plus.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-rewrites-plus.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-rewrites-plus.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-rewrites-plus $a #Substitution ( \kore-rewrites-plus ph0 ph1 ph2 ) ( \kore-rewrites-plus ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-one-path-reaches-star.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-one-path-reaches-star.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-one-path-reaches-star.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-one-path-reaches-star $a #Substitution ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ( \kore-one-path-reaches-star ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-one-path-reaches-plus.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-one-path-reaches-plus.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-one-path-reaches-plus.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-one-path-reaches-plus $a #Substitution ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ( \kore-one-path-reaches-plus ph3 ph4 ph5 ) ph6 xX $. $}
${ substitution-kore-dv.0 $e #Substitution ph0 ph2 ph4 xX $.
   substitution-kore-dv.1 $e #Substitution ph1 ph3 ph4 xX $.
   substitution-kore-dv $a #Substitution ( \kore-dv ph0 ph1 ) ( \kore-dv ph2 ph3 ) ph4 xX $. $}
${ $d xX y $.
   $d xX ph1 $.
   $d y ph6 $.
   substitution-kore-forall.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-forall.1 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-forall $a #Substitution ( \kore-forall ph0 ph1 y ph2 ) ( \kore-forall ph3 ph1 y ph5 ) ph6 xX $. $}
${ $d x ph1 $.
   substitution-kore-forall-shadowed $a #Substitution ( \kore-forall ph0 ph1 x ph2 ) ( \kore-forall ph0 ph1 x ph2 ) ph3 x $. $}
${ substitution-kore-inj.0 $e #Substitution ph0 ph3 ph6 xX $.
   substitution-kore-inj.1 $e #Substitution ph1 ph4 ph6 xX $.
   substitution-kore-inj.2 $e #Substitution ph2 ph5 ph6 xX $.
   substitution-kore-inj $a #Substitution ( \kore-inj ph0 ph1 ph2 ) ( \kore-inj ph3 ph4 ph5 ) ph6 xX $. $}
${ $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   $d x xX $.
   substitution-kore-is-sort.0 $e #Substitution ph0 ph1 ph2 xX $.
   substitution-kore-is-sort $a #Substitution ( \kore-is-sort ph0 ) ( \kore-is-sort ph1 ) ph2 xX $. $}
${ notation-kore-valid.0 $e #Notation ph0 ph2 $.
   notation-kore-valid.1 $e #Notation ph1 ph3 $.
   notation-kore-valid $p #Notation ( \kore-valid ph0 ph1 ) ( \kore-valid ph2 ph3 ) $= ( kore-top-is-pattern eq-is-pattern inh-is-pattern kore-valid-is-pattern notation-symmetry notation-transitivity kore-valid-is-sugar kore-top-is-sugar notation-inh notation-eq ) ABJBAGHCDJABMCDJBAGHCDJDCGHBAGHCDMBAGHDCGHBAGDCGFAGAICGANCGAICGCIAICNAICIACEOKLKLPKLKL $. $}
${ notation-kore-next.0 $e #Notation ph0 ph2 $.
   notation-kore-next.1 $e #Notation ph1 ph3 $.
   notation-kore-next $p #Notation ( \kore-next ph0 ph1 ) ( \kore-next ph2 ph3 ) $= ( kore-next-is-symbol symbol-is-pattern app-is-pattern kore-next-is-pattern kore-next-is-sugar notation-symmetry notation-transitivity notation-reflexivity notation-app ) ABJGHBICDJABKCDJGHBICDJGHDIGHBICDKGHBIGHDIGHBGHDGHNFOLMLM $. $}
${ notation-kore-or.0 $e #Notation ph0 ph3 $.
   notation-kore-or.1 $e #Notation ph1 ph4 $.
   notation-kore-or.2 $e #Notation ph2 ph5 $.
   notation-kore-or $p #Notation ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph3 ph4 ph5 ) $= ( or-is-pattern kore-or-is-pattern kore-or-is-sugar notation-symmetry notation-transitivity notation-or ) ABCKBCJDEFKABCLDEFKBCJDEFKEFJBCJDEFLBCJEFJBCEFHIOMNMN $. $}
${ notation-kore-implies.0 $e #Notation ph0 ph3 $.
   notation-kore-implies.1 $e #Notation ph1 ph4 $.
   notation-kore-implies.2 $e #Notation ph2 ph5 $.
   notation-kore-implies $p #Notation ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph3 ph4 ph5 ) $= ( kore-not-is-pattern kore-top-is-pattern not-is-pattern kore-or-is-pattern and-is-pattern inh-is-pattern notation-symmetry notation-transitivity kore-implies-is-pattern kore-implies-is-sugar kore-not-is-sugar kore-top-is-sugar notation-not notation-inh notation-and notation-kore-or ) ABCRAABJCMDEFRABCSDEFRAABJCMDEFRDDEJFMAABJCMDEFSAABJCMDDEJFMAABJCDDEJFGABJBLAKNDEJABTDEJBLAKNDEJELDKNBLAKNDETBLAKNELDKNBLAKELDKBEHUBAKAODKAUADKAODKDOAODUAAODOADGUCPQPQUDPQPQIUEPQPQ $. $}
${ notation-kore-not.0 $e #Notation ph0 ph2 $.
   notation-kore-not.1 $e #Notation ph1 ph3 $.
   notation-kore-not $p #Notation ( \kore-not ph0 ph1 ) ( \kore-not ph2 ph3 ) $= ( kore-top-is-pattern not-is-pattern kore-not-is-pattern and-is-pattern inh-is-pattern notation-transitivity kore-not-is-sugar kore-top-is-sugar notation-symmetry notation-not notation-inh notation-and ) ABIBHAGJCDIABMBHAGJDHCGJCDIBHAGDHCGBDFPAGAKCGANAKCKCGACEQCGCKCNOLLRCDIDHCGJCDMOLL $. $}
${ positive-in-kore-not.0 $e #Positive xX ph0 $.
   positive-in-kore-not.1 $e #Negative xX ph1 $.
   positive-in-kore-not $p #Positive xX ( \kore-not ph0 ph1 ) $= ( not-is-pattern kore-top-is-pattern bot-is-pattern imp-is-pattern or-is-pattern notation-reflexivity notation-transitivity notation-positive and-is-pattern inh-is-pattern inhabitant-is-symbol symbol-is-pattern not-is-sugar positive-disjoint app-is-pattern positive-in-imp negative-in-imp notation-negative kore-not-is-pattern negative-disjoint positive-in-app inh-is-sugar kore-top-is-sugar or-is-sugar and-is-sugar kore-not-is-sugar ) BFAGNABUDCBFFAGFJFBFAGNCBFFAGFJHIBFFAGFJFCBFFAGFJHCBFFFAGFIBFFAGFJCBFFFAGFCBFFHIBFFFCBFFHCBFHIBFFCBFHCBHIBFCBHCEHCSUABFBHIBHIBRBHIKLMHCUEUBBFFBFHIBFHIBFRBFHIKLUCHCSUABFFFBFFHIBFFHIBFFRBFFHIKLMAGHIAGFCAGHCAOAGCPQATAOCPQACPQCSDUFAOPQATPQATAUGPQATKLMAGAOAOAUHAOKLMHCUEUBAGFAGHIAGHIAGRAGHIKLUCUBBFFAGFJBFFFAGFIBFFFAGFIBFFAGFUIBFFFAGFIKLUCHCSUABFFAGFJFBFFAGFJHIBFFAGFJHIBFFAGFJRBFFAGFJHIKLMBFAGNBFFAGFJFBFFAGFJFBFAGUJBFFAGFJFKLMABUDBFAGNBFAGNABUKBFAGNKLM $. $}
${ negative-in-kore-not.0 $e #Negative xX ph0 $.
   negative-in-kore-not.1 $e #Positive xX ph1 $.
   negative-in-kore-not $p #Negative xX ( \kore-not ph0 ph1 ) $= ( not-is-pattern kore-top-is-pattern bot-is-pattern imp-is-pattern or-is-pattern notation-reflexivity notation-transitivity notation-negative and-is-pattern inh-is-pattern inhabitant-is-symbol symbol-is-pattern not-is-sugar negative-disjoint app-is-pattern negative-in-imp positive-in-imp notation-positive kore-not-is-pattern positive-disjoint negative-in-app inh-is-sugar kore-top-is-sugar or-is-sugar and-is-sugar kore-not-is-sugar ) BFAGNABUDCBFFAGFJFBFAGNCBFFAGFJHIBFFAGFJFCBFFAGFJHCBFFFAGFIBFFAGFJCBFFFAGFCBFFHIBFFFCBFFHCBFHIBFFCBFHCBHIBFCBHCEHCSUABFBHIBHIBRBHIKLMHCUEUBBFFBFHIBFHIBFRBFHIKLUCHCSUABFFFBFFHIBFFHIBFFRBFFHIKLMAGHIAGFCAGHCAOAGCPQATAOCPQACPQCSDUFAOPQATPQATAUGPQATKLMAGAOAOAUHAOKLMHCUEUBAGFAGHIAGHIAGRAGHIKLUCUBBFFAGFJBFFFAGFIBFFFAGFIBFFAGFUIBFFFAGFIKLUCHCSUABFFAGFJFBFFAGFJHIBFFAGFJHIBFFAGFJRBFFAGFJHIKLMBFAGNBFFAGFJFBFFAGFJFBFAGUJBFFAGFJFKLMABUDBFAGNBFAGNABUKBFAGNKLM $. $}
${ positive-in-kore-next.0 $e #Positive xX ph0 $.
   positive-in-kore-next.1 $e #Positive xX ph1 $.
   positive-in-kore-next $p #Positive xX ( \kore-next ph0 ph1 ) $= ( kore-next-is-symbol symbol-is-pattern app-is-pattern kore-next-is-pattern positive-disjoint positive-in-app kore-next-is-sugar notation-reflexivity notation-transitivity notation-positive ) FGBHABICFGBCFGCJEKABIFGBHFGBHABLFGBHMNO $. $}
${ negative-in-kore-next.0 $e #Negative xX ph0 $.
   negative-in-kore-next.1 $e #Negative xX ph1 $.
   negative-in-kore-next $p #Negative xX ( \kore-next ph0 ph1 ) $= ( kore-next-is-symbol symbol-is-pattern app-is-pattern kore-next-is-pattern negative-disjoint negative-in-app kore-next-is-sugar notation-reflexivity notation-transitivity notation-negative ) FGBHABICFGBCFGCJEKABIFGBHFGBHABLFGBHMNO $. $}
${ $d X xX ph0 $.
   $d X ph1 $.
   positive-in-kore-always.0 $e #Positive xX ph1 $.
   positive-in-kore-always $p #Positive xX ( \kore-always ph0 ph1 ) $= ( X-is-element-var set-var-is-var kore-not-is-pattern not-is-pattern var-is-pattern kore-all-path-next-is-pattern or-is-pattern bot-is-pattern imp-is-pattern and-is-pattern notation-reflexivity notation-transitivity kore-next-is-pattern notation-negative positive-disjoint negative-disjoint kore-and-is-pattern notation-positive not-is-sugar positive-in-imp negative-in-kore-not positive-in-kore-not negative-in-imp or-is-sugar and-is-sugar kore-and-is-sugar positive-in-var positive-in-kore-next kore-all-path-next-is-sugar mu-is-pattern inh-is-pattern kore-mu-is-pattern kore-always-is-pattern negative-in-mu kore-mu-is-sugar kore-always-is-sugar ) AAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPGABUQCAAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPCACSAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLCAABAAEFIGJUAGECAABAAEFIGJUACACTBAAEFIGJNABAAEFIGJUACBHAAEFIGJHKHBAAEFIGJNCBHAAEFIGJHKLMBHAAEFIGJHKHCBHAAEFIGJHKLCBHHAAEFIGJHMBHAAEFIGJHKCBHHAAEFIGJHCBHLMBHHCBHLCBLMBHCBLCDLCTUGBHBLMBLMBUCBLMOPRLCSUDBHHBHLMBHLMBHUCBHLMOPUBAAEFIGJHCTUGBHAAEFIGJHUHRLCSUDBHAAEFIGJHKUCUBBAAEFIGJUIUBABAAEFIGJUJUBUEURLCSUDAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNUCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMOPUBLCTUGAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHUCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMOPRAUOHCSUDAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHUHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMOPUBLCTUGAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKUCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMOPRAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUOUIAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHOPRAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAAABAAEFIGJUAGEUSAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUCAAEFIGJLMOPUBUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUBLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUCBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONOPRUFABEUTUB $. $}
${ $d X xX ph0 $.
   $d X ph1 $.
   negative-in-kore-always.0 $e #Negative xX ph1 $.
   negative-in-kore-always $p #Negative xX ( \kore-always ph0 ph1 ) $= ( X-is-element-var set-var-is-var kore-not-is-pattern not-is-pattern var-is-pattern kore-all-path-next-is-pattern or-is-pattern bot-is-pattern imp-is-pattern and-is-pattern notation-reflexivity notation-transitivity kore-next-is-pattern notation-negative positive-disjoint negative-disjoint kore-and-is-pattern not-is-sugar notation-positive positive-in-imp negative-in-kore-not positive-in-kore-not negative-in-imp or-is-sugar and-is-sugar kore-and-is-sugar positive-in-var positive-in-kore-next kore-all-path-next-is-sugar mu-is-pattern inh-is-pattern kore-mu-is-pattern kore-always-is-pattern positive-in-mu kore-mu-is-sugar kore-always-is-sugar ) AAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPGABUQCAAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPCACTAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLCAABAAEFIGJUAGECAABAAEFIGJUACACSBAAEFIGJNABAAEFIGJUACBHAAEFIGJHKHBAAEFIGJNCBHAAEFIGJHKLMBHAAEFIGJHKHCBHAAEFIGJHKLCBHHAAEFIGJHMBHAAEFIGJHKCBHHAAEFIGJHCBHLMBHHCBHLCBLMBHCBLCDLCSUDBHBLMBLMBUBBLMOPUCLCTUGBHHBHLMBHLMBHUBBHLMOPRAAEFIGJHCSUDBHAAEFIGJHUHUCLCTUGBHAAEFIGJHKUBRBAAEFIGJUIRABAAEFIGJUJRUFURLCTUGAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNUBAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNLMOPRLCSUDAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHUBAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHLMOPUCAUOHCTUGAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHUHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHHAUOHMOPRLCSUDAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKUBAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKLMOPUCAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUOUIAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNHAUOHKHOPUCAAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUPAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONAAABAAEFIGJUAGEUSAABAAEFIGJUAGEAABAAEFIGJUAEFAEFSBAAEFIGJNABAAEFIGJUAEFBHAAEFIGJHKHBAAEFIGJNEFBHAAEFIGJHKLMBHAAEFIGJHKHEFBHAAEFIGJHKLEFBHHAAEFIGJHMBHAAEFIGJHKEFBHHAAEFIGJHEFBHHEFTAAEFIGJLMAAEFIGJHEFAAEFIGJLEFAAAAEFIGGQGAAEFIGJEFAAAAEFIGGQEFAEFTAAAEFIGGEFAEFSAAEFIGEFAEFSAEFIEFAEFTEFEFUKUEUFULUEAAEFIGJAAAAEFIGGQGAAAAEFIGGQGAAEFIGUMAAAAEFIGGQGOPRLEFSUDAAEFIGJHAAEFIGJLMAAEFIGJLMAAEFIGJUBAAEFIGJLMOPUCUDBHAAEFIGJHKBHHAAEFIGJHMBHHAAEFIGJHMBHAAEFIGJHUHBHHAAEFIGJHMOPUCLEFTUGBHAAEFIGJHKHBHAAEFIGJHKLMBHAAEFIGJHKLMBHAAEFIGJHKUBBHAAEFIGJHKLMOPRBAAEFIGJNBHAAEFIGJHKHBHAAEFIGJHKHBAAEFIGJUIBHAAEFIGJHKHOPRABAAEFIGJUABAAEFIGJNBAAEFIGJNABAAEFIGJUJBAAEFIGJNOPRUFUNAUONOPUCUEABEUTR $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   $d X ph3 $.
   notation-kore-always.0 $e #Notation ph0 ph2 $.
   notation-kore-always.1 $e #Notation ph1 ph3 $.
   notation-kore-always $p #Notation ( \kore-always ph0 ph1 ) ( \kore-always ph2 ph3 ) $= ( X-is-element-var set-var-is-var kore-not-is-pattern not-is-pattern var-is-pattern kore-all-path-next-is-pattern or-is-pattern bot-is-pattern imp-is-pattern and-is-pattern notation-transitivity notation-reflexivity kore-next-is-pattern kore-and-is-pattern positive-disjoint negative-disjoint notation-negative negative-in-kore-not positive-in-kore-not positive-in-imp not-is-sugar notation-positive kore-all-path-next-is-sugar kore-and-is-sugar positive-in-var positive-in-kore-next or-is-sugar negative-in-imp and-is-sugar kore-mu-is-pattern mu-is-pattern inh-is-pattern notation-kore-not kore-always-is-pattern notation-symmetry kore-always-is-sugar notation-and kore-mu-is-sugar notation-kore-next notation-mu notation-inh notation-notation ) ABUTAAAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUPICDUTABGVBAAAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUPICCCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUPICDUTAAAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUPCCCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUPEAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUQAURPCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUQCURPAAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUPCCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUPAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUQAURCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUQCURAABAAGHKILTICCDCCGHKILTIGAABAAGHKILTCCDCCGHKILTEABAAGHKILTBAAGHKILPCDCCGHKILTABAAGHKILUJBAAGHKILPDCCGHKILPCDCCGHKILTBAAGHKILDCCGHKILFAAGHKILAAAAGHKIISICCGHKILAAGHKIUIAAAAGHKIISICCCCGHKIISICCGHKILAAAAGHKIISCCCCGHKIISEAAAGHKIICCCGHKIIEAAGHKICCGHKIEAGHKCGHKEGHKRUSUSVEUSCCGHKILCCCCGHKIISICCGHKIUIVAQQVCCDCCGHKILTDCCGHKILPCDCCGHKILUJVAQQUSVFACEVGVCAAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUPAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUQAURPAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUQAURPAAABAAGHKILTIGVDAABAAGHKILTIGAABAAGHKILTGHAGHUABAAGHKILPABAAGHKILTGHBJAAGHKILJMJBAAGHKILPGHBJAAGHKILJMNOBJAAGHKILJMJGHBJAAGHKILJMNGHBJJAAGHKILJOBJAAGHKILJMGHBJJAAGHKILJGHBJJGHUBAAGHKILNOAAGHKILJGHAAGHKILNGHAAAAGHKIISIAAGHKILGHAAAAGHKIISGHAGHUBAAAGHKIIGHAGHUAAAGHKIGHAGHUAAGHKGHAGHUBGHGHUKUDUEULUDAAGHKILAAAAGHKIISIAAAAGHKIISIAAGHKIUIAAAAGHKIISIRQUCNGHUAUFAAGHKILJAAGHKILNOAAGHKILNOAAGHKILUGAAGHKILNORQUHUFBJAAGHKILJMBJJAAGHKILJOBJJAAGHKILJOBJAAGHKILJUMBJJAAGHKILJORQUHNGHUBUNBJAAGHKILJMJBJAAGHKILJMNOBJAAGHKILJMNOBJAAGHKILJMUGBJAAGHKILJMNORQUCBAAGHKILPBJAAGHKILJMJBJAAGHKILJMJBAAGHKILUOBJAAGHKILJMJRQUCABAAGHKILTBAAGHKILPBAAGHKILPABAAGHKILUJBAAGHKILPRQUCUEUQAURPRQCCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUPCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUQCURPCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUQCURPCCCDCCGHKILTIGVDCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUQCURPRQVHUSCDUTCCCCDCCGHKILTIGCCDCCGHKILTGHCGHUADCCGHKILPCDCCGHKILTGHDJCCGHKILJMJDCCGHKILPGHDJCCGHKILJMNODJCCGHKILJMJGHDJCCGHKILJMNGHDJJCCGHKILJODJCCGHKILJMGHDJJCCGHKILJGHDJJGHUBCCGHKILNOCCGHKILJGHCCGHKILNGHCCCCGHKIISICCGHKILGHCCCCGHKIISGHCGHUBCCCGHKIIGHCGHUACCGHKIGHCGHUACGHKGHCGHUBGHGHUKUDUEULUDCCGHKILCCCCGHKIISICCCCGHKIISICCGHKIUICCCCGHKIISIRQUCNGHUAUFCCGHKILJCCGHKILNOCCGHKILNOCCGHKILUGCCGHKILNORQUHUFDJCCGHKILJMDJJCCGHKILJODJJCCGHKILJODJCCGHKILJUMDJJCCGHKILJORQUHNGHUBUNDJCCGHKILJMJDJCCGHKILJMNODJCCGHKILJMNODJCCGHKILJMUGDJCCGHKILJMNORQUCDCCGHKILPDJCCGHKILJMJDJCCGHKILJMJDCCGHKILUODJCCGHKILJMJRQUCCDCCGHKILTDCCGHKILPDCCGHKILPCDCCGHKILUJDCCGHKILPRQUCUEUPICDGVBVAQQ $. $}
in-vs-include-lemma-0 $a |- ( \imp ph0 ( \or ( \and ph0 ( \not ph1 ) ) ( \and ph0 ph1 ) ) ) $.
in-vs-include-lemma-1 $a |- ( \imp ( \not ( \imp ph0 ph1 ) ) ( \and ph0 ( \not ph1 ) ) ) $.
in-vs-include-lemma-2 $a |- ( \imp ( \and ph0 ( \not ph1 ) ) ( \not ( \imp ph0 ph1 ) ) ) $.
in-imp-include $a |- ( \imp ( \in x ph0 ) ( \included x ph0 ) ) $.
include-imp-in $a |- ( \imp ( \included x ph0 ) ( \in x ph0 ) ) $.
in-vs-include $a |- ( \iff ( \in x ph0 ) ( \included x ph0 ) ) $.
${ membership-intro.0 $e |- ph0 $.
   membership-intro $a |- ( \forall x ( \in x ph0 ) ) $. $}
${ membership-elim.0 $e #Fresh x ph0 $.
   membership-elim.1 $e |- ( \forall x ( \in x ph0 ) ) $.
   membership-elim $a |- ph0 $. $}
${ $d x y $.
   membership-exists $a |- ( \iff ( \in x ( \exists y ph0 ) ) ( \exists y ( \in x ph0 ) ) ) $. $}
${ rule-imp-compat-in-in.0 $e |- ( \imp ph0 ph1 ) $.
   rule-imp-compat-in-in $a |- ( \imp ( \in x ph0 ) ( \in x ph1 ) ) $. $}
membership-or $a |- ( \iff ( \in x ( \or ph0 ph1 ) ) ( \or ( \in x ph0 ) ( \in x ph1 ) ) ) $.
membership-not $a |- ( \iff ( \in x ( \not ph0 ) ) ( \not ( \in x ph0 ) ) ) $.
membership-and $a |- ( \iff ( \in x ( \and ph0 ph1 ) ) ( \and ( \in x ph0 ) ( \in x ph1 ) ) ) $.
membership-var-left-aux-0 $a |- ( \imp ( \not ( \iff ph0 ph1 ) ) ( \or ( \and ph0 ( \not ph1 ) ) ( \and ( \not ph0 ) ph1 ) ) ) $.
membership-var-left-aux-1 $a |- ( \imp ( \ceil ( \and x y ) ) ( \not ( \ceil ( \and x ( \not y ) ) ) ) ) $.
membership-var-left-aux-2 $a |- ( \imp ( \ceil ( \and x y ) ) ( \not ( \ceil ( \and ( \not x ) y ) ) ) ) $.
membership-var-left $a |- ( \imp ( \in x y ) ( \eq x y ) ) $.
membership-var-right-aux $a |- ( \imp ( \or ph0 ph1 ) ( \or ( \not ( \iff ph0 ph1 ) ) ( \and ph0 ph1 ) ) ) $.
membership-var-right $a |- ( \imp ( \eq x y ) ( \in x y ) ) $.
membership-var $a |- ( \iff ( \in x y ) ( \eq x y ) ) $.
membership-imp $a |- ( \iff ( \in x ( \imp ph0 ph1 ) ) ( \imp ( \in x ph0 ) ( \in x ph1 ) ) ) $.
${ rule-membership-imp-right.0 $e |- ( \imp ( \in x ph0 ) ( \in x ph1 ) ) $.
   rule-membership-imp-right $a |- ( \in x ( \imp ph0 ph1 ) ) $. $}
ceil-and-x-ceil-ph-imp-ceil-ph $a |- ( \imp ( \ceil ( \and x ( \ceil ph0 ) ) ) ( \ceil ph0 ) ) $.
membership-symbol-ceil-aux-aux-0 $a |- ( \imp ( \ceil ( \and x ph0 ) ) ( \floor ( \ceil ( \and x ph0 ) ) ) ) $.
membership-symbol-ceil-aux-0 $a |- ( \imp ( \ceil ( \and x ph0 ) ) ( \ceil ( \and y ( \ceil ( \and x ph0 ) ) ) ) ) $.
${ $d y ph0 $.
   membership-symbol-ceil-right-aux-0 $a |- ( \imp ( \exists y ( \and ( \ceil ( \and y ph0 ) ) y ) ) ph0 ) $. $}
${ $d x y $.
   $d y ph0 $.
   membership-symbol-ceil-right $a |- ( \imp ( \exists y ( \in y ph0 ) ) ( \in x ( \ceil ph0 ) ) ) $. $}
${ $d x y ph0 $.
   $d y ph0 $.
   membership-symbol-ceil-left-aux-0 $a |- ( \imp ph0 ( \exists y ( \ceil ( \and y ph0 ) ) ) ) $. $}
${ $d x y $.
   $d y ph0 $.
   membership-symbol-ceil-left $a |- ( \imp ( \in x ( \ceil ph0 ) ) ( \exists y ( \in y ph0 ) ) ) $. $}
${ $d x y $.
   $d x ph0 $.
   $d y ph0 $.
   lemma-ceil-imp-floor-ceil $a |- ( \imp ( \ceil ph0 ) ( \floor ( \ceil ph0 ) ) ) $. $}
ceil-floor-imp-floor $a |- ( \imp ( \ceil ( \floor ph0 ) ) ( \floor ph0 ) ) $.
${ nonempty-is-not-bot.0 $e |- ( \ceil ph0 ) $.
   nonempty-is-not-bot $a |- ( \not ( \eq ph0 \bot ) ) $. $}
${ $d x y ph0 $.
   functional-imp-nonempty $a |- ( \imp ( \exists x ( \eq x ph0 ) ) ( \ceil ph0 ) ) $. $}
${ $d x ph0 $.
   functional-imp-nonempty-alt.0 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-imp-nonempty-alt $a |- ( \imp th0 ( \ceil ph0 ) ) $. $}
lemma-floor-is-predicate $a |- ( \is-predicate ( \floor ph0 ) ) $.
not-bot-to-top $a |- ( \imp ( \is-bot ph0 ) ( \is-top ( \not ph0 ) ) ) $.
not-top-to-bot $a |- ( \imp ( \is-top ph0 ) ( \is-bot ( \not ph0 ) ) ) $.
predicate-intro-not $a |- ( \imp ( \is-predicate ph0 ) ( \is-predicate ( \not ph0 ) ) ) $.
${ rule-iff-compat-in-predicate.0 $e |- ( \iff ph0 ph1 ) $.
   rule-iff-compat-in-predicate $a |- ( \iff ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) $. $}
ph-or-top-to-top $a |- ( \imp ( \is-top ph0 ) ( \is-top ( \or ph0 ph1 ) ) ) $.
bot-or-bot-to-bot $a |- ( \imp ( \and ( \is-bot ph0 ) ( \is-bot ph1 ) ) ( \is-bot ( \or ph0 ph1 ) ) ) $.
predicate-case2 $a |- ( \imp ( \and ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) ( \or ( \and ( \is-bot ph0 ) ( \is-bot ph1 ) ) ( \or ( \and ( \is-bot ph0 ) ( \is-top ph1 ) ) ( \or ( \and ( \is-top ph0 ) ( \is-bot ph1 ) ) ( \and ( \is-top ph0 ) ( \is-top ph1 ) ) ) ) ) ) $.
predicate-intro-or $a |- ( \imp ( \and ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) ( \is-predicate ( \or ph0 ph1 ) ) ) $.
predicate-intro-imp $a |- ( \imp ( \and ( \is-predicate ph0 ) ( \is-predicate ph1 ) ) ( \is-predicate ( \imp ph0 ph1 ) ) ) $.
${ rule-predicate-intro-imp.0 $e |- ( \is-predicate ph0 ) $.
   rule-predicate-intro-imp.1 $e |- ( \is-predicate ph1 ) $.
   rule-predicate-intro-imp $a |- ( \is-predicate ( \imp ph0 ph1 ) ) $. $}
lemma-bot-imp-floor $a |- ( \imp ( \is-bot ph0 ) ( \imp ph0 ( \floor ph0 ) ) ) $.
lemma-top-imp-floor $a |- ( \imp ( \is-top ph0 ) ( \imp ph0 ( \floor ph0 ) ) ) $.
lemma-predicate-floor-alt $a |- ( \imp ( \is-predicate ph0 ) ( \imp ph0 ( \floor ph0 ) ) ) $.
${ lemma-predicate-floor.0 $e |- ( \is-predicate ph0 ) $.
   lemma-predicate-floor $a |- ( \imp ph0 ( \floor ph0 ) ) $. $}
lemma-imp-floor-imp-floor $a |- ( \imp ( \imp ( \floor ph0 ) ( \floor ph1 ) ) ( \floor ( \imp ( \floor ph0 ) ( \floor ph1 ) ) ) ) $.
lemma-ceil-is-predicate $a |- ( \is-predicate ( \ceil ph0 ) ) $.
${ is-predicate-elim.0 $e |- ( \is-predicate ph0 ) $.
   is-predicate-elim.1 $e #Substitution ph2 ph1 \bot x $.
   is-predicate-elim.2 $e #Substitution ph3 ph1 \top x $.
   is-predicate-elim.3 $e #Substitution ph4 ph1 ph0 x $.
   is-predicate-elim.4 $e |- ph2 $.
   is-predicate-elim.5 $e |- ph3 $.
   is-predicate-elim $a |- ph4 $. $}
forall-predicate-case $a |- ( \imp ( \forall x ( \is-predicate ph0 ) ) ( \or ( \exists x ( \is-top ph0 ) ) ( \forall x ( \is-bot ph0 ) ) ) ) $.
predicate-intro-exists $a |- ( \imp ( \forall x ( \is-predicate ph0 ) ) ( \is-predicate ( \exists x ph0 ) ) ) $.
${ rule-predicate-intro-exists.0 $e |- ( \is-predicate ph0 ) $.
   rule-predicate-intro-exists $a |- ( \is-predicate ( \exists x ph0 ) ) $. $}
${ $d x ph0 $.
   nonempty-predicate-is-top.0 $e |- ( \ceil ph0 ) $.
   nonempty-predicate-is-top.1 $e |- ( \is-predicate ph1 ) $.
   nonempty-predicate-is-top $a |- ( \imp ( \eq ph0 ( \and ph1 ph0 ) ) ph1 ) $. $}
${ $d x ph1 $.
   $d x ph2 $.
   predicate-and-propagate-in-eq.0 $e |- ( \is-predicate ph0 ) $.
   predicate-and-propagate-in-eq $a |- ( \imp ( \and ph0 ( \eq ph1 ph2 ) ) ( \eq ( \and ph0 ph1 ) ph2 ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   predicate-imp-propagate-in-floor.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-propagate-in-floor $a |- ( \imp ( \imp ph0 ( \floor ph1 ) ) ( \floor ( \imp ph0 ph1 ) ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   predicate-imp-propagate-in-iff.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-propagate-in-iff $a |- ( \imp ( \imp ph0 ( \iff ph1 ph2 ) ) ( \iff ( \and ( \imp ph0 ph1 ) ph2 ) ph2 ) ) $. $}
${ predicate-floor-intro.0 $e |- ( \is-predicate ph0 ) $.
   predicate-floor-intro.1 $e |- ( \imp ph0 ph1 ) $.
   predicate-floor-intro $a |- ( \imp ph0 ( \floor ph1 ) ) $. $}
${ rule-predicate-intro-and.0 $e |- ( \is-predicate ph0 ) $.
   rule-predicate-intro-and.1 $e |- ( \is-predicate ph1 ) $.
   rule-predicate-intro-and $a |- ( \is-predicate ( \and ph0 ph1 ) ) $. $}
predicate-intro-top $a |- ( \is-predicate \top ) $.
is-bot-elim $a |- ( \imp ( \is-bot ph0 ) ( \imp ph0 ph1 ) ) $.
${ $d x ph1 $.
   $d x ph2 $.
   predicate-imp-propagate-in-app.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-propagate-in-app $a |- ( \iff ( \and ph0 ( \app ph1 ph2 ) ) ( \app ph1 ( \and ph0 ph2 ) ) ) $. $}
${ predicate-imp-compat-in-ceil.0 $e |- ( \is-predicate ph0 ) $.
   predicate-imp-compat-in-ceil.1 $e |- ( \imp ph0 ( \imp ph1 ph2 ) ) $.
   predicate-imp-compat-in-ceil $a |- ( \imp ph0 ( \imp ( \ceil ph1 ) ( \ceil ph2 ) ) ) $. $}
${ predicate-not-ceil-elim.0 $e |- ( \is-predicate ph0 ) $.
   predicate-not-ceil-elim.1 $e |- ( \imp ph0 ( \not ph1 ) ) $.
   predicate-not-ceil-elim $a |- ( \imp ph0 ( \not ( \ceil ph1 ) ) ) $. $}
kore-top-sorting $a |- ( \in-sort ( \kore-top ph0 ) ph0 ) $.
kore-bottom-sorting $a |- ( \in-sort ( \kore-bottom ph0 ) ph0 ) $.
kore-not-sorting $a |- ( \in-sort ( \kore-not ph0 ph1 ) ph0 ) $.
kore-or-sorting-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \kore-or ph0 ph1 ph2 ) ph0 ) ) ) $.
kore-or-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-or ph0 ph1 ph2 ) ph0 ) ) $.
or-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \or ph1 ph2 ) ph0 ) ) $.
kore-and-sorting-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \kore-and ph0 ph1 ph2 ) ph0 ) ) ) $.
kore-and-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-and ph0 ph1 ph2 ) ph0 ) ) $.
kore-implies-sorting-alt $a |- ( \imp ( \in-sort ph2 ph0 ) ( \in-sort ( \kore-implies ph0 ph1 ph2 ) ph0 ) ) $.
kore-implies-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-implies ph0 ph1 ph2 ) ph0 ) ) $.
kore-ceil-sorting $a |- ( \in-sort ( \kore-ceil ph0 ph2 ph1 ) ph2 ) $.
kore-floor-sorting $a |- ( \in-sort ( \kore-floor ph0 ph2 ph1 ) ph2 ) $.
kore-equals-sorting $a |- ( \in-sort ( \kore-equals ph0 ph1 ph2 ph3 ) ph1 ) $.
${ $d X ph0 $.
   kore-mu-sorting.0 $e #Positive X ph1 $.
   kore-mu-sorting.1 $e |- ( \imp ( \in-sort X ph0 ) ( \in-sort ph1 ph0 ) ) $.
   kore-mu-sorting.2 $e #Substitution ph2 ph1 ( \inh ph0 ) X $.
   kore-mu-sorting $a |- ( \in-sort ( \mu X ph1 ) ph0 ) $. $}
${ kore-valid-to-in-sort.0 $e |- ( \kore-valid ph0 ph1 ) $.
   kore-valid-to-in-sort $a |- ( \in-sort ph1 ph0 ) $. $}
kore-exists-sorting $a |- ( \in-sort ( \kore-exists ph0 ph1 x ph2 ) ph1 ) $.
kore-forall-sorting $a |- ( \in-sort ( \kore-forall ph0 ph1 x ph2 ) ph1 ) $.
sorted-forall-sorting-lemma-0 $a |- ( \imp ph0 ( \imp ( \imp ph1 ph2 ) ( \imp ( \imp ph0 ph1 ) ph2 ) ) ) $.
sorted-forall-sorting-lemma-1 $a |- ( \imp ( \floor ph0 ) ( \imp ( \floor ( \imp ph1 ph2 ) ) ( \floor ( \imp ( \imp ( \floor ph0 ) ph1 ) ph2 ) ) ) ) $.
sorted-forall-sorting-lemma-2 $a |- ( \imp ( \floor ph0 ) ( \imp ( \imp ( \and ph3 ( \floor ph0 ) ) ( \floor ( \imp ph1 ph2 ) ) ) ( \imp ph3 ( \floor ( \imp ( \imp ( \floor ph0 ) ph1 ) ph2 ) ) ) ) ) $.
sorted-forall-sorting-lemma-3 $a |- ( \imp ( \imp ph0 ph1 ) ( \imp ( \imp ph2 ph0 ) ( \imp ph2 ph1 ) ) ) $.
${ $d x ph0 $.
   $d x ph3 $.
   sorted-forall-sorting.0 $e |- ( \exists x ( \in-sort x ph1 ) ) $.
   sorted-forall-sorting.1 $e |- ( \imp ( \and ph3 ( \in-sort x ph1 ) ) ( \in-sort ph2 ph0 ) ) $.
   sorted-forall-sorting $a |- ( \imp ph3 ( \in-sort ( \sorted-forall x ph1 ph2 ) ph0 ) ) $. $}
${ $d x ph0 $.
   $d x ph3 $.
   sorted-exists-sorting.0 $e |- ( \imp ( \and ph3 ( \in-sort x ph1 ) ) ( \in-sort ph2 ph0 ) ) $.
   sorted-exists-sorting $a |- ( \imp ph3 ( \in-sort ( \sorted-exists x ph1 ph2 ) ph0 ) ) $. $}
kore-rewrites-sorting $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \in-sort ( \kore-rewrites ph0 ph1 ph2 ) ph0 ) ) $.
kore-in-sorting $a |- ( \in-sort ( \kore-in ph0 ph1 ph2 ph3 ) ph1 ) $.
${ kore-mu-sorting-alt.0 $e #Positive X ph1 $.
   kore-mu-sorting-alt $a |- ( \in-sort ( \kore-mu ph0 X ph1 ) ph0 ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-sorting $a |- ( \in-sort ( \kore-eventually ph0 ph1 ) ph0 ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-weak-eventually-sorting $a |- ( \in-sort ( \kore-weak-eventually ph0 ph1 ) ph0 ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-always-sorting $a |- ( \in-sort ( \kore-always ph0 ph1 ) ph0 ) $. $}
kore-all-path-next-sorting $a |- ( \in-sort ( \kore-all-path-next ph0 ph1 ) ph0 ) $.
kore-circularity-sorting $a |- ( \in-sort ( \kore-circularity ph0 ph1 ) ph0 ) $.
${ $d X Y ph0 $.
   kore-well-founded-sorting $a |- ( \in-sort ( \kore-well-founded ph0 ) ph0 ) $. $}
${ $d X Y ph0 $.
   kore-well-founded-alt-sorting $a |- ( \in-sort ( \kore-well-founded-alt ph0 ) ph0 ) $. $}
kore-one-path-reaches-star-sorting $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ph0 ) ) $.
kore-one-path-reaches-plus-sorting $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ph0 ) ) $.
kore-top-valid $a |- ( \kore-valid ph0 ( \kore-top ph0 ) ) $.
kore-not-bot $a |- ( \kore-valid ph0 ( \kore-not ph0 ( \kore-bottom ph0 ) ) ) $.
kore-bot-elim $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-bottom ph0 ) ph1 ) ) ) $.
kore-mp-aux $a |- ( \imp ( \iff ph1 ph0 ) ( \imp ( \iff ( \or ( \and ( \not ph1 ) ph0 ) ph2 ) ph0 ) ( \iff ph2 ph0 ) ) ) $.
kore-mp $a |- ( \imp ( \kore-valid ph0 ph1 ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \kore-valid ph0 ph2 ) ) ) $.
${ kore-mp-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-mp-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $.
   kore-mp-alt $a |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $. $}
${ kore-weakened-mp.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-weakened-mp.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-weakened-mp $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $. $}
kore-weakening-alt $a |- ( \imp ( \kore-valid ph0 ph1 ) ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) $.
${ kore-weakening.0 $e |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $.
   kore-weakening $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $. $}
kore-implies-transitivity $a |- ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) ) $.
${ rule-kore-implies-transitivity.0 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $.
   rule-kore-implies-transitivity.1 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) $.
   rule-kore-implies-transitivity $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) $. $}
kore-or-intro-left $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph1 ph2 ) ) ) ) ) $.
kore-or-intro-right $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ph1 ) ) ) ) ) $.
${ kore-or-intro-left-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-intro-left-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-intro-left-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-or-intro-right-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-intro-right-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-intro-right-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ph1 ) ) ) ) $. $}
kore-or-elim-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \imp ( \in-sort ph3 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) ) ) ) ) $.
${ kore-or-elim-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-elim-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-elim-alt3.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-or-elim-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ph3 ) ( \kore-implies ph0 ( \kore-implies ph0 ph2 ph3 ) ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) ) ) $. $}
${ kore-or-elim.0 $e |- ( \in-sort ph1 ph0 ) $.
   kore-or-elim.1 $e |- ( \in-sort ph2 ph0 ) $.
   kore-or-elim.2 $e |- ( \in-sort ph3 ph0 ) $.
   kore-or-elim.3 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) $.
   kore-or-elim.4 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) $.
   kore-or-elim $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) $. $}
${ kore-or-elim-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-elim-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-elim-alt2.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-or-elim-alt2.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $.
   kore-or-elim-alt2.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-or-elim-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) $. $}
kore-and-elim-left-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ( \kore-valid ph0 ph1 ) ) ) $.
kore-and-elim-right-alt $a |- ( \imp ( \in-sort ph2 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ( \kore-valid ph0 ph2 ) ) ) $.
kore-and-elim-left $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph1 ) ) ) ) $.
kore-and-elim-right $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph2 ph1 ) ph1 ) ) ) ) $.
${ kore-and-elim-left-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-elim-left-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-elim-left-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph1 ) ) ) $. $}
${ kore-and-elim-right-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-elim-right-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-elim-right-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph2 ) ) ) $. $}
${ kore-and-elim-left-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-elim-left-alt2.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ) $.
   kore-and-elim-left-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $. $}
${ kore-and-elim-right-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-elim-right-alt2.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ) $.
   kore-and-elim-right-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $. $}
kore-and-intro $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) ) $.
${ kore-and-intro-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-intro-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-intro-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $.
   kore-and-intro-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ph2 ) ) $.
   kore-and-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ph2 ) ) ) $. $}
${ kore-and-intro-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-intro-alt2.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-intro-alt2.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-and-intro-alt2.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $.
   kore-and-intro-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ph3 ) ) ) ) $. $}
kore-implies-elim $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \imp ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \imp ph1 ph2 ) ) ) ) $.
${ kore-implies-elim-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-elim-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-elim-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-elim-alt $a |- ( \imp th0 ( \imp ph1 ph2 ) ) $. $}
${ kore-implies-intro.0 $e |- ( \in-sort ph1 ph0 ) $.
   kore-implies-intro.1 $e |- ( \in-sort ph2 ph0 ) $.
   kore-implies-intro.2 $e |- ( \imp ph1 ph2 ) $.
   kore-implies-intro $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $. $}
${ kore-implies-intro-alt.0 $e |- ( \is-predicate th0 ) $.
   kore-implies-intro-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-intro-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-intro-alt.3 $e |- ( \imp th0 ( \imp ph1 ph2 ) ) $.
   kore-implies-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $. $}
${ kore-implies-reflexivity.0 $e |- ( \in-sort ph1 ph0 ) $.
   kore-implies-reflexivity $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph1 ) ) $. $}
${ rule-kore-mp.0 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $.
   rule-kore-mp.1 $e |- ( \kore-valid ph0 ph1 ) $.
   rule-kore-mp $a |- ( \kore-valid ph0 ph2 ) $. $}
kore-contrapositive $a |- ( \imp ( \in-sort ph1 ph0 ) ( \imp ( \in-sort ph2 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ( \kore-not ph0 ph2 ) ( \kore-not ph0 ph1 ) ) ) ) ) ) $.
${ rule-kore-contrapositive.0 $e |- ( \in-sort ph1 ph0 ) $.
   rule-kore-contrapositive.1 $e |- ( \in-sort ph2 ph0 ) $.
   rule-kore-contrapositive.2 $e |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) $.
   rule-kore-contrapositive $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ph2 ) ( \kore-not ph0 ph1 ) ) ) $. $}
${ kore-contrapositive-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-contrapositive-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-contrapositive-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-contrapositive-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ph2 ) ( \kore-not ph0 ph1 ) ) ) ) $. $}
kore-dn-intro $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ) ) ) $.
kore-dn-elim $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph1 ) ) ) $.
${ kore-de-morgan-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph1 ) ) ) $.
   kore-de-morgan-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph2 ) ) ) $.
   kore-de-morgan-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-or ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-implies-reflexivity-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-reflexivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph1 ) ) ) $. $}
${ kore-iff-reflexivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-reflexivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph1 ) ) ) $. $}
${ kore-implies-transitivity-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-transitivity-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-implies-transitivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) $. $}
${ kore-implies-transitivity-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-transitivity-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-transitivity-alt2.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-implies-transitivity-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ( \kore-implies ph0 ph2 ph3 ) ( \kore-implies ph0 ph1 ph3 ) ) ) ) ) $. $}
${ kore-iff-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-iff-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph2 ph3 ) ) ) $.
   kore-iff-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph3 ) ) ) $. $}
${ kore-iff-symmetry.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-symmetry.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-symmetry.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-symmetry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph2 ph1 ) ) ) $. $}
${ kore-and-commutativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-commutativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-commutativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph2 ph1 ) ) ) ) $. $}
${ kore-and-associativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-associativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-associativity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-associativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ph1 ( \kore-and ph0 ph2 ph3 ) ) ( \kore-and ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) ) $. $}
${ kore-or-commutativity-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-commutativity-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-commutativity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph0 ph2 ph1 ) ) ) ) $. $}
${ kore-or-commutativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-commutativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-commutativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph0 ph2 ph1 ) ) ) ) $. $}
${ kore-or-associativity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-associativity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-associativity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-or-associativity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-or ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ( \kore-or ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-and.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-and.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-and.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-implies-compat-in-kore-and.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-implies-compat-in-kore-and.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-and.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph4 ) ) ) $.
   kore-implies-compat-in-kore-and $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph3 ) ( \kore-and ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-iff-compat-in-kore-and.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-compat-in-kore-and.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-compat-in-kore-and.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-iff-compat-in-kore-and.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-iff-compat-in-kore-and.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-compat-in-kore-and.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph3 ph4 ) ) ) $.
   kore-iff-compat-in-kore-and $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ph1 ph3 ) ( \kore-and ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-or.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-or.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-or.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-implies-compat-in-kore-or.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-implies-compat-in-kore-or.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-or.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph4 ) ) ) $.
   kore-implies-compat-in-kore-or $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-or ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-iff-compat-in-kore-or.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-compat-in-kore-or.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-compat-in-kore-or.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-iff-compat-in-kore-or.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-iff-compat-in-kore-or.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-compat-in-kore-or.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph3 ph4 ) ) ) $.
   kore-iff-compat-in-kore-or $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-or ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-iff-elim-left.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-elim-left.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-elim-left.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-elim-left $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $. $}
${ kore-iff-elim-right.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-iff-elim-right.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-iff-elim-right.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ph1 ph2 ) ) ) $.
   kore-iff-elim-right $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) $. $}
${ kore-and-top-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-top-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-top-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-and ph0 ph1 ( \kore-top ph0 ) ) ph2 ) ( \kore-and ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-anp-top.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-top.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-and ph0 ph1 ( \kore-top ph0 ) ) ) ) $.
   kore-anp-top $a |- ( \imp th0 ( \kore-valid ph0 ph1 ) ) $. $}
${ kore-imp-conj-simplify.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-imp-conj-simplify.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-imp-conj-simplify.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-imp-conj-simplify.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-imp-conj-simplify.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-and ph0 ph1 ph4 ) ) ) ) $.
   kore-imp-conj-simplify $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-and ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-not-elim.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-not-elim.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-not-elim.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-not-elim.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph1 ) ) ) $.
   kore-not-elim $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $. $}
${ kore-or-intro-left-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph1 ) ) ) $.
   kore-or-intro-left-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-or-intro-right-alt.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph2 ) ) ) $.
   kore-or-intro-right-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-curry.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $.
   kore-curry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $. $}
${ kore-uncurry.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-uncurry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $. $}
${ kore-premise-switch.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-premise-switch.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-premise-switch.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-premise-switch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ( \kore-implies ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-and-intro-alt3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-intro-alt3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-intro-alt3.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-intro-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-and ph0 ( \kore-implies ph0 ph1 ph2 ) ( \kore-implies ph0 ph1 ph3 ) ) ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ph3 ) ) ) ) ) $. $}
${ kore-weakening-imp2.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-weakening-imp2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph3 ph1 ) ( \kore-implies ph0 ph3 ph2 ) ) ) ) $. $}
${ kore-weakening-imp3.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weakening-imp3.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-weakening-imp3.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-weakening-imp3.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-implies ph0 ph2 ph3 ) ) ) ) $.
   kore-weakening-imp3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph4 ph1 ) ( \kore-implies ph0 ( \kore-implies ph0 ph4 ph2 ) ( \kore-implies ph0 ph4 ph3 ) ) ) ) ) $. $}
${ kore-and-or-distributivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-or-distributivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-or-distributivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-or-distributivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-or ph0 ph2 ph3 ) ) ( \kore-or ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) ) $. $}
${ kore-and-or-distributivity-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-and-or-distributivity-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-and-or-distributivity-alt.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-and-or-distributivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ( \kore-or ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) ) $. $}
kore-ceil-is-predicate $a |- ( \kore-is-predicate ph1 ( \kore-ceil ph0 ph1 ph2 ) ) $.
kore-is-predicate-not $a |- ( \imp ( \kore-is-predicate ph0 ph1 ) ( \kore-is-predicate ph0 ( \kore-not ph0 ph1 ) ) ) $.
${ kore-is-predicate-not-alt.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-is-predicate-not-alt $a |- ( \kore-is-predicate ph0 ( \kore-not ph0 ph1 ) ) $. $}
kore-floor-is-predicate $a |- ( \kore-is-predicate ph1 ( \kore-floor ph0 ph1 ph2 ) ) $.
${ kore-is-predicate-and-alt.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-is-predicate-and-alt.1 $e |- ( \kore-is-predicate ph0 ph2 ) $.
   kore-is-predicate-and-alt $a |- ( \kore-is-predicate ph0 ( \kore-and ph0 ph1 ph2 ) ) $. $}
${ $d x ph0 $.
   kore-is-sort-is-predicate $a |- ( \is-predicate ( \kore-is-sort ph0 ) ) $. $}
kore-is-predicate-top $a |- ( \kore-is-predicate ph0 ( \kore-top ph0 ) ) $.
${ kore-is-predicate-elim.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-is-predicate-elim.1 $e #Substitution ph3 ph2 ( \kore-bottom ph0 ) x $.
   kore-is-predicate-elim.2 $e #Substitution ph4 ph2 ( \kore-top ph0 ) x $.
   kore-is-predicate-elim.3 $e #Substitution ph5 ph2 ph1 x $.
   kore-is-predicate-elim.4 $e |- ph3 $.
   kore-is-predicate-elim.5 $e |- ph4 $.
   kore-is-predicate-elim $a |- ph5 $. $}
${ disjointness-eq.0 $e |- ( \eq ph0 ph2 ) $.
   disjointness-eq.1 $e |- ( \eq ph1 ph3 ) $.
   disjointness-eq.2 $e |- ( \not ( \and ph2 ph3 ) ) $.
   disjointness-eq $p |- ( \not ( \and ph0 ph1 ) ) $= ( and-is-pattern not-is-pattern rule-eq-to-iff rule-iff-compat-in-and rule-iff-elim-left rule-contrapositive-sugar proof-rule-mp ) CDHIABHIABHCDHABHCDHACBDACEJBDFJKLMGN $. $}
${ disjointness-simplify.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-simplify.1 $e |- ( \imp ph2 ph1 ) $.
   disjointness-simplify $p |- ( \not ( \and ph0 ph2 ) ) $= ( and-is-pattern not-is-pattern imp-reflexivity rule-imp-compat-in-and rule-contrapositive-sugar proof-rule-mp ) ABFGACFGACFABFAACBAHEIJDK $. $}
${ disjointness-symmetry.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-symmetry $p |- ( \not ( \and ph1 ph0 ) ) $= ( and-is-pattern not-is-pattern and-commutativity rule-iff-elim-left rule-contrapositive-sugar proof-rule-mp ) ABDEBADEBADABDBADABDBAFGHCI $. $}
${ $d x ph0 $.
   disjointness-quantify.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-quantify $p |- ( \not ( \and ph0 ( \sorted-exists x ph2 ph1 ) ) ) $= ( and-is-pattern element-var-is-var var-is-pattern in-sort-is-pattern exists-is-pattern not-is-pattern sorted-exists-is-pattern rule-imp-transitivity rule-contrapositive-sugar and-elim-right-sugar proof-rule-mp notation-reflexivity and-commutativity rule-iff-elim-left fresh-disjoint prenex-exists-and-left and-elim-left-sugar rule-and-intro-alt2-sugar lemma-forall-intro forall-not-to-not-exists sorted-exists-is-sugar notation-symmetry notation-transitivity notation-and notation-not notation-proof ) ADGHCIBFDJFKACBDLFKDGHCIBFAFDJKADGHCIBFDJFKADGHCIBFDJFDGHCIBFAFDJADGHCIBFDJFDGHCIBFDJAFDGHCIBFAFDJADGHCIBFDJFDGHCIBFDJAFADGHCIBFDJRSDGHCIBFADADGTUAMNDGHCIBFAFDDGHCIBFAFKDABFKDGHCIBFAFKDGHCIBFAFABFDGHCIBFAFABDGHCIBFAODGHCIBFAFDGHCIBFBDGHCIBFAUBDGHCIBOMUCNEPUDUEPACBDLFADGHCIBFDJFACBDLADGHCIBFDJAQCBDLDGHCIBFDJDGHCIBFDJCBDUFDGHCIBFDJDGHCIBFDJDGHCIBFDJQUGUHUIUJUK $. $}
${ predicate-commutes-with-context.0 $e |- ( \is-predicate ph0 ) $.
   predicate-commutes-with-context.1 $e #ApplicationContext x ph1 $.
   predicate-commutes-with-context.2 $e #Substitution ph2 ph1 ph5 x $.
   predicate-commutes-with-context.3 $e #Substitution ph3 ph1 ( \and ph0 ph5 ) x $.
   predicate-commutes-with-context.4 $e #Substitution ph4 ph1 ( \and \top ph5 ) x $.
   predicate-commutes-with-context $p |- ( \imp ( \and ph0 ph2 ) ph3 ) $= ( and-is-pattern top-is-pattern imp-is-pattern is-bot-is-pattern eq-is-pattern is-top-is-pattern iff-is-pattern bot-is-pattern floor-is-pattern not-is-pattern notation-symmetry notation-reflexivity notation-transitivity rule-imp-transitivity or-is-pattern notation-proof and-elim-right-sugar is-predicate-is-pattern proof-rule-mp rule-and-intro-alt2-sugar notation-imp top-intro rule-weakening or-is-sugar and-elim-left-sugar iff-is-sugar eq-is-sugar imp-transitivity is-predicate-is-sugar lemma-curry-left mp lemma-imp-compat-in-floor eq-elim element-var-is-var imp-reflexivity proof-rule-frame is-top-is-sugar lemma-eq-imp is-bot-is-sugar not-elim-alt rule-case-alt ) ARAPACMDOAUJARAPUGHARAPUGARUBAPOAUJARAPUPAUJARUBAPOAUJARAPUGARUBAPOAVAARUBAPOARAPUGARAPUGARUBAPOARAPUGARUBAPOARUBAPOARAPUPARUBAPOARUBAPOARUBAPOUDUCUEUCUCUEUCUEUHANQACMDOOARACMDOOANQNFMAFMQACMDOANSUANFMAFMSUAOANQNFMAFMQOANSNFMAFMSANONAOMNFMAFMOAFMNFMOMOANSNFMAFMSOANONAOMNFMAFMOAFMNFMOANONAOMNFMMAFMOANONAOMNFMAFMOOANONAOMNFMAFMVBANONAOMNFMMAFANONAOMNFMMANONAOMAANONAOMNFMUQANONAOMNAOAANONAOUINNAOAONAVCUNUKUFUFANONAOMNFMMNFMFANONAOMNFMUINFUIUFULUKANONAOMAFMNFMOAFMNFAFMNUNUOAFUIULUOULANSNFMAFMSANONAOMNFMAFMOAFMNFMOMANSANONAOMANONAOMANURANONAOMANONAOMANONAOMUDUCUENFMAFMSNFMAFMOAFMNFMOMNFMAFMOAFMNFMOMNFMAFMURNFMAFMOAFMNFMOMNFMAFMOAFMNFMOMNFMAFMOAFMNFMOMUDUCUEUMUHVDANQNFMAFMQANSUANFMAFMSUAANQANSUAANSUAANUSANSUAANSUAANSUAUDUCUENFMAFMQNFMAFMSUANFMAFMSUANFMAFMUSNFMAFMSUANFMAFMSUANFMAFMSUAUDUCUEUMUHNFMAFMQEDOACMDONFMAFMEDBGLKVEACMEOEDOACMDOOACMEDUTACMCEACUIBCEFNFMGVFIJLFNFFNUNUOFVGULVHUFUKUFUFARACMDOANQACMDOARANQANQAVIANQANQANQUDUCUEACMDOUDUMUHAPATOACMDOATQATOOAPATOOATVJAPATOATQATOAPATQATQAVKATQATQATQUDUCUEATOUDUMUHATOACMTOACMDOACMAOATOACMTOOACMATUTACUQUKACMDVLUFUFVM $. $}
${ $d y ph0 $.
   sorted-exists-propagation-converse.0 $e #ApplicationContext x ph0 $.
   sorted-exists-propagation-converse.1 $e #Substitution ph1 ph0 ph5 x $.
   sorted-exists-propagation-converse.2 $e #Substitution ph2 ph0 ( \sorted-exists y ph6 ph5 ) x $.
   sorted-exists-propagation-converse.3 $e #Substitution ph3 ph0 ( \and ( \in-sort y ph6 ) ph5 ) x $.
   sorted-exists-propagation-converse.4 $e #Substitution ph4 ph0 ( \and \top ph5 ) x $.
   sorted-exists-propagation-converse $p |- ( \imp ( \sorted-exists y ph6 ph1 ) ph2 ) $= ( element-var-is-var var-is-pattern in-sort-is-pattern and-is-pattern exists-is-pattern inh-is-pattern imp-is-pattern sorted-exists-is-pattern included-is-pattern floor-is-pattern notation-reflexivity notation-symmetry notation-transitivity is-predicate-is-pattern notation-proof sorted-exists-is-sugar notation-is-predicate notation-imp lemma-floor-is-predicate included-is-sugar in-sort-is-sugar predicate-commutes-with-context substitution-identity proof-rule-exists proof-rule-frame rule-imp-transitivity fresh-disjoint fresh-in-exists-shadowed notation-fresh fresh-after-substitution proof-rule-gen ) IOPGQBRISCUAGBIUBCUAIOPGQBRCIIOPGQBRDCIOPGQABDEFHIOPGTUCUHIOPGQUHIOPGTUAUDUHIOPGTUCUHIOPGTUAUMIOPGTUCIOPGTUAUDIOPGTUCIOPGTUAUDIOPGTUAUDIOPGTUNIOPGTUAUDIOPGTUAUDIOPGTUAUDUEUFUGUKUIIOPGQIOPGTUCIOPGQIOPGTUCIOPGTUCIOPGUOIOPGTUCIOPGTUCIOPGTUCUEUFUGUKUIJKMNUPADCIOPGQFRGFIUBHOJMLIOPGQFRIOPGQFRISUAIOPGQFRGFIUBUAIOPGQFRIOPGQFRIIIOPGQFRIOUQURIOPGQFRGFIUBIOPGQFRIOPGQFRISIOPGQFRUEGFIUBIOPGQFRISIOPGQFRISGFIUJIOPGQFRISIOPGQFRISIOPGQFRISUEUFUGULUIUSUTAGFIUBCIOHOAIOVAIOPGQFRISGFIUBIOIOPGQFRIVBGFIUBIOPGQFRISIOPGQFRISGFIUJIOPGQFRISIOPGQFRISIOPGQFRISUEUFUGVCLVDVEGBIUBCIOPGQBRISCGBIUBIOPGQBRISIOPGQBRISGBIUJIOPGQBRISIOPGQBRISIOPGQBRISUEUFUGCUEULUI $. $}
${ disjointness-case.0 $e |- ( \not ( \and ph0 ph1 ) ) $.
   disjointness-case.1 $e |- ( \not ( \and ph0 ph2 ) ) $.
   disjointness-case $p |- ( \not ( \and ph0 ( \or ph1 ph2 ) ) ) $= ( and-is-pattern or-is-pattern not-is-pattern rule-iff-elim-left disjointness-symmetry proof-rule-mp and-commutativity and-left-distributivity rule-imp-transitivity rule-contrapositive-sugar de-morgan-or rule-iff-elim-right rule-and-intro-sugar ) BAFCAFGHABCGFHABCGFBAFCAFGABCGFBCGAFBAFCAFGABCGFBCGAFABCGLIBCGAFBAFCAFGBCAMINOBAFHCAFHFBAFCAFGHBAFCAFGHBAFHCAFHFBAFCAFPQBAFHCAFHABDJACEJRKK $. $}
${ $d x ph0 $.
   sorted-exists-to-inh $p |- ( \imp ( \sorted-exists x ph0 x ) ( \inh ph0 ) ) $= ( element-var-is-var var-is-pattern inh-is-pattern and-is-pattern in-sort-is-pattern ceil-is-pattern definedness-is-symbol symbol-is-pattern app-is-pattern exists-is-pattern included-is-pattern notation-symmetry in-is-pattern notation-transitivity imp-is-pattern notation-reflexivity sorted-exists-is-pattern ceil-is-sugar notation-imp notation-proof rule-imp-transitivity and-elim-left-sugar include-imp-in in-sort-is-sugar in-is-sugar and-elim-right-sugar rule-and-intro-alt2-sugar lemma-imp-compat-in-exists membership-symbol-ceil-right-aux-0 sorted-exists-is-sugar ) BCDAGBCDFBLAEQABCDBSAEQBCDAGBCDFBLBCDAEFHBCDFBLAEBCDAGBCDFBCDAEFHBCDFBBCDAGBCDFBCDAEFHBCDBCDAGBCDFBCDAGBCDAEFHBCDAGBCDUDBCDAEMAEBOQBCDAGBCDAEFHQAEBUEBCDAGBCDAEFHBCDAEMAEBOBCDAGBCDAEMBCDAEMBCDAUFBCDAEMBCDAEMBCDAEMRNPBCDAEFHIJBCDAEFKAEBOBCDAEFTAEBOIJBCDAEFKAEBOBCDAEFHIJBCDAEFKAEBUGIJBCDAEFKBCDAEFHBCDAEFHIJBCDAEFKBCDAEFHIJBCDAEFKIJBCDAEFKBCDAEFTIJBCDAEFKIJBCDAEFKIJBCDAEFKRNPNNPNPUAUBUCBCDAGBCDUHUIUJAEBUKUCABCDBSAEBCDAGBCDFBLAEABCDBSBCDAGBCDFBLBCDAGBCDFBLABCDBULBCDAGBCDFBLBCDAGBCDFBLBCDAGBCDFBLRNPAERUAUB $. $}
${ $d x ph1 $.
   disjointness-sort.0 $e |- ( \not ( \and ph0 ( \inh ph1 ) ) ) $.
   disjointness-sort $p |- ( \not ( \and ph0 ( \sorted-exists x ph1 x ) ) ) $= ( inh-is-pattern element-var-is-var var-is-pattern sorted-exists-is-pattern sorted-exists-to-inh disjointness-simplify ) ABEBCFGCHDBCIJ $. $}
${ $d x y $.
   $d x ph0 $.
   disjointness-alt-lemma $p |- ( \imp ( \sorted-exists x ph2 ( \ceil ( \and ph0 ph1 ) ) ) ( \ceil ( \and ph0 ( \sorted-exists x ph2 ph1 ) ) ) ) $= ( imp-is-pattern bot-is-pattern not-is-pattern element-var-is-var var-is-pattern symbol-is-pattern app-is-pattern and-is-pattern definedness-is-symbol notation-symmetry inhabitant-is-symbol in-sort-is-pattern or-is-pattern inh-is-pattern notation-transitivity notation-reflexivity y-is-element-var top-is-pattern notation-imp ceil-is-pattern not-is-sugar exists-is-pattern sorted-exists-is-pattern included-is-pattern floor-is-pattern and-is-sugar or-is-sugar ceil-is-sugar notation-app substitution-symbol substitution-var-same substitution-app notation-substitution sorted-exists-is-sugar in-sort-is-sugar included-is-sugar floor-is-sugar inh-is-sugar rule-imp-transitivity and-elim-right-sugar notation-exists top-is-sugar and-elim-left-sugar lemma-imp-compat-in-exists rule-and-intro-alt2-sugar application-context-var application-context-app-right notation-application-context sorted-exists-propagation-converse imp-reflexivity fresh-disjoint proof-rule-gen notation-and notation-proof lemma-imp-compat-in-ceil ) CABLUDDUGCABLDUGUDACBDUGLUDUAHIUDABLUDCABLDUGUDDHICPABLLUDUBABLLUDABLCUADMJUAHIKUAHIUDUAHMJUAHIUAHUAHVJVKUAHIUDMJUAHIKMJUAHIKUAHIULMJUAHIKMJUAHIKMJUAHIKTNSVLMJAFEFEBFEEFEKMJUAHIKAFEFEBFEEFEABLUDUAHIUDABLUAHAFEFEBFEEFEMJAFEFEBFEEFEMJUAHIUAHAFEFEBFEEFEUAHMUNAFEFEBFEEFEUAHUOUPABLUDMJABLKMJAFEFEBFEEFEKABLULMJAFEFEBFEEFEKMJABLKMJAFEFEBFEEFEMJABLMJTABLAFEFEBFEEFEABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSNUMNSUAHIUDMJUAHIKMJUAHIKUAHIULMJUAHIKMJUAHIKMJUAHIKTNSABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSUQMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFKMJUAHIKMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFCABLDUGUDUAHIUDCABLDUGUAHMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFMJUAHIUAHMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFUAHMUNMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFUAHUOUPCABLDUGUDMJCABLDUGKMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFKCABLDUGULMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFKMJCABLDUGKMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFMJCABLDUGMJTCABLDUGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFCABLDUGDHICPABLLDUFMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFCABLDURMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFDHICPABLLDUFMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLLDDHICPABLLMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLLDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLUJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQUEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFDHICPGABLGQFDHICPGABLGQMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGQDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGUKMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEDHICPGGABLGDHICPGGMJDHIOJCKEFEKFEFEFEDHICPGGDHICPGFEMJDHIOJCKEFEKFEFEFEDHICPGUEMJDHIOJCKEFEKFEFEFEDHICPGFEMJDHIOJCKEFEKFEFEFDHICPGFDHICPGMJDHIOJCKEFEKFEFEDHICPGDHICPFEMJDHIOJCKEFEKFEFEDHICPUEMJDHIOJCKEFEKFEFEDHICPFEMJDHIOJCKEFEKFEFDHICPFDHICPMJDHIOJCKEFEKFEDHICPDHICRUHMJDHIOJCKEFEKFEDHICUSMJDHIOJCKEFEKFEDHICRUHDHICRUHMJDHIOJCKEFEKFEDHICRUHDHICREUIMJDHIOJCKEFEKFEDHICRUTMJDHIOJCKEFEKFEDHICREUIDHICREUIMJDHIOJCKEFEKFEDHICREUIDHICREGUDGMJDHIOJCKEFEKFEDHICREVAMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDGMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDFEMJDHIOJCKEFEKFEDHICREGUDUEMJDHIOJCKEFEKFEDHICREGUDFEMJDHIOJCKEFEKFDHICREGUDFDHICREGUDMJDHIOJCKEFEKDHICREGUDMJDHICREGKMJDHIOJCKEFEKDHICREGULMJDHIOJCKEFEKMJDHICREGKMJDHIOJCKEFEMJDHICREGMJTDHICREGDHIOJCKEFEDHICREGDHICREFEDHIOJCKEFEDHICREUEDHIOJCKEFEDHICREFEDHIOJCKEFDHICREFDHIOJCKDHICRDHITCROJCKCROJCKOJCKCVBOJCKOJCKOJCKTNSNUCFTUCNSNUMNSNFTUCNSNNSNNSNNSNFTUCNSNFTUCNSNABLGAFEFEBFEEFEFEABLGABLFEAFEFEBFEEFEFEABLUEAFEFEBFEEFEFEABLFEAFEFEBFEEFEFABLFABLAFEFEBFEEFEABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSNFTUCNSNUCNSNFTUCNSNNSNVENSNUMNSUAHIUDMJUAHIKMJUAHIKUAHIULMJUAHIKMJUAHIKMJUAHIKTNSCABLDUGDHICPABLLDUFMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFCABLDURMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDUFDHICPABLLDUFMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLLDDHICPABLLMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLLDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLUJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQUEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFDHICPGABLGQFDHICPGABLGQMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGQDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGUKMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEDHICPGGABLGDHICPGGMJDHIOJCKEFEKFEFEFEDHICPGGDHICPGFEMJDHIOJCKEFEKFEFEFEDHICPGUEMJDHIOJCKEFEKFEFEFEDHICPGFEMJDHIOJCKEFEKFEFEFDHICPGFDHICPGMJDHIOJCKEFEKFEFEDHICPGDHICPFEMJDHIOJCKEFEKFEFEDHICPUEMJDHIOJCKEFEKFEFEDHICPFEMJDHIOJCKEFEKFEFDHICPFDHICPMJDHIOJCKEFEKFEDHICPDHICRUHMJDHIOJCKEFEKFEDHICUSMJDHIOJCKEFEKFEDHICRUHDHICRUHMJDHIOJCKEFEKFEDHICRUHDHICREUIMJDHIOJCKEFEKFEDHICRUTMJDHIOJCKEFEKFEDHICREUIDHICREUIMJDHIOJCKEFEKFEDHICREUIDHICREGUDGMJDHIOJCKEFEKFEDHICREVAMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDGMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDFEMJDHIOJCKEFEKFEDHICREGUDUEMJDHIOJCKEFEKFEDHICREGUDFEMJDHIOJCKEFEKFDHICREGUDFDHICREGUDMJDHIOJCKEFEKDHICREGUDMJDHICREGKMJDHIOJCKEFEKDHICREGULMJDHIOJCKEFEKMJDHICREGKMJDHIOJCKEFEMJDHICREGMJTDHICREGDHIOJCKEFEDHICREGDHICREFEDHIOJCKEFEDHICREUEDHIOJCKEFEDHICREFEDHIOJCKEFDHICREFDHIOJCKDHICRDHITCROJCKCROJCKOJCKCVBOJCKOJCKOJCKTNSNUCFTUCNSNUMNSNFTUCNSNNSNNSNNSNFTUCNSNFTUCNSNABLGAFEFEBFEEFEFEABLGABLFEAFEFEBFEEFEFEABLUEAFEFEBFEEFEFEABLFEAFEFEBFEEFEFABLFABLAFEFEBFEEFEABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSNFTUCNSNUCNSNFTUCNSNNSNVENSUQMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEKMJUAHIKMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLLUDUAHIUDDHICPABLLUAHMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEMJUAHIUAHMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEUAHMUNMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEUAHUOUPDHICPABLLUDMJDHICPABLLKMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEKDHICPABLLULMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEKMJDHICPABLLKMJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEMJDHICPABLLMJTDHICPABLLMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLLDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLUJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQUEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFDHICPGABLGQFDHICPGABLGQMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGQDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGUKMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEDHICPGGABLGDHICPGGMJDHIOJCKEFEKFEFEFEDHICPGGDHICPGFEMJDHIOJCKEFEKFEFEFEDHICPGUEMJDHIOJCKEFEKFEFEFEDHICPGFEMJDHIOJCKEFEKFEFEFDHICPGFDHICPGMJDHIOJCKEFEKFEFEDHICPGDHICPFEMJDHIOJCKEFEKFEFEDHICPUEMJDHIOJCKEFEKFEFEDHICPFEMJDHIOJCKEFEKFEFDHICPFDHICPMJDHIOJCKEFEKFEDHICPDHICRUHMJDHIOJCKEFEKFEDHICUSMJDHIOJCKEFEKFEDHICRUHDHICRUHMJDHIOJCKEFEKFEDHICRUHDHICREUIMJDHIOJCKEFEKFEDHICRUTMJDHIOJCKEFEKFEDHICREUIDHICREUIMJDHIOJCKEFEKFEDHICREUIDHICREGUDGMJDHIOJCKEFEKFEDHICREVAMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDGMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDFEMJDHIOJCKEFEKFEDHICREGUDUEMJDHIOJCKEFEKFEDHICREGUDFEMJDHIOJCKEFEKFDHICREGUDFDHICREGUDMJDHIOJCKEFEKDHICREGUDMJDHICREGKMJDHIOJCKEFEKDHICREGULMJDHIOJCKEFEKMJDHICREGKMJDHIOJCKEFEMJDHICREGMJTDHICREGDHIOJCKEFEDHICREGDHICREFEDHIOJCKEFEDHICREUEDHIOJCKEFEDHICREFEDHIOJCKEFDHICREFDHIOJCKDHICRDHITCROJCKCROJCKOJCKCVBOJCKOJCKOJCKTNSNUCFTUCNSNUMNSNFTUCNSNNSNNSNNSNFTUCNSNFTUCNSNABLGAFEFEBFEEFEFEABLGABLFEAFEFEBFEEFEFEABLUEAFEFEBFEEFEFEABLFEAFEFEBFEEFEFABLFABLAFEFEBFEEFEABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSNFTUCNSNUCNSNFTUCNSNNSNUMNSUAHIUDMJUAHIKMJUAHIKUAHIULMJUAHIKMJUAHIKMJUAHIKTNSDHICPABLLDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPABLUJMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQGMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQGDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQUEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFEDHICPGABLGQFEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEFDHICPGABLGQFDHICPGABLGQMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGQDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGABLGUKMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEEDHICPGGABLGEMJDHIOJCKEFEKFEFEFEAFEFEBFEEFEFEDHICPGGABLGDHICPGGMJDHIOJCKEFEKFEFEFEDHICPGGDHICPGFEMJDHIOJCKEFEKFEFEFEDHICPGUEMJDHIOJCKEFEKFEFEFEDHICPGFEMJDHIOJCKEFEKFEFEFDHICPGFDHICPGMJDHIOJCKEFEKFEFEDHICPGDHICPFEMJDHIOJCKEFEKFEFEDHICPUEMJDHIOJCKEFEKFEFEDHICPFEMJDHIOJCKEFEKFEFDHICPFDHICPMJDHIOJCKEFEKFEDHICPDHICRUHMJDHIOJCKEFEKFEDHICUSMJDHIOJCKEFEKFEDHICRUHDHICRUHMJDHIOJCKEFEKFEDHICRUHDHICREUIMJDHIOJCKEFEKFEDHICRUTMJDHIOJCKEFEKFEDHICREUIDHICREUIMJDHIOJCKEFEKFEDHICREUIDHICREGUDGMJDHIOJCKEFEKFEDHICREVAMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDGMJDHIOJCKEFEKFEDHICREGUDGDHICREGUDFEMJDHIOJCKEFEKFEDHICREGUDUEMJDHIOJCKEFEKFEDHICREGUDFEMJDHIOJCKEFEKFDHICREGUDFDHICREGUDMJDHIOJCKEFEKDHICREGUDMJDHICREGKMJDHIOJCKEFEKDHICREGULMJDHIOJCKEFEKMJDHICREGKMJDHIOJCKEFEMJDHICREGMJTDHICREGDHIOJCKEFEDHICREGDHICREFEDHIOJCKEFEDHICREUEDHIOJCKEFEDHICREFEDHIOJCKEFDHICREFDHIOJCKDHICRDHITCROJCKCROJCKOJCKCVBOJCKOJCKOJCKTNSNUCFTUCNSNUMNSNFTUCNSNNSNNSNNSNFTUCNSNFTUCNSNABLGAFEFEBFEEFEFEABLGABLFEAFEFEBFEEFEFEABLUEAFEFEBFEEFEFEABLFEAFEFEBFEEFEFABLFABLAFEFEBFEEFEABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSNFTUCNSNUCNSNFTUCNSNNSUQMJFFEFEFEAFEFEBFEEFEFEEFEKMJUAHIKFFEFEFEAFEFEBFEEFEFEEFEUBABLLUDUAHIUDUBABLLUAHFFEFEFEAFEFEBFEEFEFEEFEMJFFEFEFEAFEFEBFEEFEFEEFEMJUAHIUAHFFEFEFEAFEFEBFEEFEFEEFEUAHMUNFFEFEFEAFEFEBFEEFEFEEFEUAHUOUPUBABLLUDMJUBABLLKMJFFEFEFEAFEFEBFEEFEFEEFEKUBABLLULMJFFEFEFEAFEFEBFEEFEFEEFEKMJUBABLLKMJFFEFEFEAFEFEBFEEFEFEEFEMJUBABLLMJTUBABLLFFEFEFEAFEFEBFEEFEFEEFEUBABLLUBGABLGQGFFEFEFEAFEFEBFEEFEFEEFEUBABLUJFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQGUBGABLGQGFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQGUBGABLGQFEFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQUEFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQFEFFEFEFEAFEFEBFEEFEFEEFUBGABLGQFUBGABLGQFFEFEFEAFEFEBFEEFEFEEUBGABLGQUBGGABLGEFFEFEFEAFEFEBFEEFEFEEUBGABLGUKFFEFEFEAFEFEBFEEFEFEEUBGGABLGEFFEFEFEAFEFEBFEEFEFEUBGGABLGUBGGFFEFEFEUBGGUBGFEFFEFEFEUBGUEFFEFEFEUBGFEFFEFEFUBGFUBGFFEFEUBGUBFEFFEFEUBUEFFEFEUBFEFFEFUBFUBFFEUBFGFFEVFFFEFGFGFFEFGFFEFFEFUEFFEFFEFFETNSNNSNFTUCNSNFTUCNSNABLGAFEFEBFEEFEFEABLGABLFEAFEFEBFEEFEFEABLUEAFEFEBFEEFEFEABLFEAFEFEBFEEFEFABLFABLAFEFEBFEEFEABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSNFTUCNSNUCNSNFTUCNSNNSNUMNSUAHIUDMJUAHIKMJUAHIKUAHIULMJUAHIKMJUAHIKMJUAHIKTNSUBABLLUBGABLGQGFFEFEFEAFEFEBFEEFEFEEFEUBABLUJFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQGUBGABLGQGFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQGUBGABLGQFEFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQUEFFEFEFEAFEFEBFEEFEFEEFEUBGABLGQFEFFEFEFEAFEFEBFEEFEFEEFUBGABLGQFUBGABLGQFFEFEFEAFEFEBFEEFEFEEUBGABLGQUBGGABLGEFFEFEFEAFEFEBFEEFEFEEUBGABLGUKFFEFEFEAFEFEBFEEFEFEEUBGGABLGEFFEFEFEAFEFEBFEEFEFEUBGGABLGUBGGFFEFEFEUBGGUBGFEFFEFEFEUBGUEFFEFEFEUBGFEFFEFEFUBGFUBGFFEFEUBGUBFEFFEFEUBUEFFEFEUBFEFFEFUBFUBFFEUBFGFFEVFFFEFGFGFFEFGFFEFFEFUEFFEFFEFFETNSNNSNFTUCNSNFTUCNSNABLGAFEFEBFEEFEFEABLGABLFEAFEFEBFEEFEFEABLUEAFEFEBFEEFEFEABLFEAFEFEBFEEFEFABLFABLAFEFEBFEEFEABLAGBGQGAFEFEBFEEFEABUJAFEFEBFEEFEAGBGQGAGBGQGAFEFEBFEEFEAGBGQGAGBGQFEAFEFEBFEEFEAGBGQUEAFEFEBFEEFEAGBGQFEAFEFEBFEEFAGBGQFAGBGQAFEFEBFEEAGBGQAGGBGEAFEFEBFEEAGBGUKAFEFEBFEEAGGBGEAFEFEBFEAGGBGAGGAFEFEAGGAGFEAFEFEAGUEAFEFEAGFEAFEFAGFAGAFEAGAFEAFEAUEAFEAFEAFETNSNFTUCNSNBGBFEBGBFEBFEBUEBFEBFEBFETNSNUCNSNFTUCNSNNSNFTUCNSNUCNSNFTUCNSNNSUQVMCABLDUGACBDUGLDHICPABLLDUFADHICPBLDUFLECABLDUGACBDUGLEDHICPABLLDUFADHICPBLDUFDHICPABLLDUFADUFADHICPABLLADDHICPABLLABLADHICPABLVDABVGVCVHAADAVNADHVOVPVCDHICPABLLDHICPBLDDHICPABLLDHICPBDHICPABLVGDHICPABLLABLBDHICPABLVDABVDVCVIVHVICABLDUGACBDUGLDHICPABLLDUFADHICPBLDUFLCABLDUGDHICPABLLDUFDHICPABLLDUFCABLDURDHICPABLLDUFDHICPABLLDUFDHICPABLLDUFTNSACBDUGADHICPBLDUFATCBDUGDHICPBLDUFDHICPBLDUFCBDURDHICPBLDUFDHICPBLDUFDHICPBLDUFTNSVQUCVRVSVC $. $}
${ $d x ph0 $.
   disjointness-alt.0 $e |- ( \not ( \and ph0 ( \sorted-exists x ph2 ph1 ) ) ) $.
   disjointness-alt $p |- ( \not ( \sorted-exists x ph2 ( \ceil ( \and ph0 ph1 ) ) ) ) $= ( sorted-exists-is-pattern and-is-pattern ceil-is-pattern not-is-pattern disjointness-alt-lemma rule-contrapositive-sugar lemma-not-ceil-elim proof-rule-mp ) ACBDFGHICABGHDFICABGHDFACBDFGHABCDJKACBDFGELM $. $}
${ disjointness-in-sort.0 $e |- ( \in-sort ph0 ph2 ) $.
   disjointness-in-sort.1 $e |- ( \not ( \and ( \inh ph2 ) ph1 ) ) $.
   disjointness-in-sort $p |- ( \not ( \and ph0 ph1 ) ) $= ( imp-is-pattern inh-is-pattern not-is-pattern ceil-is-pattern bot-is-pattern notation-symmetry and-is-pattern floor-is-pattern notation-transitivity included-is-pattern in-sort-is-pattern floor-is-sugar not-is-sugar and-elim-left-sugar in-sort-is-sugar included-is-sugar notation-reflexivity notation-proof lemma-floor-elim rule-imp-transitivity and-elim-right-sugar rule-and-intro-alt2-sugar rule-contrapositive-sugar proof-rule-mp ) CGBLHABLHABLCGBLABLCGBABLACGABSACGFACPACGFMDACGFMACGFHIHACPACGFQACPACGFHIHACPACGOACGFHIHACTACGFHIHACGOACGFHIHACGFHIJFACGOACGFHIRACGOACGFHIJFACGOACGFMACGFHIJFACGUAACGFHIJFACGFMACGFMACGFHIJFACGFMACGFHIHACGFHIJFACGFQACGFHIJFACGFHIHACGFHIHACGFHIJFACGFHIHACGFHIJFACGFHIJFACGFHIRACGFHIJFACGFHIJFACGFHIJFUBKNKKNKKNKNKNKNUCUDUEABUFUGUHEUI $. $}
kore-semantics-not $a |- ( \eq ( \kore-not ph0 ph1 ) ( \and ( \not ph1 ) ( \inh ph0 ) ) ) $.
${ kore-semantics-forall.0 $e #Fresh x ph1 $.
   kore-semantics-forall $a |- ( \eq ( \kore-forall ph0 ph1 x ph2 ) ( \and ( \sorted-forall x ph0 ph2 ) ( \inh ph1 ) ) ) $. $}
kore-semantics-and $a |- ( \eq ( \kore-and ph0 ph1 ph2 ) ( \and ph1 ph2 ) ) $.
kore-semantics-or $a |- ( \eq ( \kore-or ph0 ph1 ph2 ) ( \or ph1 ph2 ) ) $.
kore-semantics-implies $a |- ( \imp ( \in-sort ph2 ph0 ) ( \eq ( \kore-implies ph0 ph1 ph2 ) ( \and ( \imp ph1 ph2 ) ( \inh ph0 ) ) ) ) $.
kore-semantics-iff $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \eq ( \kore-iff ph0 ph1 ph2 ) ( \and ( \iff ph1 ph2 ) ( \inh ph0 ) ) ) ) $.
kore-semantics-ceil $a |- ( \eq ( \kore-ceil ph0 ph1 ph2 ) ( \and ( \ceil ph2 ) ( \inh ph1 ) ) ) $.
kore-semantics-floor $a |- ( \eq ( \kore-floor ph0 ph1 ph2 ) ( \and ( \floor ( \imp ( \inh ph0 ) ph2 ) ) ( \inh ph1 ) ) ) $.
kore-semantics-equals-lemma-0 $a |- ( \imp ( \and ( \in-sort ph1 ph0 ) ( \in-sort ph2 ph0 ) ) ( \included ( \not ( \inh ph0 ) ) ( \iff ph1 ph2 ) ) ) $.
kore-semantics-equals-lemma-1 $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \included ( \iff ph2 ph3 ) ( \imp ( \inh ph0 ) ( \iff ph2 ph3 ) ) ) ) $.
kore-semantics-equals-lemma-2 $a |- ( \imp ( \included ( \not ( \inh ph0 ) ) ( \iff ph1 ph2 ) ) ( \included ( \imp ( \inh ph0 ) ( \iff ph1 ph2 ) ) ( \iff ph1 ph2 ) ) ) $.
kore-semantics-equals-lemma-3 $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \eq ( \imp ( \inh ph0 ) ( \iff ph2 ph3 ) ) ( \iff ph2 ph3 ) ) ) $.
${ $d x ph0 $.
   $d x ph1 $.
   kore-semantics-equals-alt $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \eq ( \kore-equals ph0 ph1 ph2 ph3 ) ( \and ( \floor ( \imp ( \inh ph0 ) ( \iff ph2 ph3 ) ) ) ( \inh ph1 ) ) ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   kore-semantics-equals $a |- ( \imp ( \and ( \in-sort ph2 ph0 ) ( \in-sort ph3 ph0 ) ) ( \eq ( \kore-equals ph0 ph1 ph2 ph3 ) ( \and ( \eq ph2 ph3 ) ( \inh ph1 ) ) ) ) $. $}
${ $d x ph1 $.
   kore-exists-intro $a |- ( \imp ( \exists x ( \eq ph0 ph1 ) ) ( \eq ( \and ( \exists x ph0 ) ph1 ) ph1 ) ) $. $}
kore-semantics-dn $a |- ( \imp ( \in-sort ph1 ph0 ) ( \eq ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph1 ) ) $.
${ kore-semantics-exists-dn.0 $e |- ( \is-predicate th0 ) $.
   kore-semantics-exists-dn.1 $e #Fresh x th0 $.
   kore-semantics-exists-dn.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-semantics-exists-dn $a |- ( \imp th0 ( \eq ( \kore-exists ph1 ph0 x ( \kore-not ph0 ( \kore-not ph0 ph2 ) ) ) ( \kore-exists ph1 ph0 x ph2 ) ) ) $. $}
${ kore-equals-symmetry.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-equals ph1 ph0 ph3 ph2 ) ) ) $.
   kore-equals-symmetry $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-equals ph1 ph0 ph2 ph3 ) ) ) $. $}
${ kore-in-reflexivity.0 $e |- ( \is-predicate th0 ) $.
   kore-in-reflexivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-in-reflexivity $a |- ( \imp th0 ( \kore-valid ph1 ( \kore-in ph0 ph1 ph2 ph2 ) ) ) $. $}
${ sorted-forall-propagate-floor $a |- ( \imp ( \sorted-forall x ph0 ( \floor ph1 ) ) ( \floor ( \sorted-forall x ph0 ph1 ) ) ) $. $}
${ $d x ph2 $.
   kore-forall-intro-lemma $a |- ( \imp ( \sorted-forall x ph0 ( \eq ph1 ph2 ) ) ( \eq ( \and ( \sorted-forall x ph0 ph1 ) ph2 ) ph2 ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   kore-forall-intro.0 $e |- ( \sorted-forall x ph2 ( \imp th0 ( \kore-valid ph0 ph1 ) ) ) $.
   kore-forall-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-forall ph2 ph0 x ph1 ) ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   kore-forall-intro-alt.0 $e |- ( \imp ( \and ( \in-sort x ph2 ) th0 ) ( \kore-valid ph0 ph1 ) ) $.
   kore-forall-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-forall ph2 ph0 x ph1 ) ) ) $. $}
${ kore-equality-in-constraint.0 $e |- ( \is-predicate th0 ) $.
   kore-equality-in-constraint.1 $e #Substitution ph2 ph4 ph5 x $.
   kore-equality-in-constraint.2 $e #Substitution ph3 ph4 ph6 x $.
   kore-equality-in-constraint.3 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equality-in-constraint.4 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equality-in-constraint.5 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-equality-in-constraint.6 $e |- ( \imp th0 ( \in-sort ph5 ph7 ) ) $.
   kore-equality-in-constraint.7 $e |- ( \imp th0 ( \in-sort ph6 ph7 ) ) $.
   kore-equality-in-constraint.8 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-equals ph7 ph0 ph5 ph6 ) ) ) ) $.
   kore-equality-in-constraint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) $. $}
unit-sort-is-kore-sort $a |- ( \kore-is-sort \unit-sort ) $.
unit-sort-is-functional $a |- ( \exists x ( \eq x \unit-sort ) ) $.
${ $d x ph0 $.
   kore-sort-functional.0 $e |- ( \imp th0 ( \kore-is-sort ph0 ) ) $.
   kore-sort-functional $a |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d x ph0 $.
   functional-substitution-alt2.0 $e #Fresh y th0 $.
   functional-substitution-alt2.1 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt2.2 $e |- ( \imp ( \and th0 th1 ) ph1 ) $.
   functional-substitution-alt2.3 $e #Substitution ( \imp th2 ph2 ) ( \imp th1 ph1 ) ph0 y $.
   functional-substitution-alt2.4 $e #Substitution ( \imp th3 ph3 ) ( \imp th1 ph1 ) z y $.
   functional-substitution-alt2 $a |- ( \imp ( \and th0 th2 ) ph2 ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d x ph0 $.
   $d y th0 $.
   functional-substitution-alt.0 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt.1 $e |- ( \imp ( \and th0 th1 ) ph1 ) $.
   functional-substitution-alt.2 $e #Substitution ( \imp th2 ph2 ) ( \imp th1 ph1 ) ph0 y $.
   functional-substitution-alt.3 $e #Substitution ( \imp th3 ph3 ) ( \imp th1 ph1 ) z y $.
   functional-substitution-alt $a |- ( \imp ( \and th0 th2 ) ph2 ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d x ph0 $.
   $d y th0 $.
   functional-substitution-alt3.0 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt3.2 $e #Substitution ( \imp th2 ph2 ) ( \imp th1 ph1 ) ph0 y $.
   functional-substitution-alt3.3 $e #Substitution ( \imp th3 ph3 ) ( \imp th1 ph1 ) z y $.
   functional-substitution-alt3 $a |- ( \imp th0 ( \imp ( \forall y ( \imp th1 ph1 ) ) ( \imp th2 ph2 ) ) ) $. $}
${ $d z ph0 $.
   $d z ph1 $.
   $d z ph2 $.
   $d z y $.
   $d z x $.
   $d z th1 $.
   $d z th2 $.
   $d z ph4 $.
   $d x ph0 $.
   $d y ph4 $.
   $d y ph5 $.
   $d y th0 $.
   functional-substitution-alt4.0 $e |- ( \is-predicate th0 ) $.
   functional-substitution-alt4.1 $e |- ( \imp th0 ( \exists x ( \eq x ph0 ) ) ) $.
   functional-substitution-alt4.2 $e |- ( \imp th0 ( \in-sort ph2 ph5 ) ) $.
   functional-substitution-alt4.3 $e |- ( \imp th0 ( \in-sort ph0 ph4 ) ) $.
   functional-substitution-alt4.4 $e #Substitution ph2 ph1 ph0 y $.
   functional-substitution-alt4.5 $e #Substitution ph3 ph1 z y $.
   functional-substitution-alt4 $a |- ( \imp th0 ( \kore-valid ph5 ( \kore-implies ph5 ( \kore-forall ph4 ph5 y ph1 ) ph2 ) ) ) $. $}
eq-compat-in-eq-alt $a |- ( \imp ( \eq ph0 ph1 ) ( \eq ( \eq ph0 ph2 ) ( \eq ph1 ph2 ) ) ) $.
${ nonempty-floor-is-top.0 $e |- ( \ceil ph0 ) $.
   nonempty-floor-is-top $a |- ( \iff ( \eq ph0 ( \and ( \floor ph1 ) ph0 ) ) ( \floor ph1 ) ) $. $}
${ $d x y $.
   unit-sort-nonempty-alt $a |- ( \ceil ( \inh \unit-sort ) ) $. $}
${ kore-equals-to-eq.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equals-to-eq.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equals-to-eq.2 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-equals ph0 \unit-sort ph1 ph2 ) ) ) $.
   kore-equals-to-eq $a |- ( \imp th0 ( \eq ph1 ph2 ) ) $. $}
${ kore-equals-elim.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equals-elim.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equals-elim.2 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-equals ph0 \unit-sort ph1 ph2 ) ) ) $.
   kore-equals-elim.3 $e |- ( \imp th0 ph3 ) $.
   kore-equals-elim.4 $e #Substitution ph3 ph4 ph1 x $.
   kore-equals-elim.5 $e #Substitution ph5 ph4 ph2 x $.
   kore-equals-elim $a |- ( \imp th0 ph5 ) $. $}
${ kore-equals-elim-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-equals-elim-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-equals-elim-alt.2 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-equals ph0 \unit-sort ph1 ph2 ) ) ) $.
   kore-equals-elim-alt.3 $e |- ( \imp th0 ( \kore-valid ph6 ph3 ) ) $.
   kore-equals-elim-alt.4 $e #Substitution ( \kore-valid ph6 ph3 ) ph4 ph1 x $.
   kore-equals-elim-alt.5 $e #Substitution ( \kore-valid ph7 ph5 ) ph4 ph2 x $.
   kore-equals-elim-alt $a |- ( \imp th0 ( \kore-valid ph7 ph5 ) ) $. $}
kore-equals-reflexivity-aux $a |- ( \not ( \and ( \not ( \and ( \or ( \and ( \not ph2 ) ph1 ) ph2 ) ( \or ( \and ( \not ph2 ) ph1 ) ph2 ) ) ) ph1 ) ) $.
kore-equals-reflexivity $a |- ( \kore-valid ph0 ( \kore-equals ph1 ph0 ph2 ph2 ) ) $.
${ $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   kore-dup-and $a |- ( \kore-valid ph0 ( \kore-equals ph1 ph0 ( \kore-and ph1 ph2 ph2 ) ph2 ) ) $. $}
${ $d x y s0 $.
   $d y ph0 $.
   $d y ph1 $.
   kore-variable-functional $a |- ( \imp ( \in-sort x ph0 ) ( \kore-valid ph1 ( \kore-exists ph0 ph1 y ( \kore-equals ph0 ph1 y x ) ) ) ) $. $}
${ $d y x $.
   $d y ph0 $.
   $d y ph1 $.
   $d x ph2 $.
   kore-functional-lemma $a |- ( \imp ( \floor ph2 ) ( \imp ( \eq ( \and ( \exists x ph1 ) ph0 ) ph0 ) ( \eq ( \and ( \exists x ( \and ( \floor ph2 ) ph1 ) ) ph0 ) ph0 ) ) ) $. $}
${ $d x ph0 $.
   $d x ph1 $.
   kore-functional.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-functional.1 $e |- ( \imp th0 ( \kore-valid \unit-sort ( \kore-exists ph0 \unit-sort x ( \kore-equals ph0 \unit-sort x ph1 ) ) ) ) $.
   kore-functional $a |- ( \imp th0 ( \exists x ( \eq x ph1 ) ) ) $. $}
kore-ph-implies-ceil-ph $a |- ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-ceil ph0 ph0 ph1 ) ) ) $.
${ kore-floor-ph-implies-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-floor-ph-implies-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-floor ph0 ph0 ph1 ) ph1 ) ) ) $. $}
${ kore-exists-quantifier.0 $e #Substitution ph1 ph3 y x $.
   kore-exists-quantifier.1 $e #Fresh x ph2 $.
   kore-exists-quantifier $a |- ( \imp ( \in-sort y ph2 ) ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-exists ph2 ph0 x ph3 ) ) ) ) $. $}
${ kore-forall-prenex-implies-left.0 $e #Fresh x ph0 $.
   kore-forall-prenex-implies-left.1 $e #Fresh x ph1 $.
   kore-forall-prenex-implies-left $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ph1 ( \kore-forall ph3 ph0 x ph2 ) ) ( \kore-forall ph3 ph0 x ( \kore-implies ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-forall-prenex-implies-right.0 $e #Fresh x ph0 $.
   kore-forall-prenex-implies-right.1 $e #Fresh x ph1 $.
   kore-forall-prenex-implies-right $a |- ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-forall ph3 ph0 x ( \kore-implies ph0 ph1 ph2 ) ) ( \kore-implies ph0 ph1 ( \kore-forall ph3 ph0 x ph2 ) ) ) ) $. $}
${ $d x ph0 $.
   $d x th0 $.
   $d y x $.
   $d y ph0 $.
   $d y ph1 $.
   $d y ph2 $.
   kore-forall-not-to-exists.0 $e |- ( \is-predicate th0 ) $.
   kore-forall-not-to-exists.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-forall-not-to-exists.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-forall ph1 ph0 x ( \kore-not ph0 ph2 ) ) ) ) $.
   kore-forall-not-to-exists $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ( \kore-exists ph1 ph0 x ph2 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-next.0 $e |- ( \is-predicate th0 ) $.
   kore-implies-compat-in-kore-next.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-next.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-next.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-next-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-next-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-next-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-next-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) $. $}
${ kore-or-propagates-in-kore-next.0 $e |- ( \is-predicate th0 ) $.
   kore-or-propagates-in-kore-next.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-kore-next.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-kore-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-next ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) ) $. $}
${ kore-or-propagates-in-kore-next-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-kore-next-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-kore-next-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-next ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) ) $. $}
${ kore-prefixpoint.0 $e #Positive X ph2 $.
   kore-prefixpoint.1 $e #Substitution ph1 ph2 ( \mu X ph2 ) X $.
   kore-prefixpoint.2 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-mu ph0 X ph2 ) ) ) ) $. $}
${ kore-kt.0 $e #Positive X ph1 $.
   kore-kt.1 $e #Substitution ph3 ph1 ph2 X $.
   kore-kt.2 $e #Substitution ph4 ph1 ( \imp th0 ph2 ) X $.
   kore-kt.3 $e |- ( \is-predicate th0 ) $.
   kore-kt.4 $e |- ( \imp th0 ( \imp ph4 ph3 ) ) $.
   kore-kt.5 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-kt.6 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-kt.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph2 ) ) ) $.
   kore-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-mu ph0 X ph1 ) ph2 ) ) ) $. $}
${ kore-eventually-prefixpoint-lemma.0 $e #Notation ph2 ph3 $.
   kore-eventually-prefixpoint-lemma $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ph2 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph3 ) ) ph3 ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-sorting-alt $a |- ( \imp ( \in-sort ph1 ph0 ) ( \in-sort ( \mu X ( \kore-or ph0 ph1 ( \kore-next ph0 X ) ) ) ph0 ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-eventually-prefixpoint $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-eventually ph0 ph1 ) ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-prefixpoint-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-prefixpoint-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-eventually ph0 ph1 ) ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-kt-notation.0 $e #Notation ph1 ph2 $.
   kore-eventually-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph3 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   kore-eventually-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-eventually-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-kt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-eventually-kt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ph2 ) ) ) $.
   kore-eventually-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ph2 ) ) ) $. $}
${ kore-eventually-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-kt-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-eventually-kt-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ph2 ) ) ) $.
   kore-eventually-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ph2 ) ) ) $. $}
${ kore-ph-to-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-ph-to-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-next-eventually-ph-to-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-next-eventually-ph-to-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ( \kore-eventually ph0 ph1 ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-idempotency.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-idempotency $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ( \kore-eventually ph0 ph1 ) ) ( \kore-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-eventually.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ( \kore-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-or-propagates-in-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-eventually ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-eventually ph0 ph1 ) ( \kore-eventually ph0 ph2 ) ) ) ) ) $. $}
${ kore-weak-eventually-postfixpoint-notation.0 $e #Notation ph2 ph3 $.
   kore-weak-eventually-postfixpoint-notation $a #Notation ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph2 ( \kore-not ph0 ( \kore-not ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph2 ) ) ) ) ) ) ) ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-not ph0 ( \kore-not ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ph3 ) ) ) ) ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-weak-eventually-postfixpoint $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ) ) ) ) $. $}
${ kore-weak-eventually-postfixpoint-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-postfixpoint-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ) ) ) ) $. $}
${ kore-weak-eventually-kt-notation.0 $e #Notation ph2 ph3 $.
   kore-weak-eventually-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph2 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-not ph0 ( \kore-not ph0 ph1 ) ) ph3 ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   kore-weak-eventually-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-weak-eventually-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-kt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-weak-eventually-kt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ( \kore-next ph0 ph1 ) ) ) ) ) $.
   kore-weak-eventually-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-weak-eventually-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-kt-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-weak-eventually-kt-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-or ph0 ph2 ( \kore-next ph0 ph1 ) ) ) ) ) $.
   kore-weak-eventually-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-weak-eventually-prefixpoint.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ph1 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-eventually-to-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-eventually-to-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-eventually ph0 ph1 ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-next-weak-eventually-ph-to-weak-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-next-weak-eventually-ph-to-weak-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-next ph0 ( \kore-weak-eventually ph0 ph1 ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-ph-to-weak-eventually-ph.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-ph-to-weak-eventually-ph $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-weak-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-weak-eventually.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-weak-eventually ph0 ph2 ) ) ) ) $. $}
${ kore-weak-eventually-idempotency.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-idempotency $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ( \kore-weak-eventually ph0 ph1 ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-always-postfixpoint-notation.0 $e #Notation ph2 ph3 $.
   kore-always-postfixpoint-notation $a #Notation ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph2 ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ph2 ) ) ) ) ) ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ph3 ) ) ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   kore-always-postfixpoint $a |- ( \imp ( \in-sort ph1 ph0 ) ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ) ) ) ) $. $}
${ kore-always-postfixpoint-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-postfixpoint-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-and ph0 ph1 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ) ) ) ) $. $}
${ $d X ph0 $.
   $d X ph1 $.
   $d X ph2 $.
   kore-always-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-always-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-kt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-always-kt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ( \kore-all-path-next ph0 ph1 ) ) ) ) ) $.
   kore-always-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-always ph0 ph2 ) ) ) ) $. $}
${ kore-always-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-kt-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-always-kt-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-and ph0 ph2 ( \kore-all-path-next ph0 ph1 ) ) ) ) ) $.
   kore-always-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-always ph0 ph2 ) ) ) ) $. $}
${ kore-implies-compat-in-kore-always.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-implies-compat-in-kore-always.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-implies-compat-in-kore-always.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-implies-compat-in-kore-always $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-always ph0 ph2 ) ) ) ) $. $}
${ kore-always-elim.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-elim $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ph1 ) ) ) $. $}
${ kore-always-idempotency.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-idempotency $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ( \kore-always ph0 ph1 ) ) ( \kore-always ph0 ph1 ) ) ) ) $. $}
${ kore-always-dup.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-dup $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-always ph0 ( \kore-always ph0 ph1 ) ) ) ) ) $. $}
${ kore-well-founded-prefixpoint-notation.0 $e #Notation ph1 ph2 $.
   kore-well-founded-prefixpoint-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph1 ) ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph2 ) ph2 ) ) ) $. $}
${ $d X ph0 $.
   kore-well-founded-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-well-founded ph0 ) ) ( \kore-well-founded ph0 ) ) ) ) $. $}
${ kore-well-founded-kt-notation.0 $e #Notation ph2 ph3 $.
   kore-well-founded-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph1 ) ) ) $. $}
${ $d x X ph0 $.
   $d x X ph1 $.
   $d x th0 $.
   kore-well-founded-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-well-founded-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-kt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph1 ) ph1 ) ) ) $.
   kore-well-founded-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ph1 ) ) ) $. $}
${ kore-well-founded-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-kt-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ph1 ) ph1 ) ) ) $.
   kore-well-founded-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ph1 ) ) ) $. $}
${ kore-well-founded-alt-prefixpoint-notation.0 $e #Notation ph1 ph2 $.
   kore-well-founded-alt-prefixpoint-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph2 ) ) ph2 ) ) ) $. $}
${ $d X ph0 $.
   kore-well-founded-alt-prefixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ( \kore-well-founded-alt ph0 ) ) ) ( \kore-well-founded-alt ph0 ) ) ) ) $. $}
${ kore-well-founded-alt-kt-notation.0 $e #Notation ph2 ph3 $.
   kore-well-founded-alt-kt-notation $a #Notation ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph1 ) ) ) ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph1 ) ) ) $. $}
${ $d x X ph0 $.
   $d x X ph1 $.
   $d x th0 $.
   kore-well-founded-alt-kt.0 $e |- ( \is-predicate th0 ) $.
   kore-well-founded-alt-kt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-alt-kt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ph1 ) ) ) $.
   kore-well-founded-alt-kt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded-alt ph0 ) ph1 ) ) ) $. $}
${ kore-well-founded-alt-kt-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-well-founded-alt-kt-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-always ph0 ph1 ) ) ph1 ) ) ) $.
   kore-well-founded-alt-kt-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded-alt ph0 ) ph1 ) ) ) $. $}
kore-well-founded-alt-postfixpoint $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded-alt ph0 ) ( \kore-all-path-next ph0 ( \kore-always ph0 ( \kore-well-founded-alt ph0 ) ) ) ) ) ) $.
${ kore-all-path-next-and-next-propagate-lemma.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-all-path-next-and-next-propagate-lemma.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-all-path-next-and-next-propagate-lemma.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-all-path-next-and-next-propagate-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-or ph0 ( \kore-or ph0 ph1 ph3 ) ( \kore-not ph0 ph2 ) ) ( \kore-implies ph0 ( \kore-and ph0 ( \kore-not ph0 ph1 ) ph2 ) ph3 ) ) ) ) $. $}
${ kore-all-path-next-and-next-propagate.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-all-path-next-and-next-propagate.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-all-path-next-and-next-propagate $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-all-path-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ( \kore-next ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ kore-all-path-next-imp-to-next.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-all-path-next-imp-to-next.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-all-path-next-imp-to-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-all-path-next ph0 ( \kore-implies ph0 ph1 ph2 ) ) ( \kore-implies ph0 ( \kore-next ph0 ph1 ) ( \kore-next ph0 ph2 ) ) ) ) ) $. $}
${ kore-weak-eventually-to-wf-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-weak-eventually-to-wf-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-eventually ph0 ph1 ) ) ) ) ) $. $}
${ kore-wf-eventually-to-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-wf-eventually-to-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-eventually ph0 ph1 ) ) ( \kore-weak-eventually ph0 ph1 ) ) ) ) $. $}
${ kore-or-propagates-in-weak-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-or-propagates-in-weak-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-or-propagates-in-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-iff ph0 ( \kore-weak-eventually ph0 ( \kore-or ph0 ph1 ph2 ) ) ( \kore-or ph0 ( \kore-weak-eventually ph0 ph1 ) ( \kore-weak-eventually ph0 ph2 ) ) ) ) ) $. $}
${ kore-always-and-weak-eventually-to-eventually.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-always-and-weak-eventually-to-eventually.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-always-and-weak-eventually-to-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ( \kore-always ph0 ph1 ) ( \kore-weak-eventually ph0 ph2 ) ) ( \kore-weak-eventually ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ kore-rewrites-star-reflexivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-reflexivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph1 ) ) ) $. $}
${ kore-rewrites-star-union.0 $e |- ( \is-predicate th0 ) $.
   kore-rewrites-star-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-star-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-rewrites-star-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-rewrites-star-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-rewrites-star-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
${ kore-rewrites-plus-union.0 $e |- ( \is-predicate th0 ) $.
   kore-rewrites-plus-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-plus-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-plus-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-rewrites-plus-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-rewrites-plus-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-rewrites-plus-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
${ kore-rewrites-star-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-star-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-star-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-star-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-plus-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-plus-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-plus-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-plus-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-star-prune.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-prune.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-prune.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-star-prune.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-not ph0 ph2 ) ) ) $.
   kore-rewrites-star-prune.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ( \kore-or ph0 ( \kore-and ph0 ph2 ph3 ) ph4 ) ) ) ) $.
   kore-rewrites-star-prune $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph4 ) ) ) $. $}
${ kore-rewrites-star-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-star-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-rewrites-star-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph4 ) ) ) $.
   kore-rewrites-star-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-rewrites-plus-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-rewrites-plus-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-rewrites-plus-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph4 ) ) ) $.
   kore-rewrites-plus-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-rewrites-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-subsumption-rhs.0 $e |- ( \is-predicate th0 ) $.
   kore-rewrites-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-subsumption-rhs.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-subsumption-rhs.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph3 ) ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   kore-predicate-propagate-in-next.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-predicate-propagate-in-next.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-predicate-propagate-in-next.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-predicate-propagate-in-next $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ( \kore-next ph0 ph2 ) ) ( \kore-next ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ $d x th0 $.
   $d x ph0 $.
   $d x ph1 $.
   $d x ph2 $.
   kore-predicate-propagate-in-weak-eventually.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-predicate-propagate-in-weak-eventually.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-predicate-propagate-in-weak-eventually.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-predicate-propagate-in-weak-eventually $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-and ph0 ph1 ( \kore-weak-eventually ph0 ph2 ) ) ( \kore-weak-eventually ph0 ( \kore-and ph0 ph1 ph2 ) ) ) ) ) $. $}
${ kore-rewrites-constraint-lemma.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-rewrites-constraint-lemma.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-constraint-lemma.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-constraint-lemma.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-constraint-lemma.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $.
   kore-rewrites-constraint-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-constraint-lemma.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-one-path-reaches-plus-constraint-lemma.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) $.
   kore-one-path-reaches-plus-constraint-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-constraint-lemma-alt.0 $e |- ( \kore-is-predicate ph0 ph2 ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph3 ) ( \kore-and ph0 ph4 ph5 ) ) ) ) ) $.
   kore-one-path-reaches-star-constraint-lemma-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph3 ) ( \kore-and ph0 ( \kore-and ph0 ph2 ph4 ) ph5 ) ) ) ) ) $. $}
${ kore-one-path-reaches-plus-constraint-lemma-alt.0 $e |- ( \kore-is-predicate ph0 ph1 ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ph3 ) ) ) ) $.
   kore-one-path-reaches-plus-constraint-lemma-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph2 ) ( \kore-and ph0 ph1 ph3 ) ) ) ) ) $. $}
${ kore-rewrites-star-intro.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-intro.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-intro.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-rewrites-star-intro-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-intro-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-intro-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-rewrites-plus-intro.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-plus-intro.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-intro.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $. $}
${ kore-rewrites-star-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-star-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-star-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-star-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-star-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-star-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-rewrites-plus-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-rewrites-plus-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-rewrites-plus-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-rewrites-plus-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-rewrites-plus-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph2 ph3 ) ) ) $.
   kore-rewrites-plus-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-intro.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-star ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-intro-alt.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro-alt.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-intro-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-intro-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro-alt2.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-intro-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-intro-alt3.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-intro-alt3.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) ) $.
   kore-one-path-reaches-star-intro-alt3 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-intro.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-intro.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-rewrites-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-intro $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $. $}
${ kore-one-path-reaches-star-transitivity.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-transitivity.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-transitivity.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-plus-transitivity.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-transitivity.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-transitivity.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-transitivity.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-reflexivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-reflexivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph1 ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-lhs.0 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-rhs.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-lhs-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-star-subsumption-lhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-lhs-alt.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ph2 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-plus-subsumption-lhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-subsumption-rhs-alt.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-plus-subsumption-rhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-plus ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-rhs-alt.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt.2 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ph2 ) ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph2 ph3 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-subsumption-rhs-alt2.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.2 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph3 ph5 ) ) ) $.
   kore-one-path-reaches-star-subsumption-rhs-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph4 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph2 ph5 ) ) ) ) ) $. $}
${ kore-one-path-reaches-star-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-star-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) $.
   kore-one-path-reaches-star-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-plus-branch.0 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-branch.1 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-branch.2 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-plus-branch.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ( \kore-or ph0 ph2 ph3 ) ) ) ) $.
   kore-one-path-reaches-plus-branch.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) $.
   kore-one-path-reaches-plus-branch $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph1 ( \kore-or ph0 ph4 ph3 ) ) ) ) $. $}
${ kore-one-path-reaches-star-union.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-star-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-one-path-reaches-star-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-one-path-reaches-star-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
${ kore-one-path-reaches-star-union-alt.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-star-union-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ph1 ph3 ) ) ) ) $.
   kore-one-path-reaches-star-union-alt.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) ) $.
   kore-one-path-reaches-star-union-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ( \kore-or ph0 ph1 ph2 ) ( \kore-or ph0 ph3 ph4 ) ) ) ) ) $. $}
${ kore-one-path-reaches-star-union-alt2.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-star-union-alt2.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.6 $e |- ( \imp th0 ( \in-sort ph6 ph0 ) ) $.
   kore-one-path-reaches-star-union-alt2.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph1 ph6 ) ph3 ) ) ) $.
   kore-one-path-reaches-star-union-alt2.8 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ph2 ph6 ) ph4 ) ) ) ) $.
   kore-one-path-reaches-star-union-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph5 ( \kore-one-path-reaches-star ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph6 ) ( \kore-or ph0 ph3 ph4 ) ) ) ) ) $. $}
${ kore-one-path-reaches-plus-union.0 $e |- ( \is-predicate th0 ) $.
   kore-one-path-reaches-plus-union.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-one-path-reaches-plus-union.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-one-path-reaches-plus-union.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-one-path-reaches-plus-union.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-one-path-reaches-plus-union.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-one-path-reaches-plus-union.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph1 ph3 ) ph4 ) ) ) $.
   kore-one-path-reaches-plus-union.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ph2 ph3 ) ph5 ) ) ) $.
   kore-one-path-reaches-plus-union $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ( \kore-and ph0 ( \kore-or ph0 ph1 ph2 ) ph3 ) ( \kore-or ph0 ph4 ph5 ) ) ) ) $. $}
kore-well-founded-to-well-founded-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-well-founded-alt ph0 ) ) ) ) $.
${ kore-reachability-one-path-circularity-lemma.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-circularity-lemma.1 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ph1 ) ) ) $.
   kore-reachability-one-path-circularity-lemma $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ph1 ) ) ) $. $}
${ kore-reachability-permits-non-wf.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-permits-non-wf.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-permits-non-wf $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-implies ph0 ( \kore-well-founded ph0 ) ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ( \kore-one-path-reaches-plus ph0 ph1 ph2 ) ) ) ) $. $}
${ kore-reachability-one-path-transitivity.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-transitivity.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-transitivity.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-transitivity.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-reachability-one-path-transitivity.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) ) $.
   kore-reachability-one-path-transitivity.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-transitivity $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-reachability-one-path-transitivity-alt.0 $e |- ( \is-predicate th0 ) $.
   kore-reachability-one-path-transitivity-alt.1 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.2 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.3 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.4 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.5 $e |- ( \imp th0 ( \in-sort ph5 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt.6 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ( \kore-or ph0 ph3 ph5 ) ) ) ) ) $.
   kore-reachability-one-path-transitivity-alt.7 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-transitivity-alt $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ( \kore-or ph0 ph4 ph5 ) ) ) ) ) $. $}
${ kore-reachability-one-path-transitivity-alt2.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.3 $e |- ( \imp th0 ( \in-sort ph4 ph0 ) ) $.
   kore-reachability-one-path-transitivity-alt2.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-one-path-reaches-plus ph0 ph2 ph3 ) ) ) $.
   kore-reachability-one-path-transitivity-alt2.5 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-always ph0 ph1 ) ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-transitivity-alt2 $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ( \kore-circularity ph0 ph1 ) ( \kore-one-path-reaches-plus ph0 ph2 ph4 ) ) ) ) $. $}
${ kore-reachability-one-path-case-star.0 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   kore-reachability-one-path-case-star.1 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   kore-reachability-one-path-case-star.2 $e |- ( \imp th0 ( \in-sort ph3 ph0 ) ) $.
   kore-reachability-one-path-case-star.3 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ph2 ph4 ) ) ) ) $.
   kore-reachability-one-path-case-star.4 $e |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ph3 ph4 ) ) ) ) $.
   kore-reachability-one-path-case-star $a |- ( \imp th0 ( \kore-valid ph0 ( \kore-implies ph0 ph1 ( \kore-one-path-reaches-star ph0 ( \kore-or ph0 ph2 ph3 ) ph4 ) ) ) ) $. $}
${ $d X xX $.
   $d X ph0 $.
   $d X ph1 $.
   fresh-in-kore-always.0 $e #Fresh xX ph0 $.
   fresh-in-kore-always.1 $e #Fresh xX ph1 $.
   fresh-in-kore-always $p #Fresh xX ( \kore-always ph0 ph1 ) $= ( X-is-element-var set-var-is-var kore-not-is-pattern not-is-pattern var-is-pattern kore-all-path-next-is-pattern or-is-pattern bot-is-pattern imp-is-pattern notation-reflexivity notation-transitivity and-is-pattern kore-next-is-pattern kore-and-is-pattern positive-disjoint negative-disjoint notation-negative not-is-sugar negative-in-kore-not positive-in-kore-not positive-in-imp notation-positive kore-top-is-pattern or-is-sugar and-is-sugar kore-all-path-next-is-sugar kore-and-is-sugar positive-in-var positive-in-kore-next negative-in-imp inh-is-pattern notation-fresh kore-mu-is-pattern mu-is-pattern symbol-is-pattern fresh-disjoint fresh-in-imp inhabitant-is-symbol app-is-pattern fresh-in-app kore-next-is-symbol inh-is-sugar kore-top-is-sugar kore-not-is-sugar kore-always-is-pattern kore-next-is-sugar fresh-in-mu kore-mu-is-sugar kore-always-is-sugar ) AAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURHABVJCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAUHQAAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURHCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAUHQCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILICAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILMCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIIAUHINAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIIAUHICAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIICAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIMCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIICAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIMCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURICAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURMCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSAUPQAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILIAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSAUPQCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILICAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILMCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIIAUPINAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIIAUPICAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIICAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIMCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSICAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSMCAABAAFGJHKSHFCABAAFGJHKSIAUHQAABAAFGJHKSHCABAAFGJHKSIIAUHILIABAAFGJHKSIAUHQCABAAFGJHKSIIAUHILMNABAAFGJHKSIIAUHILICABAAFGJHKSIIAUHILMCABAAFGJHKSIIIAUHINABAAFGJHKSIIAUHILCABAAFGJHKSIIIAUHICABAAFGJHKSIIMNABAAFGJHKSIIICABAAFGJHKSIIMCABAAFGJHKSIMNABAAFGJHKSIICABAAFGJHKSIMCABAAFGJHKSMNABAAFGJHKSICABAAFGJHKSMCBAAFGJHKQABAAFGJHKSCBIAAFGJHKILIBAAFGJHKQCBIAAFGJHKILMNBIAAFGJHKILICBIAAFGJHKILMCBIIAAFGJHKINBIAAFGJHKILCBIIAAFGJHKICBIMNBIICBIMCBMNBICBMCEMCVAVBBIBMNBMNBUCBMNOPUQMCVAVBBIIBIMNBIMNBIUCBIMNOPUQAAFGJHKMNAAFGJHKICAAFGJHKMCAAAAFGJHHRHAAFGJHKCAAAFGJHHRIAUHQAAAAFGJHHRHCAAAFGJHHRIIAUHILIAAAFGJHHRIAUHQCAAAFGJHHRIIAUHILMNAAAFGJHHRIIAUHILICAAAFGJHHRIIAUHILMCAAAFGJHHRIIIAUHINAAAFGJHHRIIAUHILCAAAFGJHHRIIIAUHICAAAFGJHHRIIMNAAAFGJHHRIIICAAAFGJHHRIIMCAAAFGJHHRIMNAAAFGJHHRIICAAAFGJHHRIMCAAAFGJHHRMNAAAFGJHHRICAAAFGJHHRMCVFUTAAFGJHHVDAAAFGJHHRCVFUTAAFGJHHCVFUTCVAAFGJHIAUHQAAFGJHHCAFGJHIIAUHILIAFGJHIAUHQCAFGJHIIAUHILMNAFGJHIIAUHILICAFGJHIIAUHILMCAFGJHIIIAUHINAFGJHIIAUHILCAFGJHIIIAUHICAFGJHIIMNAFGJHIIICAFGJHIIMCAFGJHIMNAFGJHIICAFGJHIMCAFGJHMNAFGJHICAFGJHMCFGJIAUHQAFGJHCFGJIIAUHILIFGJIAUHQCFGJIIAUHILMNFGJIIAUHILICFGJIIAUHILMCFGJIIIAUHINFGJIIAUHILCFGJIIIAUHICFGJIIICVAAUHMNAUHICAUHMCAUPAUHCVCUTAVDAUPCVCUTACVCUTCVADVEAUPVCUTAVDVCUTAVDAVGVCUTAVDOPUQAUHAUPAUPAVHAUPOPUQMCVAVBAUHIAUHMNAUHMNAUHUCAUHMNOPUQVBFGJIIAUHILFGJIIIAUHINFGJIIIAUHINFGJIIAUHIUIFGJIIIAUHINOPUQMCVAVBFGJIIAUHILIFGJIIAUHILMNFGJIIAUHILMNFGJIIAUHILUCFGJIIAUHILMNOPUQFGJIAUHQFGJIIAUHILIFGJIIAUHILIFGJIAUHUJFGJIIAUHILIOPUQAFGJHFGJIAUHQFGJIAUHQAFGJVIFGJIAUHQOPUQMCVAVBAFGJHIAFGJHMNAFGJHMNAFGJHUCAFGJHMNOPUQMCVAVBAFGJHIIAFGJHIMNAFGJHIMNAFGJHIUCAFGJHIMNOPUQMCVAVBAFGJHIIIAFGJHIIMNAFGJHIIMNAFGJHIIUCAFGJHIIMNOPUQAUHMNAUHICAUHMCAUPAUHCVCUTAVDAUPCVCUTACVCUTCVADVEAUPVCUTAVDVCUTAVDAVGVCUTAVDOPUQAUHAUPAUPAVHAUPOPUQMCVAVBAUHIAUHMNAUHMNAUHUCAUHMNOPUQVBAFGJHIIAUHILAFGJHIIIAUHINAFGJHIIIAUHINAFGJHIIAUHIUIAFGJHIIIAUHINOPUQMCVAVBAFGJHIIAUHILIAFGJHIIAUHILMNAFGJHIIAUHILMNAFGJHIIAUHILUCAFGJHIIAUHILMNOPUQAFGJHIAUHQAFGJHIIAUHILIAFGJHIIAUHILIAFGJHIAUHUJAFGJHIIAUHILIOPUQAAFGJHHAFGJHIAUHQAFGJHIAUHQAAFGJHVIAFGJHIAUHQOPUQVEAAAFGJHHRVFUTAAFGJHHVDVFUTAAFGJHHVDAAAFGJHHVKVFUTAAFGJHHVDOPUQMCVAVBAAAFGJHHRIAAAFGJHHRMNAAAFGJHHRMNAAAFGJHHRUCAAAFGJHHRMNOPUQMCVAVBAAAFGJHHRIIAAAFGJHHRIMNAAAFGJHHRIMNAAAFGJHHRIUCAAAFGJHHRIMNOPUQMCVAVBAAAFGJHHRIIIAAAFGJHHRIIMNAAAFGJHHRIIMNAAAFGJHHRIIUCAAAFGJHHRIIMNOPUQAUHMNAUHICAUHMCAUPAUHCVCUTAVDAUPCVCUTACVCUTCVADVEAUPVCUTAVDVCUTAVDAVGVCUTAVDOPUQAUHAUPAUPAVHAUPOPUQMCVAVBAUHIAUHMNAUHMNAUHUCAUHMNOPUQVBAAAFGJHHRIIAUHILAAAFGJHHRIIIAUHINAAAFGJHHRIIIAUHINAAAFGJHHRIIAUHIUIAAAFGJHHRIIIAUHINOPUQMCVAVBAAAFGJHHRIIAUHILIAAAFGJHHRIIAUHILMNAAAFGJHHRIIAUHILMNAAAFGJHHRIIAUHILUCAAAFGJHHRIIAUHILMNOPUQAAAFGJHHRIAUHQAAAFGJHHRIIAUHILIAAAFGJHHRIIAUHILIAAAFGJHHRIAUHUJAAAFGJHHRIIAUHILIOPUQAAAAFGJHHRHAAAFGJHHRIAUHQAAAFGJHHRIAUHQAAAAFGJHHRVIAAAFGJHHRIAUHQOPUQAAFGJHUKUQMCVAVBAAFGJHKUCUQVBBIAAFGJHKIUIUQMCVAVBBIAAFGJHKILUCUQBAAFGJHKUJUQABAAFGJHKULUQMCVAVBABAAFGJHKSIABAAFGJHKSMNABAAFGJHKSMNABAAFGJHKSUCABAAFGJHKSMNOPUQMCVAVBABAAFGJHKSIIABAAFGJHKSIMNABAAFGJHKSIMNABAAFGJHKSIUCABAAFGJHKSIMNOPUQMCVAVBABAAFGJHKSIIIABAAFGJHKSIIMNABAAFGJHKSIIMNABAAFGJHKSIIUCABAAFGJHKSIIMNOPUQAUHMNAUHICAUHMCAUPAUHCVCUTAVDAUPCVCUTACVCUTCVADVEAUPVCUTAVDVCUTAVDAVGVCUTAVDOPUQAUHAUPAUPAVHAUPOPUQMCVAVBAUHIAUHMNAUHMNAUHUCAUHMNOPUQVBABAAFGJHKSIIAUHILABAAFGJHKSIIIAUHINABAAFGJHKSIIIAUHINABAAFGJHKSIIAUHIUIABAAFGJHKSIIIAUHINOPUQMCVAVBABAAFGJHKSIIAUHILIABAAFGJHKSIIAUHILMNABAAFGJHKSIIAUHILMNABAAFGJHKSIIAUHILUCABAAFGJHKSIIAUHILMNOPUQABAAFGJHKSIAUHQABAAFGJHKSIIAUHILIABAAFGJHKSIIAUHILIABAAFGJHKSIAUHUJABAAFGJHKSIIAUHILIOPUQAABAAFGJHKSHABAAFGJHKSIAUHQABAAFGJHKSIAUHQAABAAFGJHKSVIABAAFGJHKSIAUHQOPUQVLMCVAVBAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSUCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSMNOPUQMCVAVBAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIIAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIUCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIMNOPUQAUPMNAUPICAUPMCVCUTAVDAUPCVCUTACVCUTCVADVEAUPVCUTAVDVCUTAVDAVGVCUTAVDOPUQMCVAVBAUPIAUPMNAUPMNAUPUCAUPMNOPUQVBAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIIAUPINAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIIAUPINAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPIUIAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIIAUPINOPUQMCVAVBAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILIAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILMNAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILUCAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILMNOPUQAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSAUPQAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILIAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILIAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSAUPUJAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSIAUPILIOPUQAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSAUPQAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSAUPQAAABAAFGJHKSHFVMAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEUSAUPQOPUQMCVAVBAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURUCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURMNOPUQMCVAVBAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIUCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIMNOPUQMCVAVBAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIUCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIMNOPUQAUHMNAUHICAUHMCAUPAUHCVCUTAVDAUPCVCUTACVCUTCVADVEAUPVCUTAVDVCUTAVDAVGVCUTAVDOPUQAUHAUPAUPAVHAUPOPUQMCVAVBAUHIAUHMNAUHMNAUHUCAUHMNOPUQVBAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIIAUHINAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIIAUHINAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHIUIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIIAUHINOPUQMCVAVBAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILMNAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILUCAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILMNOPUQAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAUHQAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAUHUJAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIIAUHILIOPUQAAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURHAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAUHQAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAUHQAAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURVIAAABAAFGJHKSHFAABAAFGJHKSFGAFGTBAAFGJHKQABAAFGJHKSFGBIAAFGJHKILIBAAFGJHKQFGBIAAFGJHKILMNBIAAFGJHKILIFGBIAAFGJHKILMFGBIIAAFGJHKINBIAAFGJHKILFGBIIAAFGJHKIFGBIIFGUAAAFGJHKMNAAFGJHKIFGAAFGJHKMFGAAAAFGJHHRHAAFGJHKFGAAAAFGJHHRFGAFGUAAAAFGJHHFGAFGTAAFGJHFGAFGTAFGJFGAFGUAFGFGUMUDUEUNUDAAFGJHKAAAAFGJHHRHAAAAFGJHHRHAAFGJHUKAAAAFGJHHRHOPUBMFGTUFAAFGJHKIAAFGJHKMNAAFGJHKMNAAFGJHKUCAAFGJHKMNOPUGUFBIAAFGJHKILBIIAAFGJHKINBIIAAFGJHKINBIAAFGJHKIUIBIIAAFGJHKINOPUGMFGUAUOBIAAFGJHKILIBIAAFGJHKILMNBIAAFGJHKILMNBIAAFGJHKILUCBIAAFGJHKILMNOPUBBAAFGJHKQBIAAFGJHKILIBIAAFGJHKILIBAAFGJHKUJBIAAFGJHKILIOPUBABAAFGJHKSBAAFGJHKQBAAFGJHKQABAAFGJHKULBAAFGJHKQOPUBUEURIAUHQOPUQABFVNUQ $. $}
${ $d X xX $.
   $d X ph0 $.
   $d X ph1 $.
   fresh-in-kore-circularity.0 $e #Fresh xX ph0 $.
   fresh-in-kore-circularity.1 $e #Fresh xX ph1 $.
   fresh-in-kore-circularity $p #Fresh xX ( \kore-circularity ph0 ph1 ) $= ( not-is-pattern kore-always-is-pattern kore-not-is-pattern kore-top-is-pattern kore-next-is-pattern bot-is-pattern imp-is-pattern or-is-pattern notation-reflexivity notation-transitivity notation-fresh symbol-is-pattern fresh-disjoint and-is-pattern app-is-pattern fresh-in-imp inh-is-pattern inhabitant-is-symbol not-is-sugar kore-all-path-next-is-pattern kore-next-is-symbol fresh-in-app kore-circularity-is-pattern inh-is-sugar kore-top-is-sugar or-is-sugar and-is-sugar kore-not-is-sugar fresh-in-kore-always kore-next-is-sugar kore-all-path-next-is-sugar kore-circularity-is-sugar ) AABGUEABUHCAAAABGHJHAABGUECAAABGHJFAISAAAABGHJHCAAABGHJFFAIFMFAAABGHJFAISCAAABGHJFFAIFMKLAAABGHJFFAIFMFCAAABGHJFFAIFMKCAAABGHJFFFAIFLAAABGHJFFAIFMCAAABGHJFFFAIFCAAABGHJFFKLAAABGHJFFFCAAABGHJFFKCAAABGHJFKLAAABGHJFFCAAABGHJFKCAAABGHJKLAAABGHJFCAAABGHJKCUFQAABGHTAAABGHJCUFQAABGHCUFQCRABGFAISAABGHCABGFFAIFMFABGFAISCABGFFAIFMKLABGFFAIFMFCABGFFAIFMKCABGFFFAIFLABGFFAIFMCABGFFFAIFCABGFFKLABGFFFCABGFFKCABGFKLABGFFCABGFKCABGKLABGFCABGKCABCDEUNKCRUAABGFABGKLABGKLABGUDABGKLNOPKCRUAABGFFABGFKLABGFKLABGFUDABGFKLNOPKCRUAABGFFFABGFFKLABGFFKLABGFFUDABGFFKLNOPAIKLAIFCAIKCAUBAICUCQATAUBCUCQACUCQCRDUGAUBUCQATUCQATAUIUCQATNOPAIAUBAUBAUJAUBNOPKCRUAAIFAIKLAIKLAIUDAIKLNOPUAABGFFAIFMABGFFFAIFLABGFFFAIFLABGFFAIFUKABGFFFAIFLNOPKCRUAABGFFAIFMFABGFFAIFMKLABGFFAIFMKLABGFFAIFMUDABGFFAIFMKLNOPABGFAISABGFFAIFMFABGFFAIFMFABGFAIULABGFFAIFMFNOPAABGHABGFAISABGFAISAABGUMABGFAISNOPUGAAABGHJUFQAABGHTUFQAABGHTAAABGHUOUFQAABGHTNOPKCRUAAAABGHJFAAABGHJKLAAABGHJKLAAABGHJUDAAABGHJKLNOPKCRUAAAABGHJFFAAABGHJFKLAAABGHJFKLAAABGHJFUDAAABGHJFKLNOPKCRUAAAABGHJFFFAAABGHJFFKLAAABGHJFFKLAAABGHJFFUDAAABGHJFFKLNOPAIKLAIFCAIKCAUBAICUCQATAUBCUCQACUCQCRDUGAUBUCQATUCQATAUIUCQATNOPAIAUBAUBAUJAUBNOPKCRUAAIFAIKLAIKLAIUDAIKLNOPUAAAABGHJFFAIFMAAABGHJFFFAIFLAAABGHJFFFAIFLAAABGHJFFAIFUKAAABGHJFFFAIFLNOPKCRUAAAABGHJFFAIFMFAAABGHJFFAIFMKLAAABGHJFFAIFMKLAAABGHJFFAIFMUDAAABGHJFFAIFMKLNOPAAABGHJFAISAAABGHJFFAIFMFAAABGHJFFAIFMFAAABGHJFAIULAAABGHJFFAIFMFNOPAAAABGHJHAAABGHJFAISAAABGHJFAISAAAABGHJUMAAABGHJFAISNOPAABGUEAAAABGHJHAAAABGHJHAABGUPAAAABGHJHNOPABUHAABGUEAABGUEABUQAABGUENOP $. $}
${ $d x ph1 $.
   disjointness-exists.0 $e |- ( \not ( \and ph1 ( \sorted-exists x ph2 ph3 ) ) ) $.
   disjointness-exists $p |- ( \imp ( \in-sort x ph2 ) ( \not ( \and ph1 ph3 ) ) ) $= ( not-is-pattern and-is-pattern element-var-is-var var-is-pattern in-sort-is-pattern or-is-pattern imp-is-pattern bot-is-pattern iff-reflexivity rule-iff-transitivity rule-iff-compat-in-and and-associativity exists-is-pattern sorted-exists-is-pattern and-commutativity rule-iff-symmetry rule-imp-transitivity notation-reflexivity notation-transitivity rule-iff-elim-left notation-imp not-is-sugar forall-is-pattern rule-iff-compat-in-or notation-proof sorted-forall-is-pattern notation-symmetry lemma-imp-compat-in-exists and-idempotency and-elim-left-sugar rule-imp-compat-in-and proof-rule-mp iff-is-pattern and-is-sugar or-is-sugar sorted-exists-is-sugar rule-iff-compat-in-not de-morgan-and resolution-2 sorted-forall-to-sorted-exists sorted-forall-is-sugar notation-iff rule-iff-elim-right and-elim-left and-elim-right dn-elim-sugar rule-and-intro-alt2-sugar rule-contrapositive contradiction imp-to-or de-morgan-or double-negation or-commutativity resolution-1 and-bot fresh-disjoint prenex-exists-and-right notation-and lemma-forall-elim ) DHIBJACGFLDBACGFFDSFDHIBJACGFLDUHDHIBJACGFLDUHBACGFFDSFBACGFDUKBACGFFDSFURDHIBJACGFLDUHBACGFFDSFURBACGFDVEDHIBJACGFLDUHBACGFFDSFBACGFDUKBACGFFDSFDHIBJACGFLDUHDHIBJACGFLDUHBACGFDUKDHIBJACGFLDUHUCBACGFDUKDHIBJACGFLDUHBACGFDVFULUDBACGFFDSFUCVGUJVHDHIBJACGGDRMLBACGFFDSFDHIBJACGGDRMLBACGFFDSMLLDHIBJACGGDRMLBACGFFDSFLBACGFFDSDHIBJACGGDRDHIBJACGFFGDRDHIBJACGGDRLBACGFFDSDHIBJACGGDRLDHIBJACGFFGDHIBJACGGDDHIBJACGFFGDHIBJACGDHIBJMLMLACGFFMLLMLDHIBJLDHIBJACGFFGDHIBJLDHIBJACGFFVIDHIBJACGFFGDHIBJDHIBJMLMLACGFFMLLMLDHIBJDHIBJACGFFGDHIBJFACGFFFKMLDHIBJMLMLACGFFMLLMLDHIBJACGFFGDHIBJFACGFFFKFDHIBJFACGFFFKMLDHIBJACGFFUSDHIBJFACGFFFKUGUDDHIBJFACGFFFKMDHIBJMLMLACGFFMLLMDHIBJFACGFFFKDHIBJFFACGFFFLDHIBJMLMLACGFFMLLDHIBJFACGFFFUTDHIBJFFACGFFFDHIBJMLMLACGFFMLDHIBJFFDHIBJFMLDHIBJMLMLDHIBJFUGDHIBJFMDHIBJMLMDHIBJFDHIBJMLDHIBJMLDHIBJUGDHIBJMLUCUDMUCUFUDACGFFFACGFFMLACGFFMLACGFFUGACGFFMLUCUDUFUDMUCUFUDDHIBJUCUFUJDHIBJACGFFGACGFFACGDHIBJMLMLACGFFMLLMLACGFFLDHIBJACGFFGACGFFLDHIBJACGFFVJDHIBJACGFFGACGFFDHIBJMLMLACGFFMLLMLACGFFDHIBJACGFFGDHIBJFACGFFFKMLDHIBJMLMLACGFFMLLMLDHIBJACGFFGDHIBJFACGFFFKFDHIBJFACGFFFKMLDHIBJACGFFUSDHIBJFACGFFFKUGUDDHIBJFACGFFFKMDHIBJMLMLACGFFMLLMDHIBJFACGFFFKDHIBJFFACGFFFLDHIBJMLMLACGFFMLLDHIBJFACGFFFUTDHIBJFFACGFFFDHIBJMLMLACGFFMLDHIBJFFDHIBJFMLDHIBJMLMLDHIBJFUGDHIBJFMDHIBJMLMDHIBJFDHIBJMLDHIBJMLDHIBJUGDHIBJMLUCUDMUCUFUDACGFFFACGFFMLACGFFMLACGFFUGACGFFMLUCUDUFUDMUCUFUDACGFFUCUFUJACGVKUBVLUMBACGFFDSDHIBJACGGDRDHIBJACGFFGDRDHIBJACGGDRBACGFFDSDHIBJACGFFGDRDHIBJACGFFGDRBACGFFDVADHIBJACGFFGDRUCUDDHIBJACGGDRUCUFUJVMDHIBJACGGDRMLBACGFFDSFDHIBJACGGDRMLBACGFFDSMLDHIBJACGGDRMLUCBACGFFDSFBACGFFDSMLBACGFFDSMLBACGFFDSUGBACGFFDSMLUCUDUFUJDHIBJACGGDRADHIBJCGGDRMDHIBJACGGADHIBJCGGDDHIBJACGGADHIBJCGGLFMLDHIBJACGGADHIBJCGGLDHIBJACGGADHIBJCGGLVNDHIBJACGGADHIBJCGGLFAFDHIBJFCFKKDHIBJACGGGMDHIBJACGGADHIBJCGGLFAFDHIBJFCFKKDHIBJACGGGDHIBJACGGADHIBJCGGLFCADHIBJAFDHIBJFCFKKGGGAFDHIBJFCFKKDHIBJACGGGDHIBJACGGADHIBJCGGLFDHIBJACGGFADHIBJCGGKFCADHIBJAFDHIBJFCFKKGGGDHIBJACGGADHIBJCGGLDHIBJACGGFADHIBJCGGKDHIBJACGGADHIBJCGGLDHIBJACGGFADHIBJCGGKDHIBJACGGFADHIBJCGGKDHIBJACGGADHIBJCGGVODHIBJACGGFDHIBJACGGFADHIBJCGGADHIBJCGGDHIBJACGGDHIBJACGGDHIBJDHIBJACGACGDHIBJNAACCANCNPPVBAADHIBJCGDHIBJCGANDHIBJDHIBJCCDHIBJNCNPPUIOVBDHIBJACGGFADHIBJCGGKFDHIBJACGGFFADHIBJCGGFGCADHIBJAFDHIBJFCFKKGGGDHIBJACGGFADHIBJCGGVPDHIBJACGGFFADHIBJCGGFGDHIBJACGGAFDHIBJFCFKKGCADHIBJAFDHIBJFCFKKGGGDHIBJACGGFFDHIBJACGGADHIBJCGGFAFDHIBJFCFKKDHIBJACGGFFDHIBJACGGDHIBJACGGDHIBJACGGVQDHIBJDHIBJACGACGDHIBJNAACCANCNPPOADHIBJCGGFAFDHIBJCGFKAFDHIBJFCFKKADHIBJCGVCAFDHIBJCGFKAFDHIBJFCFKKAFDHIBJFCFKKAFAFDHIBJCGFDHIBJFCFKAFNDHIBJCGFDHIBJFCFKDHIBJFCFKDHIBJCVCDHIBJFCFKDHIBJFCFKDHIBJFCFKDHIBJFDHIBJFCFCFDHIBJFNCFNUIDHIBJFDHIBJFCFCFDHIBJFNCFNUIOOUIAFDHIBJFCFKKNOOPDHIBJACGGAFDHIBJFCFKKGCAGDHIBJAFDHIBJFCFKKGGCADHIBJAFDHIBJFCFKKGGGDHIBJACGGAFDHIBJFCFKKGCAGDHIBJGAFDHIBJFCFKKGCAGDHIBJAFDHIBJFCFKKGGDHIBJACGGCAGDHIBJGAFDHIBJFCFKKAFDHIBJFCFKKDHIBJACGGDHIBJCAGGCAGDHIBJGDHIBJDHIBJACGCAGDHIBJNACGACGCAGAACCANCNPACTOPDHIBJCAGTOAFDHIBJFCFKKNPCAGDHIBJAFDHIBJFCFKKQOCADHIBJAFDHIBJFCFKKGQOOOOCADHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGGGAFDHIBJFCFKKDHIBJACGGGCADHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGGGNCADHIBJAFDHIBJFCFKKGGGNOCADHIBJAFDHIBJFCFKKGGGACDHIBJAFDHIBJFCFKKGGGAFDHIBJFCFKKDHIBJACGGGCADHIBJAFDHIBJFCFKKGGGACDHIBJAFDHIBJFCFKKGGGACDHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGGGACGDHIBJAFDHIBJFCFKKGGACDHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGGGCAGDHIBJAFDHIBJFCFKKGGACGDHIBJAFDHIBJFCFKKGGCADHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGGGCAGDHIBJAFDHIBJFCFKKGGCADHIBJAFDHIBJFCFKKGGGNCAGDHIBJAFDHIBJFCFKKGGCADHIBJAFDHIBJFCFKKGGGCADHIBJAFDHIBJFCFKKGQUAOCAGACGDHIBJAFDHIBJFCFKKGDHIBJAFDHIBJFCFKKGCATDHIBJAFDHIBJFCFKKGNPOACDHIBJAFDHIBJFCFKKGQOAACDHIBJAFDHIBJFCFKKGGCDHIBJAFDHIBJFCFKKGGANCDHIBJAFDHIBJFCFKKGGNPOACDHIBJAFDHIBJFCFKKGGGDHIBJACAFDHIBJFCFKKGGGAFDHIBJFCFKKDHIBJACGGGACDHIBJAFDHIBJFCFKKGGGDHIBJACAFDHIBJFCFKKGGGDHIBJACAFDHIBJFCFKKGGGACDHIBJAFDHIBJFCFKKGGGDHIBJAGCAFDHIBJFCFKKGGDHIBJACAFDHIBJFCFKKGGGACDHIBJAFDHIBJFCFKKGGGADHIBJGCAFDHIBJFCFKKGGDHIBJAGCAFDHIBJFCFKKGGACDHIBJAFDHIBJFCFKKGGGADHIBJCAFDHIBJFCFKKGGGADHIBJGCAFDHIBJFCFKKGGAACDHIBJAFDHIBJFCFKKGGDHIBJCAFDHIBJFCFKKGGANCDHIBJAFDHIBJFCFKKGGDHIBJCGAFDHIBJFCFKKGDHIBJCAFDHIBJFCFKKGGCDHIBJAFDHIBJFCFKKGGCDHIBJGAFDHIBJFCFKKGDHIBJCGAFDHIBJFCFKKGCDHIBJAFDHIBJFCFKKGGCDHIBJAFDHIBJFCFKKGGCDHIBJGAFDHIBJFCFKKGCDHIBJAFDHIBJFCFKKGGNCDHIBJGAFDHIBJFCFKKGCDHIBJAFDHIBJFCFKKGGCDHIBJAFDHIBJFCFKKQUAOCDHIBJGDHIBJCGAFDHIBJFCFKKAFDHIBJFCFKKCDHIBJTAFDHIBJFCFKKNPODHIBJCAFDHIBJFCFKKQOPADHIBJGCAFDHIBJFCFKKGGADHIBJCAFDHIBJFCFKKGGGADHIBJCAFDHIBJFCFKKGQUAOADHIBJGDHIBJAGCAFDHIBJFCFKKGCAFDHIBJFCFKKGADHIBJTCAFDHIBJFCFKKGNPODHIBJACAFDHIBJFCFKKGQODHIBJDHIBJACAFDHIBJFCFKKGGACAFDHIBJFCFKKGGDHIBJNACAFDHIBJFCFKKGGNPODHIBJACAFDHIBJFCFKKGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGDHIBJACAFDHIBJFCFKKGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGDHIBJACAFDHIBJFCFKKGGGAFDHIBJFCFKKDHIBJGACGGAFDHIBJFCFKKDHIBJACGGGDHIBJACAFDHIBJFCFKKGGGDHIBJAFDHIBJFCFKKGACGGAFDHIBJFCFKKDHIBJGACGGDHIBJACAFDHIBJFCFKKGGGDHIBJAFDHIBJFCFKKACGGGDHIBJAFDHIBJFCFKKGACGGDHIBJDHIBJACAFDHIBJFCFKKGGAFDHIBJFCFKKACGGDHIBJNACAFDHIBJFCFKKGGAFDHIBJFCFKKAGCGAFDHIBJFCFKKACGGACAFDHIBJFCFKKGGAAFDHIBJFCFKKGCGAFDHIBJFCFKKAGCGACAFDHIBJFCFKKGGAAFDHIBJFCFKKCGGAAFDHIBJFCFKKGCGAACAFDHIBJFCFKKGAFDHIBJFCFKKCGANCAFDHIBJFCFKKTPAAFDHIBJFCFKKGCGAAFDHIBJFCFKKCGGAAFDHIBJFCFKKCQUAOAAFDHIBJFCFKKGAFDHIBJFCFKKAGCCAAFDHIBJFCFKKTCNPOAFDHIBJFCFKKACQOPDHIBJAFDHIBJFCFKKGACGGDHIBJAFDHIBJFCFKKACGGGDHIBJAFDHIBJFCFKKACGQUAODHIBJAFDHIBJFCFKKGAFDHIBJFCFKKDHIBJGACGACGDHIBJAFDHIBJFCFKKTAACCANCNPPOAFDHIBJFCFKKDHIBJACGQOAFDHIBJFCFKKAFDHIBJFCFKKDHIBJACGGDHIBJACGGAFDHIBJFCFKKNDHIBJDHIBJACGACGDHIBJNAACCANCNPPPOAFDHIBJFCFKKAFDHIBJFCFKKDHIBJACGGDHIBJACGGAFDHIBJFCFKKNDHIBJDHIBJACGACGDHIBJNAACCANCNPPPOOOOOUEAFDHIBJFCFKKDHIBJACGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGMAFDHIBJFCFKKDHIBJACGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGUNUAUEAFDHIBJFCFKKDHIBJACGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKAGDHIBJCGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKAGDHIBJCGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKADHIBJCGGGAFDHIBJFCFKKAGDHIBJCGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKADHIBJCGGGAFDHIBJFCFKKADHIBJCGGGAFDHIBJFCFKKDHIBJACGGGAAFDHIBJFCFKKDHIBJCGGGAFDHIBJFCFKKADHIBJCGGGAFDHIBJFCFKKDHIBJACGGGAAFDHIBJFCFKKDHIBJCGGGAAFDHIBJFCFKKDHIBJCGGGAFDHIBJFCFKKDHIBJACGGGAAFDHIBJFCFKKGDHIBJCGGAAFDHIBJFCFKKDHIBJCGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKAGDHIBJCGGAAFDHIBJFCFKKGDHIBJCGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKADHIBJCGGGAFDHIBJFCFKKAGDHIBJCGGAFDHIBJFCFKKAFDHIBJFCFKKDHIBJACGGADHIBJCGGAFDHIBJFCFKKNDHIBJACGGADHIBJGCGADHIBJCGGDHIBJACGGDHIBJAGCGADHIBJGCGDHIBJACGGDHIBJACGGDHIBJAGCGDHIBJDHIBJACGACGDHIBJNAACCANCNPPDHIBJAGCGDHIBJACGGDHIBJACQUAODHIBJAGADHIBJGCCDHIBJATCNPOADHIBJCQOPAFDHIBJFCFKKAGDHIBJCGGAFDHIBJFCFKKADHIBJCGGGAFDHIBJFCFKKADHIBJCGQUAOAFDHIBJFCFKKAGAAFDHIBJFCFKKGDHIBJCGDHIBJCGAFDHIBJFCFKKATDHIBJDHIBJCCDHIBJNCNPPOAAFDHIBJFCFKKDHIBJCGQOAAAFDHIBJFCFKKDHIBJCGGAFDHIBJFCFKKDHIBJCGGANAFDHIBJFCFKKDHIBJCGGNPOAAFDHIBJFCFKKDHIBJCGGGAFDHIBJFCFKKAGDHIBJCGGAFDHIBJFCFKKADHIBJCGGGAAFDHIBJFCFKKDHIBJCGGGAAFDHIBJFCFKKGDHIBJCGGAFDHIBJFCFKKAGDHIBJCGGAAFDHIBJFCFKKDHIBJCGGGAAFDHIBJFCFKKDHIBJCGGGAAFDHIBJFCFKKGDHIBJCGGAAAFDHIBJFCFKKDHIBJCGGAFDHIBJFCFKKDHIBJCGGANAFDHIBJFCFKKDHIBJCGGNPAAFDHIBJFCFKKGDHIBJCGGAAFDHIBJFCFKKDHIBJCGGGAAFDHIBJFCFKKDHIBJCGQUAOAAFDHIBJFCFKKGAFDHIBJFCFKKAGDHIBJCGDHIBJCGAAFDHIBJFCFKKTDHIBJDHIBJCCDHIBJNCNPPOAFDHIBJFCFKKADHIBJCGQOOAFDHIBJFCFKKAFDHIBJFCFKKADHIBJCGGADHIBJCGGAFDHIBJFCFKKNAADHIBJCGDHIBJCGANDHIBJDHIBJCCDHIBJNCNPPPOAFDHIBJFCFKKAGDHIBJCGGAFDHIBJFCFKKADHIBJCGGGAFDHIBJFCFKKADHIBJCGQUAOUEAFDHIBJFCFKKAGDHIBJCGGAFDHIBJFCFKKAGDHIBJFCFKAFDHIBJFCFKKAGDHIBJCGUOAFDHIBJFCFKKAGDHIBJFCFKDHIBJFCFKADHIBJFCFKVDDHIBJFCFKDHIBJFCFKDHIBJFDHIBJFCFCFDHIBJFNCFNUIUEUBUBUBAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKAFDHIBJFCFKKDHIBJACGGDHIBJACGGAFDHIBJFCFKKNDHIBJDHIBJACGACGDHIBJNAACCANCNPPPUEUPUBDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGUNUAUEDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGCFDHIBJFKCGAFDHIBJFCFKKDHIBJAGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGCFDHIBJFKCGAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGCFDHIBJFKCAFDHIBJFCFKKDHIBJAGGGGCFDHIBJFKCGAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKCAFDHIBJFCFKKDHIBJAGGGGCFDHIBJFKCAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKCAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGCDHIBJFCFKGAFDHIBJFCFKKDHIBJAGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKCGAFDHIBJFCFKKDHIBJAGGGCDHIBJFCFKGAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKCAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKCGAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGCAFDHIBJFCFKKDHIBJAGGGDHIBJFDHIBJFCFCFDHIBJFNCFNUIAFDHIBJFCFKKDHIBJACGGGCAFDHIBJFCFKKGDHIBJAGGCAFDHIBJFCFKKDHIBJAGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKCGDHIBJAGGCAFDHIBJFCFKKGDHIBJAGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKCDHIBJAGGGAFDHIBJFCFKKCGDHIBJAGGAFDHIBJFCFKKAFDHIBJFCFKKDHIBJACGGCDHIBJAGGAFDHIBJFCFKKNDHIBJACGGCDHIBJGAGCDHIBJAGGDHIBJACGGDHIBJCGAGCDHIBJGAGDHIBJACGGDHIBJCAGGDHIBJCGAGDHIBJDHIBJACGCAGDHIBJNACGACGCAGAACCANCNPACTOPDHIBJCGAGDHIBJCAGGDHIBJCAQUAODHIBJCGCDHIBJGAADHIBJCTANPOCDHIBJAQOPAFDHIBJFCFKKCGDHIBJAGGAFDHIBJFCFKKCDHIBJAGGGAFDHIBJFCFKKCDHIBJAGQUAOAFDHIBJFCFKKCGCAFDHIBJFCFKKGDHIBJAGDHIBJAGAFDHIBJFCFKKCTDHIBJAGNPOCAFDHIBJFCFKKDHIBJAGQOPDHIBJFCFKCGAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKCAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKCAFDHIBJFCFKKDHIBJAGGQUAODHIBJFCFKCGCDHIBJFCFKGAFDHIBJFCFKKDHIBJAGGAFDHIBJFCFKKDHIBJAGGDHIBJFCFKCTAFDHIBJFCFKKDHIBJAGGNPOCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGQOCCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGCNDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGNPOCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGDHIBJFCFKCGAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKCAFDHIBJFCFKKDHIBJAGGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGCDHIBJFCFKGAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKCGAFDHIBJFCFKKDHIBJAGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGCDHIBJFCFKGAFDHIBJFCFKKDHIBJAGGGCCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGCNDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGNPCDHIBJFCFKGAFDHIBJFCFKKDHIBJAGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGGGCDHIBJFCFKAFDHIBJFCFKKDHIBJAGGQUAOCDHIBJFCFKGDHIBJFCFKCGAFDHIBJFCFKKDHIBJAGGAFDHIBJFCFKKDHIBJAGGCDHIBJFCFKTAFDHIBJFCFKKDHIBJAGGNPODHIBJFCFKCAFDHIBJFCFKKDHIBJAGGQOODHIBJFCFKCFDHIBJFKCAFDHIBJFCFKKDHIBJAGGGCAFDHIBJFCFKKDHIBJAGGGDHIBJFCFVRCAFDHIBJFCFKKDHIBJAGGGNPOCFDHIBJFKCGAFDHIBJFCFKKDHIBJAGGGCFDHIBJFKCAFDHIBJFCFKKDHIBJAGGGGCFDHIBJFKCAFDHIBJFCFKKDHIBJAGGQUAOUECFDHIBJFKCGAFDHIBJFCFKKDHIBJAGGGCFDHIBJFKCGDHIBJFCFDHIBJFKCGAFDHIBJFCFKKDHIBJAGGUOCFDHIBJFKCGDHIBJFDHIBJFCDHIBJFVDDHIBJFDHIBJFDHIBJFNUEUBUBUBDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGNUEUPUBUBDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGMDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGGMDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGGMDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGUNUAUEDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGMDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGMDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJDHIBJFGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJDHIBJFGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFNDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJDHIBJFCFKGAFDHIBJFCFKKACGGGDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKDHIBJGAFDHIBJFCFKKACGGGDHIBJDHIBJFCFKGAFDHIBJFCFKKACGGGDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGDHIBJFCFKDHIBJAFDHIBJFCFKKACGGGGDHIBJFCFKDHIBJGAFDHIBJFCFKKACGGGDHIBJFCFKDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGDHIBJAFDHIBJFCFKKACGGGDHIBJFDHIBJFCFCFDHIBJFNCFNUIAFDHIBJFCFKKDHIBJACGGGDHIBJAFDHIBJFCFKKGACGGDHIBJAFDHIBJFCFKKACGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJGACGGDHIBJAFDHIBJFCFKKGACGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJGACGGAFDHIBJFCFKKAFDHIBJFCFKKDHIBJACGGDHIBJACGGAFDHIBJFCFKKNDHIBJDHIBJACGACGDHIBJNAACCANCNPPPAFDHIBJFCFKKDHIBJGACGGAFDHIBJFCFKKDHIBJACGGGAFDHIBJFCFKKDHIBJACGQUAOAFDHIBJFCFKKDHIBJGDHIBJAFDHIBJFCFKKGACGACGAFDHIBJFCFKKDHIBJTAACCANCNPPODHIBJAFDHIBJFCFKKACGQOPDHIBJFCFKDHIBJGAFDHIBJFCFKKACGGGDHIBJFCFKDHIBJAFDHIBJFCFKKACGGGGDHIBJFCFKDHIBJAFDHIBJFCFKKACGGQUAODHIBJFCFKDHIBJGDHIBJDHIBJFCFKGAFDHIBJFCFKKACGGAFDHIBJFCFKKACGGDHIBJFCFKDHIBJTAFDHIBJFCFKKACGGNPODHIBJDHIBJFCFKAFDHIBJFCFKKACGGQOPDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGQUAODHIBJFDHIBJGDHIBJDHIBJFGDHIBJFCFKAFDHIBJFCFKKACGGGDHIBJFCFKAFDHIBJFCFKKACGGGDHIBJFDHIBJTDHIBJFCFKAFDHIBJFCFKKACGGGNPODHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGQODHIBJDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJNDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGNPODHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJDHIBJFGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJDHIBJFGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJNDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGNPDHIBJDHIBJFGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJDHIBJFDHIBJFCFKAFDHIBJFCFKKACGGGQUAODHIBJDHIBJFGDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGDHIBJFCFKAFDHIBJFCFKKACGGGDHIBJDHIBJFTDHIBJFCFKAFDHIBJFCFKKACGGGNPODHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGQOODHIBJFDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFNDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGNPODHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGGGDHIBJFDHIBJDHIBJFCFKAFDHIBJFCFKKACGGGQUAOUEDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGGDHIBJFDHIBJGMDHIBJFDHIBJGDHIBJFCFKAFDHIBJFCFKKACGGGUODHIBJVSUBUBDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGNUEUPUBDHIBJFDHIBJFCFKAFDHIBJFCFKKDHIBJACGGGGGVTUBUBUBUQUMADHIBJCGGDRDHIBJCGAGDRMADHIBJCGGDHIBJCGAGDADHIBJCGGDHIBJCGAGADHIBJCGTUEUMDHIBJCGAGDRDHIBJCGDRAGMDHIBJCGADADHWAWBDHIBJCGDRAGADHIBJCGDRGMDHIBJCGDRAGADHIBJCGDRGDHIBJCGDRATUEABCDSGFADHIBJCGDRGMLEADHIBJCGDRGMLABCDSGMLABCDSGFADHIBJCGDRGMABCDSGMADHIBJCGDRABCDSAUCDHIBJCGDRDHIBJCGDRBCDSDHIBJCGDRUCBCDSDHIBJCGDRBCDVAULUDWCMUCUFABCDSGFABCDSGMLABCDSGUGULUDUJUBUBUBUBUQUQWD $. $}
${ disjointness-to-not-in.0 $e |- ( \is-predicate th0 ) $.
   disjointness-to-not-in.1 $e |- ( \imp th0 ( \ceil ph1 ) ) $.
   disjointness-to-not-in.2 $e |- ( \imp th0 ( \in-sort ph1 ph0 ) ) $.
   disjointness-to-not-in.3 $e |- ( \imp th0 ( \in-sort ph2 ph0 ) ) $.
   disjointness-to-not-in.4 $e |- ( \imp th0 ( \not ( \and ph1 ph2 ) ) ) $.
   disjointness-to-not-in $p |- ( \imp th0 ( \kore-valid ph3 ( \kore-not ph3 ( \kore-in ph0 ph3 ph1 ph2 ) ) ) ) $= ( not-is-pattern or-is-pattern and-is-pattern kore-top-is-pattern imp-is-pattern rule-iff-transitivity iff-reflexivity kore-not-is-pattern kore-implies-is-pattern rule-iff-compat-in-and and-associativity kore-ceil-is-pattern ceil-is-pattern rule-iff-compat-in-not rule-iff-symmetry bot-is-pattern rule-iff-compat-in-or and-commutativity rule-imp-transitivity inh-is-pattern floor-is-pattern in-sort-is-pattern rule-iff-elim-left notation-reflexivity notation-transitivity or-commutativity notation-imp or-associativity top-is-pattern proof-rule-mp imp-to-or kore-valid-is-pattern double-negation kore-in-is-pattern notation-proof iff-is-pattern de-morgan-or and-idempotency and-elim-left-sugar rule-imp-compat-in-and rule-weakening-imp2 kore-not-is-sugar not-is-sugar rule-and-intro-alt2-sugar is-predicate-is-pattern included-is-pattern in-sort-is-sugar included-is-sugar contradiction de-morgan-and resolution-1 and-bot notation-symmetry lemma-floor-elim-alt predicate-imp-compat-in-ceil rule-weakening lemma-floor-is-predicate or-left-distributivity resolution-3 kore-top-is-sugar lemma-imp-compat-in-floor resolution-4 or-idempotency weakened-mp kore-ceil-is-sugar kore-dn-intro kore-floor-is-pattern kore-in-is-sugar kore-floor-is-sugar notation-kore-not notation-kore-implies notation-kore-valid proof-rule-prop-1 kore-ceil-sorting top-intro notation-is-predicate or-complement or-top and-top resolution-2 kore-or-is-pattern kore-implies-is-sugar kore-or-is-sugar notation-or notation-not notation-and weakening-imp3 predicate-floor-intro lemma-predicate-floor-alt lemma-ceil-is-predicate and-elim-right and-is-sugar or-is-sugar imp-reflexivity rule-curry iff-is-sugar eq-is-pattern kore-valid-is-sugar eq-is-sugar kore-mp-alt ) DADAABCSRUBDADBCVDREEADAABCSRUBDULOEDDADAABCSRUBDADBCVDRSVBOADAABCSRUBDULDDADAABCSRUBDADBCVDRSVBEADAABCSRUBDULDDADAABCSRUBDDADAABCSRUBRRSVBOADAABCSRUBDULDDADAABCSRUBDADBCVDRSVBODADAABCSRUBWPADAABCSRUBDULDDADAABCSRUBDADBCVDRSVBADAABCSRUBDULDDADAABCSRUBDDADAABCSRUBRRSVBADAABCSRUBDULUNDDADAABCSRUBDADBCVDRSDDADAABCSRUBDDADAABCSRUBRRSDUNDADAABCSRUBDADBCVDRDADAABCSRUBDDADAABCSRUBRRDUNADAABCSRUBUNDADBCVDDDADAABCSRUBRDUNADBCVDDADAABCSRUBRDADAABCSRUBRADBCVDADABCSWQDADAABCSRUBRADBCWRADABCSWSUODADAABCSRUBRUNUOWTXAXBUQVEVKECAULBAULUSMMOEADAABCSRUBDULOCAULBAULUSMMADAABCSRUBDULEADAABCSRUBDULCAULBAULUSMMADAABCSRUBDULOADAABCSRUBDULCAULBAULUSMMXCAAABCSRDXDUTVKECAULBAULUSMIEBAULUSHEUSXEWFVNVNUTUTEAABCSRUCUKDADAABCSRUBVBEAABCSRUCAABCSRUCUKEABCORUCAABCSRUCECAULOEABCORUCAABCSRUCOOCAULABCORUCAABCSRUCOECAULABCORAABCSRCAUJOUKVOCAULVOCAUJOWGCAULCAUJOUKCAULCAUJOUKCAUJOUKCAULCAUJVPCAUJOUKCAVQCAUJVRUOCAUJOUKUNUOXFVECAULABCORAABCSROUKABCORAABCSROCAUJOUKABCORAABCSROUKOCAULABCORAABCSROUKOCAUJOABCORAABCSROCANOBCOKANMBKANMCLKANMOOCAUJOABCORAABCSROOCANOBCOKANMBKANMCLKANMOOKUFOCANOBCOKANMBKANMCLKANMOOCANOBCOKANMBKANMCLKANMOOVSCANOBCOKANMBKANMCLKANMOOKCBKANKLLCKBANCKANLMMMMUFCANOBCOKANMBKANMCLKANMOOKCBKANKLLCKBANCKANLMMMMCANOBCOKANMBKANMCLKANMOOKCKANLANBCKCBKANKLLCANANKLLMMMMMCBKANKLLCKBANCKANLMMMMCANOBCOKANMBKANMCLKANMOOKCKANLKBKCLKANMKBKANMCLKANMLLKCKANLANBCKCBKANKLLCANANKLLMMMMMCANOBCOKANMBKANMCLKANMOOCKANLKBKCLKANMKBKANMCLKANMLLCANOBCOKANMBKANMCLKANMOOCANOKBCOKANMBKANMCLKANMOLCKANLKBKCLKANMKBKANMCLKANMLLCANOBCOKANMBKANMCLKANMOVACANOKCKANLKBCOKANMBKANMCLKANMOBKCLKANMKBKANMCLKANMLCANOCKANLCANOCKANLCKANLCANVACKCKANANCCCQUDANQUGPUDBCOKANMBKANMCLKANMOBCOKANMKBKANMCLKANMLBKCLKANMKBKANMCLKANMLBCOKANMBKANMCLKANMVABCOKANMKBKCLKANMKBKANMCLKANMBKANMCLKANMBCOKANMBKCLKANMBCOKBKCLKANANBCOBKCLBCOBKCLBKCLBCVABKBKCCBBBQUDCQUGPUDANQTUDBKANMCLKBKANMCLKANANBKANMCLBKANMCLBKANMBKANMCCBKBKANANBBBQUDANQTCQUGUDANQTUGPUGPUDCKANLKBKCLKANMKBKANMCLKANMLLKCKANLKKBKCLKANMKBKANMCLKANMLKMCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLKBKCLKANMKBKANMCLKANMLVGCKANLKKBKCLKANMKBKANMCLKANMLKMCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLKKCKANLBKCLKANMKBKANMCLKANMLKANBCKCBKANKLLCANANKLLMMMMCKANLKKCKANLCKANLCKANLVCCKCKANANCCCQUDANQUGPBKCLKANMKBKANMCLKANMLKBKCLKANMKKBKANMCLKANMKMANBCKCBKANKLLCANANKLLMMMMBKCLKANMKBKANMCLKANMVGBKCLKANMKKBKANMCLKANMKMCKBANMMCBKANKLLCANANKLLMMANBCKCBKANKLLCANANKLLMMMMBKCLKANMKKCKBANMMBKANMCLKANMKCBKANKLLCANANKLLMBKCLKANMKKBKCLKANMCKBANMMBKCLKANMVCBKCLKANMBCKMANMCKBANMMBKCLKBCKMANANBKCLKBKKCKMBCKMBKCVGBKKCKMBCKMBCKMBKKBCKCKBKKBBBVCBQPCCCQUDTBCKMQPPANQTBCKMANMCKBMANMCKBANMMBCKMCKBMANANBCKMBCKMCKBMBCKMQBCKUHPANQTCKBANUAPPPBKANMCLKANMKBKANMCLKKANKLCBKANKLLCANANKLLMBKANMCLKANVTBKANMCLKKANKLBKCLANKLANCLANKLMCBKANKLLCANANKLLMBKANMCLKKANKLBKCLANCLMANKLBKCLANKLANCLANKLMBKANMCLKKBKCLANCLMANKANKBKANMCLKKBKANMCLBKCLANCLMBKANMCLVCBKANMCLBKCLANCLMBKCLANCLMBKANMCLBKANMCLBKCLANCLMBKANMBKANMCCBKBKANANBBBQUDANQTCQUGBKANCWHPBKCLANCLMBKCLANCLMBKCLANCLMBKCLBKCLANCLANCLBKBKCCBBBQUDCQUGANCLANCLANCLANANCCANQCQUGANANCCANQCQUGPTBKCLBKCLANCLANCLBKBKCCBBBQUDCQUGANCLANCLANCLANANCCANQCQUGANANCCANQCQUGPTPPPANKQUGBKCLANCLANKWHPBKCLANKLANCLANKLMCBKANKLLCANANKLLMCBKANKLLCANANKLLMBKCLANKLCBKANKLLANCLANKLCANANKLLBKCLANKLBKCLANKLCBKANKLLBKCLBKCLANKANKBKBKCCBBBQUDCQUGANKQUGBKCLANKLCBKLANKLCBKANKLLBKCLCBKLANKANKBKCLBKCLCBKLBKBKCCBBBQUDCQUGBKCUPPANKQUGCBKANKURPPANCLANKLANCLANKLCANANKLLANCLANCLANKANKANANCCANQCQUGANKQUGANCLANKLCANLANKLCANANKLLANCLCANLANKANKANCLANCLCANLANANCCANQCQUGANCUPPANKQUGCANANKURPPTCBKANKLLCANANKLLMQPPPTCKBANMMCBKANKLLCANANKLLMMANBMCKCBKANKLLCANANKLLMMMANBCKCBKANKLLCANANKLLMMMMCKBANMMCBKANKLLCANANKLLMMANBMCKMCBKANKLLCANANKLLMMANBMCKCBKANKLLCANANKLLMMMCKBANMMANBMCKMCBKANKLLCANANKLLMCBKANKLLCANANKLLMCKBANMMCKANBMMANBMCKMCKCKBANMANBMCCCQUDBANMBANMANBMBBANANBQANQTBANUHPTCKANBMUHPCBKANKLLCANANKLLMQTANBMCKCBKANKLLCANANKLLMUAPANBCKCBKANKLLCANANKLLMMUAPPPTCKANLANBCKCBKANKLLCANANKLLMMMMMQPPPCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMCBKANKLLCKBANCKANLMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMQCKANLANBCKCBKANKLLCANANKLLMMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMCBKANKLLCKBANCKANLMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMANCKANLMBCKCBKANKLLCANANKLLMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLANMBCKCBKANKLLCANANKLLMMMMANCKANLMBCKCBKANKLLCANANKLLMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLANMBCKCBKANKLLCANANKLLMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMQCKANLANMBCKCBKANKLLCANANKLLMMMMCKANLANBCKCBKANKLLCANANKLLMMMMMCKANLANBCKCBKANKLLCANANKLLMMMUAUEPCKANLANMANCKANLMBCKCBKANKLLCANANKLLMMMBCKCBKANKLLCANANKLLMMMCKANLANUHBCKCBKANKLLCANANKLLMMMQTPANCKANLBCKCBKANKLLCANANKLLMMMUAPANANCKANLBCKCBKANKLLCANANKLLMMMMCKANLBCKCBKANKLLCANANKLLMMMMANQCKANLBCKCBKANKLLCANANKLLMMMMQTPANCKANLBCKCBKANKLLCANANKLLMMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMCBKANKLLCKBANCKANLMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMBANMCKANLCKCBKANKLLCANANKLLMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMANBMCKANLCKCBKANKLLCANANKLLMMMMBANMCKANLCKCBKANKLLCANANKLLMMMMANCKANLBCKCBKANKLLCANANKLLMMMMMANBCKANLCKCBKANKLLCANANKLLMMMMMANBMCKANLCKCBKANKLLCANANKLLMMMMANANCKANLBCKCBKANKLLCANANKLLMMMMBCKANLCKCBKANKLLCANANKLLMMMMANQCKANLBCKCBKANKLLCANANKLLMMMMBCKANLMCKCBKANKLLCANANKLLMMMBCKANLCKCBKANKLLCANANKLLMMMMCKANLBCKCBKANKLLCANANKLLMMMMCKANLBMCKCBKANKLLCANANKLLMMMBCKANLMCKCBKANKLLCANANKLLMMMCKANLBCKCBKANKLLCANANKLLMMMMCKANLBCKCBKANKLLCANANKLLMMMMCKANLBMCKCBKANKLLCANANKLLMMMCKANLBCKCBKANKLLCANANKLLMMMMQCKANLBMCKCBKANKLLCANANKLLMMMCKANLBCKCBKANKLLCANANKLLMMMMCKANLBCKCBKANKLLCANANKLLMMUAUEPCKANLBMBCKANLMCKCBKANKLLCANANKLLMMCKCBKANKLLCANANKLLMMCKANLBUHCKCBKANKLLCANANKLLMMQTPBCKANLCKCBKANKLLCANANKLLMMUAPTANBMCKANLCKCBKANKLLCANANKLLMMMMANBCKANLCKCBKANKLLCANANKLLMMMMMANBCKANLCKCBKANKLLCANANKLLMMMUAUEPANBMBANMCKANLCKCBKANKLLCANANKLLMMMCKANLCKCBKANKLLCANANKLLMMMANBUHCKANLCKCBKANKLLCANANKLLMMMQTPBANCKANLCKCBKANKLLCANANKLLMMMUAPBBANCKANLCKCBKANKLLCANANKLLMMMMANCKANLCKCBKANKLLCANANKLLMMMMBQANCKANLCKCBKANKLLCANANKLLMMMMQTPBANCKANLCKCBKANKLLCANANKLLMMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMCBKANKLLCKBANCKANLMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMCKBMANCKANLCBKANKLLCANANKLLMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMBCKMANCKANLCBKANKLLCANANKLLMMMMCKBMANCKANLCBKANKLLCANANKLLMMMMBANCKANLCKCBKANKLLCANANKLLMMMMMBCKANCKANLCBKANKLLCANANKLLMMMMMBCKMANCKANLCBKANKLLCANANKLLMMMMBBANCKANLCKCBKANKLLCANANKLLMMMMCKANCKANLCBKANKLLCANANKLLMMMMBQANCKANLCKCBKANKLLCANANKLLMMMMCKANMCKANLCBKANKLLCANANKLLMMMCKANCKANLCBKANKLLCANANKLLMMMMANCKANLCKCBKANKLLCANANKLLMMMMANCKMCKANLCBKANKLLCANANKLLMMMCKANMCKANLCBKANKLLCANANKLLMMMANCKANLCKCBKANKLLCANANKLLMMMMANCKCKANLCBKANKLLCANANKLLMMMMANCKMCKANLCBKANKLLCANANKLLMMMANANCKANLCKCBKANKLLCANANKLLMMMCKCKANLCBKANKLLCANANKLLMMMANQCKANLCKCBKANKLLCANANKLLMMMCKCKANLMCBKANKLLCANANKLLMMCKCKANLCBKANKLLCANANKLLMMMCKANLCKCBKANKLLCANANKLLMMMCKANLCKMCBKANKLLCANANKLLMMCKCKANLMCBKANKLLCANANKLLMMCKANLCKCBKANKLLCANANKLLMMMCKANLCKCBKANKLLCANANKLLMMMCKANLCKMCBKANKLLCANANKLLMMCKANLCKCBKANKLLCANANKLLMMMQCKANLCKMCBKANKLLCANANKLLMMCKANLCKCBKANKLLCANANKLLMMMCKANLCKCBKANKLLCANANKLLMUAUEPCKANLCKMCKCKANLMCBKANKLLCANANKLLMCBKANKLLCANANKLLMCKANLCKUHCBKANKLLCANANKLLMQTPCKCKANLCBKANKLLCANANKLLMUAPTANCKMCKANLCBKANKLLCANANKLLMMMANCKCKANLCBKANKLLCANANKLLMMMMANCKCKANLCBKANKLLCANANKLLMMUAUEPANCKMCKANMCKANLCBKANKLLCANANKLLMMCKANLCBKANKLLCANANKLLMMANCKUHCKANLCBKANKLLCANANKLLMMQTPCKANCKANLCBKANKLLCANANKLLMMUAPTBCKMANCKANLCBKANKLLCANANKLLMMMMBCKANCKANLCBKANKLLCANANKLLMMMMMBCKANCKANLCBKANKLLCANANKLLMMMUAUEPBCKMCKBMANCKANLCBKANKLLCANANKLLMMMANCKANLCBKANKLLCANANKLLMMMBCKUHANCKANLCBKANKLLCANANKLLMMMQTPCKBANCKANLCBKANKLLCANANKLLMMMUAPCKCKBANCKANLCBKANKLLCANANKLLMMMMBANCKANLCBKANKLLCANANKLLMMMMCCCQUDBANCKANLCBKANKLLCANANKLLMMMMQTPCKBANCKANLCBKANKLLCANANKLLMMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCBKANKLLCKBANCKANLMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMCBKANKLLCKMBANCKANLCANANKLLMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMCKCBKANKLLMBANCKANLCANANKLLMMMMCBKANKLLCKMBANCKANLCANANKLLMMMMCKBANCKANLCBKANKLLCANANKLLMMMMMCKCBKANKLLBANCKANLCANANKLLMMMMMCKCBKANKLLMBANCKANLCANANKLLMMMMCKCKBANCKANLCBKANKLLCANANKLLMMMMCBKANKLLBANCKANLCANANKLLMMMMCCCQUDBANCKANLCBKANKLLCANANKLLMMMMCBKANKLLBMANCKANLCANANKLLMMMCBKANKLLBANCKANLCANANKLLMMMMBANCKANLCBKANKLLCANANKLLMMMMBCBKANKLLMANCKANLCANANKLLMMMCBKANKLLBMANCKANLCANANKLLMMMBANCKANLCBKANKLLCANANKLLMMMMBCBKANKLLANCKANLCANANKLLMMMMBCBKANKLLMANCKANLCANANKLLMMMBBANCKANLCBKANKLLCANANKLLMMMCBKANKLLANCKANLCANANKLLMMMBQANCKANLCBKANKLLCANANKLLMMMCBKANKLLANMCKANLCANANKLLMMCBKANKLLANCKANLCANANKLLMMMANCKANLCBKANKLLCANANKLLMMMANCBKANKLLMCKANLCANANKLLMMCBKANKLLANMCKANLCANANKLLMMANCKANLCBKANKLLCANANKLLMMMANCBKANKLLCKANLCANANKLLMMMANCBKANKLLMCKANLCANANKLLMMANANCKANLCBKANKLLCANANKLLMMCBKANKLLCKANLCANANKLLMMANQCKANLCBKANKLLCANANKLLMMCBKANKLLCKANLMCANANKLLMCBKANKLLCKANLCANANKLLMMCKANLCBKANKLLCANANKLLMMCKANLCBKANKLLMCANANKLLMCBKANKLLCKANLMCANANKLLMCKANLCBKANKLLCANANKLLMMCKANLCBKANKLLCANANKLLMMCKANLCBKANKLLMCANANKLLMCKANLCBKANKLLCANANKLLMMQCKANLCBKANKLLMCANANKLLMCKANLCBKANKLLCANANKLLMMCKANLCBKANKLLCANANKLLUAUEPCKANLCBKANKLLMCBKANKLLCKANLMCANANKLLCANANKLLCKANLCBKANKLLUHCANANKLLQTPCBKANKLLCKANLCANANKLLUAPTANCBKANKLLMCKANLCANANKLLMMANCBKANKLLCKANLCANANKLLMMMANCBKANKLLCKANLCANANKLLMUAUEPANCBKANKLLMCBKANKLLANMCKANLCANANKLLMCKANLCANANKLLMANCBKANKLLUHCKANLCANANKLLMQTPCBKANKLLANCKANLCANANKLLMUAPTBCBKANKLLMANCKANLCANANKLLMMMBCBKANKLLANCKANLCANANKLLMMMMBCBKANKLLANCKANLCANANKLLMMUAUEPBCBKANKLLMCBKANKLLBMANCKANLCANANKLLMMANCKANLCANANKLLMMBCBKANKLLUHANCKANLCANANKLLMMQTPCBKANKLLBANCKANLCANANKLLMMUAPTCKCBKANKLLMBANCKANLCANANKLLMMMMCKCBKANKLLBANCKANLCANANKLLMMMMMCKCBKANKLLBANCKANLCANANKLLMMMUAUEPCKCBKANKLLMCBKANKLLCKMBANCKANLCANANKLLMMMBANCKANLCANANKLLMMMCKCBKANKLLUHBANCKANLCANANKLLMMMQTPCBKANKLLCKBANCKANLCANANKLLMMMUAPCBKANKLLCBKANKLLCKBANCKANLCANANKLLMMMMCKBANCKANLCANANKLLMMMMCBKANKLLQCKBANCKANLCANANKLLMMMMQTPCBKANKLLCKBANCKANLCANANKLLMMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMUSCBKANKLLCKBANCKANLMMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCANANKLLCBKANKLLCKBANCKANLMMMMMUSCBKANKLLCKBANCKANLMMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCANANKLLCBKANKLLMCKBANCKANLMMMMCANANKLLCBKANKLLCKBANCKANLMMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCBKANKLLCANANKLLMCKBANCKANLMMMMCANANKLLCBKANKLLMCKBANCKANLMMMMCBKANKLLCKBANCKANLCANANKLLMMMMMCBKANKLLCANANKLLCKBANCKANLMMMMMCBKANKLLCANANKLLMCKBANCKANLMMMMCBKANKLLCBKANKLLCKBANCKANLCANANKLLMMMMCANANKLLCKBANCKANLMMMMCBKANKLLQCKBANCKANLCANANKLLMMMMCANANKLLCKMBANCKANLMMMCANANKLLCKBANCKANLMMMMCKBANCKANLCANANKLLMMMMCKCANANKLLMBANCKANLMMMCANANKLLCKMBANCKANLMMMCKBANCKANLCANANKLLMMMMCKCANANKLLBANCKANLMMMMCKCANANKLLMBANCKANLMMMCKCKBANCKANLCANANKLLMMMCANANKLLBANCKANLMMMCCCQUDBANCKANLCANANKLLMMMCANANKLLBMANCKANLMMCANANKLLBANCKANLMMMBANCKANLCANANKLLMMMBCANANKLLMANCKANLMMCANANKLLBMANCKANLMMBANCKANLCANANKLLMMMBCANANKLLANCKANLMMMBCANANKLLMANCKANLMMBBANCKANLCANANKLLMMCANANKLLANCKANLMMBQANCKANLCANANKLLMMCANANKLLANMCKANLMCANANKLLANCKANLMMANCKANLCANANKLLMMANCANANKLLMCKANLMCANANKLLANMCKANLMANCKANLCANANKLLMMANCANANKLLCKANLMMANCANANKLLMCKANLMANANCKANLCANANKLLMCANANKLLCKANLMANQCKANLCANANKLLUHTANCANANKLLMCKANLMANCANANKLLCKANLMMANCANANKLLCKANLUAUEPANCANANKLLMCANANKLLANMCKANLCKANLANCANANKLLUHCKCKANANCCCQUDANQUGTPCANANKLLANCKANLUAPTBCANANKLLMANCKANLMMBCANANKLLANCKANLMMMBCANANKLLANCKANLMUAUEPBCANANKLLMCANANKLLBMANCKANLMANCKANLMBCANANKLLUHANCKANLMQTPCANANKLLBANCKANLMUAPTCKCANANKLLMBANCKANLMMMCKCANANKLLBANCKANLMMMMCKCANANKLLBANCKANLMMUAUEPCKCANANKLLMCANANKLLCKMBANCKANLMMBANCKANLMMCKCANANKLLUHBANCKANLMMQTPCANANKLLCKBANCKANLMMUAPTCBKANKLLCANANKLLMCKBANCKANLMMMMCBKANKLLCANANKLLCKBANCKANLMMMMMCBKANKLLCANANKLLCKBANCKANLMMMUAUEPCBKANKLLCANANKLLMCANANKLLCBKANKLLMCKBANCKANLMMMCKBANCKANLMMMCBKANKLLCANANKLLUHCKBANCKANLMMMQTPCANANKLLCBKANKLLCKBANCKANLMMMUAPCANANKLLUSCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCANANKLLANKANCLLUSCANANKLLANCANKLLANKANCLLCANANKLLANCLANKLANCANKLLCANANKLLCANLANKLANCLANKLCANANKLLCANANKLLCANLANKLCANANKLLQCANLANKLCANANKLLCANANKURUEPCANLANCLANKANKCANUPANKQUGPANCANKURPANCANKLLANKANLCLANKANCLLANCANKLLANANKLCLANKANLCLANCANKLLANANKCLLANANKLCLANANCANKLANKCLANQCANKUPUGANANKLCLANANKCLLANANKCURUEPANANKLANKANLCCANANKUPCQUGPANKANCURPPANKANCLLUSCLUSANKANCLLANKANLCLUSCLANKANLCLANKANCLLANKANCURUEANKANLUSCCANXGCQUGPCXHPPCBKANKLLCKBANCKANLMMMMQTPCBKANKLLCKBANCKANLMMMMXIPCBKANKLLCKBANCKANLMMMMQPPPPPPPUMCBKANKLLCKBANCKANLMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMUFCBKANKLLCKBANCKANLMMMMCBKLCBKANKLLCKBANCKANLMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMVHUEUMCBKANKLLCKBANCKANLMMMMCBKLCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMANKCBKLLANMCKBCKANLMMMCBKLCBKANKLLCKBANCKANLMMMMANKCBKLLANMCKBCKANLMMMCBKANKLLCKBANCKANLMMMMANKCBKLLANCKBCKANLMMMMANKCBKLLANMCKBCKANLMMMCBKANKLLCKBANCKANLMMMMCBKANKLLANCKBCKANLMMMMANKCBKLLANCKBCKANLMMMMCBKANKLLCKBANCKANLMMMMANCBKANKLLCKBCKANLMMMMCBKANKLLANCKBCKANLMMMMCBKANKLLCKBANCKANLMMMMANCBKANKLLCKBCKANLMMMMANCBKANKLLCKBCKANLMMMMCBKANKLLCKBANCKANLMMMMANCBKANKLLMCKBCKANLMMMANCBKANKLLCKBCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLANMCKBCKANLMMMANCBKANKLLMCKBCKANLMMMCBKANKLLCKBANCKANLMMMMCBKANKLLANCKBCKANLMMMMCBKANKLLANMCKBCKANLMMMCBKANKLLCBKANKLLCKBANCKANLMMMANCKBCKANLMMMCBKANKLLQCKBANCKANLMMMANCKMBCKANLMMANCKBCKANLMMMCKBANCKANLMMMCKANMBCKANLMMANCKMBCKANLMMCKBANCKANLMMMCKANBCKANLMMMCKANMBCKANLMMCKCKBANCKANLMMANBCKANLMMCCCQUDBANCKANLMMANBMCKANLMANBCKANLMMBANCKANLMMBANMCKANLMANBMCKANLMBANCKANLMMBANCKANLMMBANMCKANLMBANCKANLMMQBANMCKANLMBANCKANLMMBANCKANLUAUEPBANMANBMCKANLCKANLBANUHCKCKANANCCCQUDANQUGTPANBCKANLUAPTCKANMBCKANLMMCKANBCKANLMMMCKANBCKANLMUAUEPCKANMANCKMBCKANLMBCKANLMCKANUHBCKANLMQTPANCKBCKANLMUAPTCBKANKLLANMCKBCKANLMMMCBKANKLLANCKBCKANLMMMMCBKANKLLANCKBCKANLMMUAUEPCBKANKLLANMANCBKANKLLMCKBCKANLMMCKBCKANLMMCBKANKLLANUHCKBCKANLMMQTPANCBKANKLLCKBCKANLMMUAPANANCBKANKLLCKBCKANLMMMCBKANKLLCKBCKANLMMMANQCBKANKLLCKBCKANLMMMQTPANCBKANKLLCKBCKANLMMMMCBKANKLLANMCKBCKANLMMMCBKANKLLANCKBCKANLMMMMANCBKANKLLCKBCKANLMMMMANCBKANKLLMCKBCKANLMMMCBKANKLLANMCKBCKANLMMMANCBKANKLLCKBCKANLMMMMANCBKANKLLCKBCKANLMMMMANCBKANKLLMCKBCKANLMMMANANCBKANKLLCKBCKANLMMMCBKANKLLCKBCKANLMMMANQCBKANKLLCKBCKANLMMMQTANCBKANKLLMCKBCKANLMMMANCBKANKLLCKBCKANLMMMMANCBKANKLLCKBCKANLMMUAUEPANCBKANKLLMCBKANKLLANMCKBCKANLMMCKBCKANLMMANCBKANKLLUHCKBCKANLMMQTPCBKANKLLANCKBCKANLMMUAPPCBKANKLLANKCBKLLANCKBCKANLMMMANCKBCKANLMMMCBKANKLLANKCLBKLANKCBKLLCBKANKLLCANKLBKLANKCLBKLCBKANKLLCANKBKLLCANKLBKLCCBKANKLANKBKLCQBKANKUPUGCANKLBKLCANKBKLLCANKBKURUEPCANKLANKCLBKBKCANKUPBBBQUDUGPANKCBKURPANCKBCKANLMMMQTPANKCBKLLANMCKBCKANLMMMANKCBKLLANCKBCKANLMMMMANKCBKLLANCKBCKANLMMUAUEPUMANKCBKLLANMCKBCKANLMMMANKCBKLLANMCBKLANKCBKLLANMCKBCKANLMMVIANKCBKLLANMCBKLCBKLANCBKLXJCBKLCBKLCBKLQUMUIUIUICBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMQUMVJUICBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMVHUEUMCBKLCBKANKLLCKBANCKANLMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCKCBKLMCBKANKLLBANCKANLMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMCKCBKLMCBKANKLLBANCKANLMMMMCBKLCBKANKLLCKBANCKANLMMMMMCKCBKLCBKANKLLBANCKANLMMMMMCKCBKLMCBKANKLLBANCKANLMMMMCBKLCBKANKLLCKBANCKANLMMMMMCKCBKLCBKANKLLBANCKANLMMMMMCKCBKLCBKANKLLBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCKCBKLCBKANKLLBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMQCBKLCBKANKLLCKBANCKANLMMMMMQPCBKLCBKANKLLCKBANCKANLMMMMMCKCBKLMCBKANKLLBANCKANLMMMMCKCBKLCBKANKLLBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCKMCBKANKLLBANCKANLMMMMCKCBKLMCBKANKLLBANCKANLMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCKCBKANKLLBANCKANLMMMMMCBKLCKMCBKANKLLBANCKANLMMMMCBKLCBKLCBKANKLLCKBANCKANLMMMMCKCBKANKLLBANCKANLMMMMCBKLQCBKANKLLCKBANCKANLMMMMCKCBKANKLLMBANCKANLMMMCKCBKANKLLBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKMBANCKANLMMMCKCBKANKLLMBANCKANLMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKMBANCKANLMMMCBKANKLLCKBANCKANLMMMMQCBKANKLLCKMBANCKANLMMMCBKANKLLCKBANCKANLMMMMCBKANKLLCKBANCKANLMMUAUEPCBKANKLLCKMCKCBKANKLLMBANCKANLMMBANCKANLMMCBKANKLLCKUHBANCKANLMMQTPCKCBKANKLLBANCKANLMMUAPTCBKLCKMCBKANKLLBANCKANLMMMMCBKLCKCBKANKLLBANCKANLMMMMMCBKLCKCBKANKLLBANCKANLMMMUAUEPCBKLCKMCKCBKLMCBKANKLLBANCKANLMMMCBKANKLLBANCKANLMMMCBKLCKUHCBKANKLLBANCKANLMMMQTPCKCBKLCBKANKLLBANCKANLMMMUAPPCKCKCBKLCBKANKLLBANCKANLMMMMCBKLCBKANKLLBANCKANLMMMMCCCQUDCBKLCBKANKLLBANCKANLMMMMQTPCKCBKLMCBKANKLLBANCKANLMMMMCKCBKLCBKANKLLBANCKANLMMMMMCKCBKLCBKANKLLBANCKANLMMMUAUEPUMCKCBKLMCBKANKLLBANCKANLMMMMCKCBKLMBKCKCBKLMCBKANKLLBANCKANLMMMVICKCBKLMBKBKCBKWIBKBKBBBQUDUMUIUIUICBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMQUMVJUIUIBKCBKLCBKANKLLCKBANCKANLMMMMMMUFBKCBKLCBKANKLLCKBANCKANLMMMMMMMUFBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMMUFBKCBKLCBKANKLLCKBANCKANLMMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMVHUEUMBKCBKLCBKANKLLCKBANCKANLMMMMMMUFBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKBMCBKLCBKANKLLCKANCKANLMMMMMUFBKCBKLCBKANKLLCKBANCKANLMMMMMMBKBMCBKLCBKANKLLCKANCKANLMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBKBMCBKLCBKANKLLCKANCKANLMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBBKMCBKLCBKANKLLCKANCKANLMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKBMCBKLCBKANKLLCKANCKANLMMMMMBBKMCBKLCBKANKLLCKANCKANLMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBKBMCBKLCBKANKLLCKANCKANLMMMMMBKBKCBKLCBKANKLLCKBANCKANLMMMMMBCBKLCBKANKLLCKANCKANLMMMMMBBBQUDCBKLCBKANKLLCKBANCKANLMMMMMBCBKLMCBKANKLLCKANCKANLMMMMBCBKLCBKANKLLCKANCKANLMMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLBMCBKANKLLCKANCKANLMMMMBCBKLMCBKANKLLCKANCKANLMMMMCBKLCBKANKLLCKBANCKANLMMMMMCBKLBCBKANKLLCKANCKANLMMMMMCBKLBMCBKANKLLCKANCKANLMMMMCBKLCBKLCBKANKLLCKBANCKANLMMMMBCBKANKLLCKANCKANLMMMMCBKLQCBKANKLLCKBANCKANLMMMMBCBKANKLLMCKANCKANLMMMBCBKANKLLCKANCKANLMMMMCBKANKLLCKBANCKANLMMMMCBKANKLLBMCKANCKANLMMMBCBKANKLLMCKANCKANLMMMCBKANKLLCKBANCKANLMMMMCBKANKLLBCKANCKANLMMMMCBKANKLLBMCKANCKANLMMMCBKANKLLCBKANKLLCKBANCKANLMMMBCKANCKANLMMMCBKANKLLQCKBANCKANLMMMBCKMANCKANLMMBCKANCKANLMMMCKBANCKANLMMMCKBMANCKANLMMBCKMANCKANLMMCKBANCKANLMMMCKBANCKANLMMMCKBMANCKANLMMCKBANCKANLMMMQCKBMANCKANLMMCKBANCKANLMMMCKBANCKANLMUAUEPCKBMBCKMANCKANLMANCKANLMCKBUHANCKANLMQTPBCKANCKANLMUAPTCBKANKLLBMCKANCKANLMMMCBKANKLLBCKANCKANLMMMMCBKANKLLBCKANCKANLMMUAUEPCBKANKLLBMBCBKANKLLMCKANCKANLMMCKANCKANLMMCBKANKLLBUHCKANCKANLMMQTPBCBKANKLLCKANCKANLMMUAPTCBKLBMCBKANKLLCKANCKANLMMMMCBKLBCBKANKLLCKANCKANLMMMMMCBKLBCBKANKLLCKANCKANLMMMUAUEPCBKLBMBCBKLMCBKANKLLCKANCKANLMMMCBKANKLLCKANCKANLMMMCBKLBUHCBKANKLLCKANCKANLMMMQTPBCBKLCBKANKLLCKANCKANLMMMUAPTBKBMCBKLCBKANKLLCKANCKANLMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMUAUEPBKBMBBKMCBKLCBKANKLLCKANCKANLMMMMCBKLCBKANKLLCKANCKANLMMMMBKBUHCBKLCBKANKLLCKANCKANLMMMMQTPBBKCBKLCBKANKLLCKANCKANLMMMMUAPBBBKCBKLCBKANKLLCKANCKANLMMMMMBKCBKLCBKANKLLCKANCKANLMMMMMBQBKCBKLCBKANKLLCKANCKANLMMMMMQTPBBKCBKLCBKANKLLCKANCKANLMMMMMMBKBMCBKLCBKANKLLCKANCKANLMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBBKMCBKLCBKANKLLCKANCKANLMMMMMBKBMCBKLCBKANKLLCKANCKANLMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBBKMCBKLCBKANKLLCKANCKANLMMMMMBBBKCBKLCBKANKLLCKANCKANLMMMMMBKCBKLCBKANKLLCKANCKANLMMMMMBQBKCBKLCBKANKLLCKANCKANLMMMMMQTBBKMCBKLCBKANKLLCKANCKANLMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMMMBBKCBKLCBKANKLLCKANCKANLMMMMUAUEPBBKMBKBMCBKLCBKANKLLCKANCKANLMMMMCBKLCBKANKLLCKANCKANLMMMMBBKUHCBKLCBKANKLLCKANCKANLMMMMQTPBKBCBKLCBKANKLLCKANCKANLMMMMUAPPBKBKBCBKLCBKANKLLCKANCKANLMMMMMBCBKLCBKANKLLCKANCKANLMMMMMBBBQUDBCBKLCBKANKLLCKANCKANLMMMMMQTPBKBMCBKLCBKANKLLCKANCKANLMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMMMBKBCBKLCBKANKLLCKANCKANLMMMMUAUEPUMBKBMCBKLCBKANKLLCKANCKANLMMMMMBKBMUFBKBMCBKLCBKANKLLCKANCKANLMMMMVIBWAUIUIBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMBKCBKLCBKANKLLCKBANCKANLMMMMMMQUMVJUIBKCBKLCBKANKLLCKBANCKANLMMMMMMWBUIUIUIUTCAUJOABCORAABCSROCANOBCOKANMBKANMCLKANMOCAUJCANCUNAUJAUJANAUJUNANAUJAWJWCUOUQABCORAABCSRBCOKANMBKANMCLKANMABCORBCOKANMBCOKANMABCOVLBCOKANMUNUOAABCSRABCSKANMBKANMCLKANMAABCSVLABCSKANBKANMCLKANABCSBKANMCLABCSABRCLBKANMCLABCSAABRCXKABRCLABCXLAABRCXMUOABRCBKANMCABRBKANMBKANMABVLBKANMUNUOCUNXNUOXOANUNXPUOUQUQVEWKCAULABCORAABCSROUKCAUJOUKABCORAABCSROUKCAULCAUJVPCAUJOUKCAVQCAUJVRUOABCORAABCSROUKUNUQVEABCORAABCSROWDUIWEVKIUTEBCOKUCABCORUCEBCOKABCORFEBAUJOOEBCOKABCOROOBAUJOBCOKABCOROEBANOBCOKBCOKANMOOBAUJOBCOKABCOROOBANOBCOKBCOKANMOOKUFOBANOBCOKBCOKANMOOBANOBCOKBCOKANMOOVSBANOBCOKBCOKANMOOKCBKANKLLBCKBKANLMMMUFBANOBCOKBCOKANMOOKCBKANKLLBCKBKANLMMMBANOBCOKBCOKANMOOKBKANLCKBCBKANKLLMMMCBKANKLLBCKBKANLMMMBANOBCOKBCOKANMOOKBKANLKBKCLKKBKCLKANMLLKBKANLCKBCBKANKLLMMMBANOBCOKBCOKANMOOBKANLKBKCLKKBKCLKANMLLBANOBCOKBCOKANMOOBANOKBCOKBCOKANMOLBKANLKBKCLKKBKCLKANMLLBANOBCOKBCOKANMOVABANOKBKANLKBCOKBCOKANMOBKCLKKBKCLKANMLBANOBKANLBANOBKANLBKANLBANVABKBKANANBBBQUDANQUGPUDBCOKBCOKANMOBCOKKBCOKANMLBKCLKKBKCLKANMLBCOKBCOKANMVABCOKKBKCLKKBCOKANMBKCLKANMBCOKBKCLKBCOBKCLBCOBKCLBKCLBCVABKBKCCBBBQUDCQUGPUDUDBCOKBKCLKANANBCOBKCLBCOBKCLBKCLBCVABKBKCCBBBQUDCQUGPUDANQTUGPUGPUDBKANLKBKCLKKBKCLKANMLLKBKANLKKBKCLKKBKCLKANMLKMBKANLCKBCBKANKLLMMMBKANLKBKCLKKBKCLKANMLVGBKANLKKBKCLKKBKCLKANMLKMBKANLCKBCBKANKLLMMMBKANLCKBCBKANKLLMMMBKANLKKBKANLBKCLKKBKCLKANMLKCKBCBKANKLLMMBKANLKKBKANLBKANLBKANLVCBKBKANANBBBQUDANQUGPBKCLKKBKCLKANMLKBKCLKKKBKCLKANMKMCKBCBKANKLLMMBKCLKKBKCLKANMVGBKCLKKKBKCLKANMKMBCKMCBKANKLLMCKBCBKANKLLMMBKCLKKKBCKMBKCLKANMKCBKANKLLBKCLKKKBKCLKBCKMBKCLKVCBKCLKBKKCKMBCKMBKCVGBKKCKMBCKMBCKMBKKBCKCKBKKBBBVCBQPCKQTBCKMQPPPBKCLKANMKBKCLKKANKLCBKANKLLBKCLKANVTBKCLKKANKLBKCLANKLCBKANKLLBKCLKKBKCLANKANKBKCLKKBKCLBKCLBKCLVCBKBKCCBBBQUDCQUGPANKQUGBKCLANKLCBKLANKLCBKANKLLBKCLCBKLANKANKBKCLBKCLCBKLBKBKCCBBBQUDCQUGBKCUPPANKQUGCBKANKURPPPTBCKMCBKANKLLMCKBMCBKANKLLMCKBCBKANKLLMMBCKMCKBMCBKANKLLCBKANKLLBCKMBCKMCKBMBCKMQBCKUHPCBKANKLLQTCKBCBKANKLLUAPPPTBKANLCKBCBKANKLLMMMQPPPBKANLCKBCBKANKLLMMMBKANLCKBCBKANKLLMMMCBKANKLLBCKBKANLMMMBKANLCKBCBKANKLLMMMQBKANLCKBCBKANKLLMMMCKBKANLBCBKANKLLMMMCBKANKLLBCKBKANLMMMBKANLCKBCBKANKLLMMMCKBKANLBCBKANKLLMMMCKBKANLBCBKANKLLMMMBKANLCKBCBKANKLLMMMCKBKANLMBCBKANKLLMMCKBKANLBCBKANKLLMMMBKANLCKBCBKANKLLMMMBKANLCKMBCBKANKLLMMCKBKANLMBCBKANKLLMMBKANLCKBCBKANKLLMMMBKANLCKBCBKANKLLMMMBKANLCKMBCBKANKLLMMBKANLCKBCBKANKLLMMMQBKANLCKMBCBKANKLLMMBKANLCKBCBKANKLLMMMBKANLCKBCBKANKLLMUAUEPBKANLCKMCKBKANLMBCBKANKLLMBCBKANKLLMBKANLCKUHBCBKANKLLMQTPCKBKANLBCBKANKLLMUAPCKCKBKANLBCBKANKLLMMBKANLBCBKANKLLMMCKQBKANLBCBKANKLLMMQTPCKBKANLBCBKANKLLMMMBCKBKANLCBKANKLLMMMCBKANKLLBCKBKANLMMMCKBKANLBCBKANKLLMMMBCKBKANLCBKANKLLMMMBCKBKANLCBKANKLLMMMCKBKANLBCBKANKLLMMMBCKMBKANLCBKANKLLMMBCKBKANLCBKANKLLMMMCKBKANLBCBKANKLLMMMCKBMBKANLCBKANKLLMMBCKMBKANLCBKANKLLMMCKBKANLBCBKANKLLMMMCKBBKANLCBKANKLLMMMCKBMBKANLCBKANKLLMMCKCKBKANLBCBKANKLLMMBBKANLCBKANKLLMMCKQBKANLBCBKANKLLMMBBKANLMCBKANKLLMBBKANLCBKANKLLMMBKANLBCBKANKLLMMBKANLBMCBKANKLLMBBKANLMCBKANKLLMBKANLBCBKANKLLMMBKANLBCBKANKLLMMBKANLBMCBKANKLLMBKANLBCBKANKLLMMQBKANLBMCBKANKLLMBKANLBCBKANKLLMMBKANLBCBKANKLLUAUEPBKANLBMBBKANLMCBKANKLLCBKANKLLBKANLBUHCBKANKLLQTPBBKANLCBKANKLLUAPTCKBMBKANLCBKANKLLMMCKBBKANLCBKANKLLMMMCKBBKANLCBKANKLLMUAUEPCKBMBCKMBKANLCBKANKLLMBKANLCBKANKLLMCKBUHBKANLCBKANKLLMQTPBCKBKANLCBKANKLLMUAPBBCKBKANLCBKANKLLMMCKBKANLCBKANKLLMMBQCKBKANLCBKANKLLMMQTPBCKBKANLCBKANKLLMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMBCKBKANLCBKANKLLMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMBCKBKANLCBKANKLLMMMCBKANKLLBMCKBKANLMMCBKANKLLBCKBKANLMMMBCKBKANLCBKANKLLMMMBCBKANKLLMCKBKANLMMCBKANKLLBMCKBKANLMMBCKBKANLCBKANKLLMMMBCBKANKLLCKBKANLMMMBCBKANKLLMCKBKANLMMBBCKBKANLCBKANKLLMMCBKANKLLCKBKANLMMBQCKBKANLCBKANKLLMMCBKANKLLCKMBKANLMCBKANKLLCKBKANLMMCKBKANLCBKANKLLMMCKCBKANKLLMBKANLMCBKANKLLCKMBKANLMCKBKANLCBKANKLLMMCKCBKANKLLBKANLMMCKCBKANKLLMBKANLMCKCKBKANLCBKANKLLMCBKANKLLBKANLMCKQBKANLCBKANKLLUHTCKCBKANKLLMBKANLMCKCBKANKLLBKANLMMCKCBKANKLLBKANLUAUEPCKCBKANKLLMCBKANKLLCKMBKANLBKANLCKCBKANKLLUHBKBKANANBBBQUDANQUGTPCBKANKLLCKBKANLUAPTBCBKANKLLMCKBKANLMMBCBKANKLLCKBKANLMMMBCBKANKLLCKBKANLMUAUEPBCBKANKLLMCBKANKLLBMCKBKANLMCKBKANLMBCBKANKLLUHCKBKANLMQTPCBKANKLLBCKBKANLMUAPCBKANKLLCBKANKLLBCKBKANLMMBCKBKANLMMCBKANKLLQBCKBKANLMMQTPCBKANKLLCBKANKLLBCKBKANLMMBCKBKANLMMCBKANKLLQBCKBKANLMMQTPPPPPUMCBKANKLLBCKBKANLMMMBKBKCLCBKANKLLBCKBKANLMMMMMUFCBKANKLLBCKBKANLMMMBKCLCBKANKLLBCKBKANLMMMMBKBKCLCBKANKLLBCKBKANLMMMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMVHUEUMCBKANKLLBCKBKANLMMMBKCLCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMANKCBKLLANBKLMBCKMMBKCLCBKANKLLBCKBKANLMMMANKCBKLLANBKLMBCKMMCBKANKLLBCKBKANLMMMANKCBKLLANBKLBCKMMMANKCBKLLANBKLMBCKMMCBKANKLLBCKBKANLMMMCBKANKLLANBKLBCKMMMANKCBKLLANBKLBCKMMMCBKANKLLBCKBKANLMMMANBKLCBKANKLLBCKMMMCBKANKLLANBKLBCKMMMCBKANKLLBCKBKANLMMMBKANLCBKANKLLBCKMMMANBKLCBKANKLLBCKMMMCBKANKLLBCKBKANLMMMBKANLCBKANKLLMBCKMMBKANLCBKANKLLBCKMMMCBKANKLLBCKBKANLMMMCBKANKLLBKANLMBCKMMBKANLCBKANKLLMBCKMMCBKANKLLBCKBKANLMMMCBKANKLLBKANLBCKMMMCBKANKLLBKANLMBCKMMCBKANKLLCBKANKLLBCKBKANLMMBKANLBCKMMCBKANKLLQBCKBKANLMMBKANLBMCKMBKANLBCKMMBCKBKANLMMBBKANLMCKMBKANLBMCKMBCKBKANLMMBBKANLCKMMBBKANLMCKMBBCKBKANLMBKANLCKMBQCKBKANLUHTBBKANLMCKMBBKANLCKMMBBKANLCKUAUEPBBKANLMBKANLBMCKCKBBKANLUHCKQTPBKANLBCKUAPTCBKANKLLBKANLMBCKMMCBKANKLLBKANLBCKMMMCBKANKLLBKANLBCKMUAUEPCBKANKLLBKANLMBKANLCBKANKLLMBCKMBCKMCBKANKLLBKANLUHBCKMQTPBKANLCBKANKLLBCKMUAPBKANLANBKLCBKANKLLBCKMMCBKANKLLBCKMMBKANUPCBKANKLLBCKMMQTPANBKLCBKANKLLBCKMMMCBKANKLLANBKLMBCKMMCBKANKLLANBKLBCKMMMANBKLCBKANKLLBCKMMMANBKLCBKANKLLMBCKMMCBKANKLLANBKLMBCKMMANBKLCBKANKLLBCKMMMANBKLCBKANKLLBCKMMMANBKLCBKANKLLMBCKMMANBKLANBKLCBKANKLLBCKMMCBKANKLLBCKMMANBKLQCBKANKLLBCKMMQTANBKLCBKANKLLMBCKMMANBKLCBKANKLLBCKMMMANBKLCBKANKLLBCKMUAUEPANBKLCBKANKLLMCBKANKLLANBKLMBCKMBCKMANBKLCBKANKLLUHBCKMQTPCBKANKLLANBKLBCKMUAPPCBKANKLLANKCBKLLANBKLBCKMMANBKLBCKMMCBKANKLLANKCLBKLANKCBKLLCBKANKLLCANKLBKLANKCLBKLCBKANKLLCANKBKLLCANKLBKLCCBKANKLANKBKLCQBKANKUPUGCANKLBKLCANKBKLLCANKBKURUEPCANKLANKCLBKBKCANKUPBBBQUDUGPANKCBKURPANBKLBCKMMQTPANKCBKLLANBKLMBCKMMANKCBKLLANBKLBCKMMMANKCBKLLANBKLBCKMUAUEPUMANKCBKLLANBKLMBCKMMANKCBKLLANBKLMBKCLANKCBKLLANBKLMBCKMVIANKCBKLLANBKLMBKCBKLLBKCLANKCBKLLANBKLMCBKLBKLBKCBKLLANCBKLBKWLCBKLBKLBKCBKLLCBKLBKLBKCLBKLBKCBKLLCBKLBKCLBKBKCBKLCBKLBKCLCCBKBKCQBBBQUDUGCBKUPPBBBQUDUGBKCBKURPUMUIBKCBKLLBKCLBKCBKLLBKCLBKCLBKCBKLLBKBKCLLBKCLBKCBKLLBKCBKLLBKBKCLLBKCBKLLQBKCBKLLBKBKLCLBKBKCLLBKCBKLLBKBKLCLBKBKLCLBKCBKLLBKBKCLLBKBKLCLBKBKCBKLBKCLBBBQUDCBKUPUGBKBKLCLBKBKCLLBKBKCURUEPBKBKLBKBKLCCBKBKUPCQUGPBKBKCURPPBKBKCLLBKBKLCLBKCLBKBKLCLBKBKCLLBKBKCURUEBKBKLBKCCBKWMCQUGPPBKBKCCBBBQUDCQUGPUMUIUIUICBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMCBKANKLLCBKANKLLBCKBKANLMMBCKBKANLMMCBKANKLLQBCKBKANLMMQTUMVJUIBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMVHUEUMBKCLCBKANKLLBCKBKANLMMMMBKBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMCKCBKLMCBKANKLLBBKANLMMMBKBKCLCBKANKLLBCKBKANLMMMMCKCBKLMCBKANKLLBBKANLMMMBKCLCBKANKLLBCKBKANLMMMMCKCBKLCBKANKLLBBKANLMMMMCKCBKLMCBKANKLLBBKANLMMMBKCLCBKANKLLBCKBKANLMMMMCKCBKLCBKANKLLBBKANLMMMMCKCBKLCBKANKLLBBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMCBKLCBKANKLLBCKBKANLMMMMCKCBKLCBKANKLLBBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMCBKLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMQBKCLCBKLCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMBKCUPCBKANKLLCBKANKLLBCKBKANLMMBCKBKANLMMCBKANKLLQBCKBKANLMMQTTPCBKLCBKANKLLBCKBKANLMMMMCKCBKLMCBKANKLLBBKANLMMMCKCBKLCBKANKLLBBKANLMMMMCBKLCBKANKLLBCKBKANLMMMMCBKLCKMCBKANKLLBBKANLMMMCKCBKLMCBKANKLLBBKANLMMMCBKLCBKANKLLBCKBKANLMMMMCBKLCKCBKANKLLBBKANLMMMMCBKLCKMCBKANKLLBBKANLMMMCBKLCBKLCBKANKLLBCKBKANLMMMCKCBKANKLLBBKANLMMMCCBKBKCQBBBQUDUGCBKANKLLBCKBKANLMMMCKCBKANKLLMBBKANLMMCKCBKANKLLBBKANLMMMCBKANKLLBCKBKANLMMMCBKANKLLCKMBBKANLMMCKCBKANKLLMBBKANLMMCBKANKLLBCKBKANLMMMCBKANKLLCKBBKANLMMMCBKANKLLCKMBBKANLMMCBKANKLLCBKANKLLBCKBKANLMMCKBBKANLMMCBKANKLLQBCKBKANLMMCKBMBKANLMCKBBKANLMMBCKBKANLMMBCKMBKANLMCKBMBKANLMBCKBKANLMMBCKBKANLMMBCKMBKANLMBCKBKANLMMQBCKMBKANLMBCKBKANLMMBCKBKANLUAUEPBCKMCKBMBKANLBKANLBCKUHBKBKANANBBBQUDANQUGTPCKBBKANLUAPTCBKANKLLCKMBBKANLMMCBKANKLLCKBBKANLMMMCBKANKLLCKBBKANLMUAUEPCBKANKLLCKMCKCBKANKLLMBBKANLMBBKANLMCBKANKLLCKUHBBKANLMQTPCKCBKANKLLBBKANLMUAPTCBKLCKMCBKANKLLBBKANLMMMCBKLCKCBKANKLLBBKANLMMMMCBKLCKCBKANKLLBBKANLMMUAUEPCBKLCKMCKCBKLMCBKANKLLBBKANLMMCBKANKLLBBKANLMMCBKLCKUHCBKANKLLBBKANLMMQTPCKCBKLCBKANKLLBBKANLMMUAPPCKCKCBKLCBKANKLLBBKANLMMMCBKLCBKANKLLBBKANLMMMCKQCBKLCBKANKLLBBKANLMMMQTPCKCBKLMCBKANKLLBBKANLMMMCKCBKLCBKANKLLBBKANLMMMMCKCBKLCBKANKLLBBKANLMMUAUEPUMCKCBKLMCBKANKLLBBKANLMMMCKCBKLMBKCKCBKLMCBKANKLLBBKANLMMVICKCBKLMBKBKCBKWIBKBKBBBQUDUMUIUIUIBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMQUMVJUIUIBKBKCLCBKANKLLBCKBKANLMMMMMUFBKBKCLCBKANKLLBCKBKANLMMMMMMUFBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMMUFBKBKCLCBKANKLLBCKBKANLMMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMVHUEUMBKBKCLCBKANKLLBCKBKANLMMMMMUFBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBMBKCLCBKANKLLCKBKANLMMMMUFBKBKCLCBKANKLLBCKBKANLMMMMMBKBMBKCLCBKANKLLCKBKANLMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBKBMBKCLCBKANKLLCKBKANLMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBBKMBKCLCBKANKLLCKBKANLMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBMBKCLCBKANKLLCKBKANLMMMMBBKMBKCLCBKANKLLCKBKANLMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBKBMBKCLCBKANKLLCKBKANLMMMMBKBKBKCLCBKANKLLBCKBKANLMMMMBBKCLCBKANKLLCKBKANLMMMMBBBQUDBKCLCBKANKLLBCKBKANLMMMMBBKCLMCBKANKLLCKBKANLMMMBBKCLCBKANKLLCKBKANLMMMMBKCLCBKANKLLBCKBKANLMMMMBKCLBMCBKANKLLCKBKANLMMMBBKCLMCBKANKLLCKBKANLMMMBKCLCBKANKLLBCKBKANLMMMMBKCLBCBKANKLLCKBKANLMMMMBKCLBMCBKANKLLCKBKANLMMMBKCLBKCLCBKANKLLBCKBKANLMMMBCBKANKLLCKBKANLMMMBKBKCCBBBQUDCQUGCBKANKLLBCKBKANLMMMBCBKANKLLMCKBKANLMMBCBKANKLLCKBKANLMMMCBKANKLLBCKBKANLMMMCBKANKLLBMCKBKANLMMBCBKANKLLMCKBKANLMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMMMCBKANKLLBMCKBKANLMMCBKANKLLCBKANKLLBCKBKANLMMBCKBKANLMMCBKANKLLQBCKBKANLMMQTCBKANKLLBMCKBKANLMMCBKANKLLBCKBKANLMMMCBKANKLLBCKBKANLMUAUEPCBKANKLLBMBCBKANKLLMCKBKANLMCKBKANLMCBKANKLLBUHCKBKANLMQTPBCBKANKLLCKBKANLMUAPTBKCLBMCBKANKLLCKBKANLMMMBKCLBCBKANKLLCKBKANLMMMMBKCLBCBKANKLLCKBKANLMMUAUEPBKCLBMBBKCLMCBKANKLLCKBKANLMMCBKANKLLCKBKANLMMBKCLBUHCBKANKLLCKBKANLMMQTPBBKCLCBKANKLLCKBKANLMMUAPTBKBMBKCLCBKANKLLCKBKANLMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBKBBKCLCBKANKLLCKBKANLMMMUAUEPBKBMBBKMBKCLCBKANKLLCKBKANLMMMBKCLCBKANKLLCKBKANLMMMBKBUHBKCLCBKANKLLCKBKANLMMMQTPBBKBKCLCBKANKLLCKBKANLMMMUAPBBBKBKCLCBKANKLLCKBKANLMMMMBKBKCLCBKANKLLCKBKANLMMMMBQBKBKCLCBKANKLLCKBKANLMMMMQTPBBKBKCLCBKANKLLCKBKANLMMMMMBKBMBKCLCBKANKLLCKBKANLMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBBKMBKCLCBKANKLLCKBKANLMMMMBKBMBKCLCBKANKLLCKBKANLMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBBKMBKCLCBKANKLLCKBKANLMMMMBBBKBKCLCBKANKLLCKBKANLMMMMBKBKCLCBKANKLLCKBKANLMMMMBQBKBKCLCBKANKLLCKBKANLMMMMQTBBKMBKCLCBKANKLLCKBKANLMMMMBBKBKCLCBKANKLLCKBKANLMMMMMBBKBKCLCBKANKLLCKBKANLMMMUAUEPBBKMBKBMBKCLCBKANKLLCKBKANLMMMBKCLCBKANKLLCKBKANLMMMBBKUHBKCLCBKANKLLCKBKANLMMMQTPBKBBKCLCBKANKLLCKBKANLMMMUAPPBKBKBBKCLCBKANKLLCKBKANLMMMMBBKCLCBKANKLLCKBKANLMMMMBBBQUDBBKCLCBKANKLLCKBKANLMMMMQTPBKBMBKCLCBKANKLLCKBKANLMMMMBKBBKCLCBKANKLLCKBKANLMMMMMBKBBKCLCBKANKLLCKBKANLMMMUAUEPUMBKBMBKCLCBKANKLLCKBKANLMMMMBKBMUFBKBMBKCLCBKANKLLCKBKANLMMMVIBWAUIUIBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMBKBKCLCBKANKLLBCKBKANLMMMMMQUMVJUIBKBKCLCBKANKLLBCKBKANLMMMMMWBUIUIUIUTBAUJOBCOKABCOROBANOBCOKBCOKANMOBAUJBANBUNANAUJAWJWCUQBCOKABCORBCOKBCOKANMBCOKUNABCOVLUQUQVEVKEBAULBAUJOHBAUJOUKBAUJOOBAULBAUJOOBAUJOWDBAULBAUJOBAUJOUKBAUJOBAULBAUJOUKBAUJOUKBAULBAUJVPBAUJOUKBAVQBAUJVRUOBAUJOUKUNUOBAUJOUNUQVEUIUTWEEBUCOEBCOKUCOEBCMKUKOEBUCOEBCOKUCOOBCMKUKBUCBCOKUCOOEBCMKUKOEBUCOEBCOKUCOOOBCMKUKBUCBCOKUCEXQBCMKUKBBCOKBCMKWGBCMKUKBCMKBBCOKOBCMKWDBCMKBBCOKOOKUFOBCMKBBCOKOOBCMKBBCOKOOVSBCMKBBCOKOOKBKCLBBKCKLMMUFBCMKBBCOKOOKBKCLBBKCKLMMBCMKBBCOKOOKBKCKLBBKCLMMBKCLBBKCKLMMBCMKBBCOKOOKBCMKKBKBKCLKLLKBKCKLBBKCLMMBCMKBBCOKOOBCMKKBKBKCLKLLBCMKBBCOKOOBCMKKBBCOKOLBCMKKBKBKCLKLLBCMKBBCOKOVABCMKKBCMKKBBCOKOBKBKCLKLBCMKBCMKBCMBCMBBCCBQCQTUDUDBBCOKOBKBCOKLBKBKCLKLBBCOKVABKBKBCOKBKCLKBBBQUDBCOBKCLBCOBKCLBKCLBCVABKBKCCBBBQUDCQUGPUDUGPUGPUDBCMKKBKBKCLKLLKBCMKKKBKBKCLKLKMBKCKLBBKCLMMBCMKKBKBKCLKLVGBCMKKKBKBKCLKLKMBKCKLBBKCLMMBKCKLBBKCLMMBCMKKKBKCKLBKBKCLKLKBBKCLMBCMKKKBCMKBKCKLBCMKVCBCMKBKCKLBKCKLBCVTBKCKLBKCKLBKCKLBKBKCKCKBBBQUDCKQUGBKBKCKCKBBBQUDCKQUGPPPBKBKCLKLKBKKBKCLKKMBBKCLMBKBKCLKVGBKKBKCLKKMBBKCLMBBKCLMBKKBBKCLKKBKCLBKKBBBVCBQPBKCLKKBKCLBKCLBKCLVCBKBKCCBBBQUDCQUGPTBBKCLMQPPTBKCKLBBKCLMMQPPPBKCKLBBKCLMMBKCKLBBKCLMMBKCLBBKCKLMMBKCKLBBKCLMMQBKCKLBBKCLMMBBKCKLBKCLMMBKCLBBKCKLMMBKCKLBBKCLMMBBKCKLBKCLMMBBKCKLBKCLMMBKCKLBBKCLMMBBKCKLMBKCLMBBKCKLBKCLMMBKCKLBBKCLMMBKCKLBMBKCLMBBKCKLMBKCLMBKCKLBBKCLMMBKCKLBBKCLMMBKCKLBMBKCLMBKCKLBBKCLMMQBKCKLBMBKCLMBKCKLBBKCLMMBKCKLBBKCLUAUEPBKCKLBMBBKCKLMBKCLBKCLBKCKLBUHBKBKCCBBBQUDCQUGTPBBKCKLBKCLUAPBBBKCKLBKCLMBKCKLBKCLMBQBKCKLBKCLMQTPBBKCKLBKCLMMBKCLBBKCKLMMBKCLBBKCKLMMBBKCKLBKCLMMBKCLBBKCKLMMBKCLBBKCKLMMBBKCKLBKCLMMBKCLBMBKCKLMBKCLBBKCKLMMBBKCKLBKCLMMBBKCLMBKCKLMBKCLBMBKCKLMBBKCKLBKCLMMBBKCLBKCKLMMBBKCLMBKCKLMBBBKCKLBKCLMBKCLBKCKLMBQBKCKLBKCLUHTBBKCLMBKCKLMBBKCLBKCKLMMBBKCLBKCKLUAUEPBBKCLMBKCLBMBKCKLBKCKLBBKCLUHBKBKCKCKBBBQUDCKQUGTPBKCLBBKCKLUAPBKCLBKCLBBKCKLMBBKCKLMBKBKCCBBBQUDCQUGBBKCKLMQTPBKCLBKCLBBKCKLMBBKCKLMBKBKCCBBBQUDCQUGBBKCKLMQTPPPPUMBKCLBBKCKLMMBKBKCLBBKCKLMMMUFBKCLBBKCKLMMBKCLBBKCKLMMBKCLBBKCKLMMMBKBKCLBBKCKLMMMBKCLBBKCKLMMBKCLBBKCKLMMBKCLBBKCKLMMMBKCLBBKCKLMMBKCLBBKCKLMMMBKCLBBKCKLMMBKCLBBKCKLMMVHUEUMBKCLBBKCKLMMBKBKCLBBKCKLMMBKCLBBKCKLMMBKCLBBKCKLMMCKBKLCBKLMBMBKBKCLBBKCKLMMCKBKLCBKLMBMBKCLBBKCKLMMCKBKLCBKLBMMCKBKLCBKLMBMBKCLBBKCKLMMBKCKLCBKLBMMCKBKLCBKLBMMBKCLBBKCKLMMCBKLBBKCKLMMBKCKLCBKLBMMBKCLBBKCKLMMBKCLBBKCKLMMCBKLBBKCKLMMBKCLBKCLBBKCKLMBBKCKLMBKBKCCBBBQUDCQUGBBKCKLMQTBKCLCBKLBBKCKLMBBKCKLMBKCUPBBKCKLMQTPCBKLBBKCKLMMBKCKLCBKLMBMBKCKLCBKLBMMCBKLBBKCKLMMCBKLBKCKLMBMBKCKLCBKLMBMCBKLBBKCKLMMCBKLBKCKLBMMCBKLBKCKLMBMCBKLCBKLBBKCKLMBKCKLBMCBKLQBBKCKLUHTCBKLBKCKLMBMCBKLBKCKLBMMCBKLBKCKLBUAUEPCBKLBKCKLMBKCKLCBKLMBBCBKLBKCKLUHBQTPBKCKLCBKLBUAPPBKCKLCKBKLCBKLBMCBKLBMBKCKUPCBKLBMQTPCKBKLCBKLMBMCKBKLCBKLBMMCKBKLCBKLBUAUEPUMCKBKLCBKLMBMCKBKLCBKLMBKCKBKLCBKLMBVICKBKLCBKLMBKBKLBKCKBKLCBKLMBKBKLBKBKLCBKBKWLBKBKLBKBKLBKBKLQUMUIBKBKLBKBKBKLBKBKBKBKLBKBKLBKBKBKLQBKWMPBBBQUDPUMUIUIUIBKCLBBKCKLMMBKCLBBKCKLMMBKCLBKCLBBKCKLMBBKCKLMBKBKCCBBBQUDCQUGBBKCKLMQTUMVJUIBKBKCLBBKCKLMMMUFBKBKCLBBKCKLMMMMUFBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMMUFBKBKCLBBKCKLMMMMBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMMBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMMBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMVHUEUMBKBKCLBBKCKLMMMUFBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMBKBMBKCLBKCKLMMUFBKBKCLBBKCKLMMMBKBMBKCLBKCKLMMBKBKCLBBKCKLMMMBKBBKCLBKCKLMMMBKBMBKCLBKCKLMMBKBKCLBBKCKLMMMBKBBKCLBKCKLMMMBKBBKCLBKCKLMMMBKBKCLBBKCKLMMMBBKBKCLBKCKLMMMBKBBKCLBKCKLMMMBKBKCLBBKCKLMMMBBKBKCLBKCKLMMMBBKBKCLBKCKLMMMBKBKCLBBKCKLMMMBBKMBKCLBKCKLMMBBKBKCLBKCKLMMMBKBKCLBBKCKLMMMBKBMBKCLBKCKLMMBBKMBKCLBKCKLMMBKBKCLBBKCKLMMMBKBBKCLBKCKLMMMBKBMBKCLBKCKLMMBKBKBKCLBBKCKLMMBBKCLBKCKLMMBBBQUDBKCLBBKCKLMMBBKCLMBKCKLMBBKCLBKCKLMMBKCLBBKCKLMMBKCLBMBKCKLMBBKCLMBKCKLMBKCLBBKCKLMMBKCLBBKCKLMMBKCLBMBKCKLMBKCLBKCLBBKCKLMBBKCKLMBKBKCCBBBQUDCQUGBBKCKLMQTBKCLBMBKCKLMBKCLBBKCKLMMBKCLBBKCKLUAUEPBKCLBMBBKCLMBKCKLBKCKLBKCLBUHBKBKCKCKBBBQUDCKQUGTPBBKCLBKCKLUAPTBKBMBKCLBKCKLMMBKBBKCLBKCKLMMMBKBBKCLBKCKLMUAUEPBKBMBBKMBKCLBKCKLMBKCLBKCKLMBKBUHBKCLBKCKLMQTPBBKBKCLBKCKLMUAPBBBKBKCLBKCKLMMBKBKCLBKCKLMMBQBKBKCLBKCKLMMQTPBBKBKCLBKCKLMMMBKBMBKCLBKCKLMMBKBBKCLBKCKLMMMBBKBKCLBKCKLMMMBBKMBKCLBKCKLMMBKBMBKCLBKCKLMMBBKBKCLBKCKLMMMBBKBKCLBKCKLMMMBBKMBKCLBKCKLMMBBBKBKCLBKCKLMMBKBKCLBKCKLMMBQBKBKCLBKCKLMMQTBBKMBKCLBKCKLMMBBKBKCLBKCKLMMMBBKBKCLBKCKLMUAUEPBBKMBKBMBKCLBKCKLMBKCLBKCKLMBBKUHBKCLBKCKLMQTPBKBBKCLBKCKLMUAPPBKBKBBKCLBKCKLMMBBKCLBKCKLMMBBBQUDBBKCLBKCKLMMQTPBKBMBKCLBKCKLMMBKBBKCLBKCKLMMMBKBBKCLBKCKLMUAUEPUMBKBMBKCLBKCKLMMBKBMUFBKBMBKCLBKCKLMVIBWAUIUIBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMBKBKCLBBKCKLMMMQUMVJUIBKBKCLBBKCKLMMMWBUIUIUIUTUIWEUTEBCMKFJXRUTGUTWNWNAABCSRUCVOAABCSRUCAABCSRUCUKOAABCSRUCXSAABCSRXTUTUIAABCSRUCUKADAABCSRUBDNVFUKOAABCSRUCUKDADAABCSRUBVBOAABCSRUCADAABCSRUBDNVFAABCSRUCADAABCSRUBDNODNADAABCSRUBOMOAABCSRUCADAABCSRUBDNVFOAABCSRUCADAABCSRUBDNODNADAABCSRUBOAABCSRUCADAABCSRUBDNOAABCSRUCUFOUFODNUFOOUFODNOADAABCSRUBDNOAABCSRUCDNYAADAABCSRUBDNAABCSRUCUFOUFODNUFOOUFODNADAABCSRUBAABCSRUCKDNKLUFOAABCSRUCUFOUFODNUFOOUFOADAABCSRUBAABCSRUCKDNKLKAABCSRUCKDNKLUFOADAABCSRUBAABCSRUCDNMAABCSRUCKDNKLKADAABCSRWOAABCSRUCDNYBUOAABCSRUCKDNKLVMUOAABCSRUCKDNKLUFAABCSRUCUFOUFODNUFOOUFAABCSRUCKDNKLAABCSRUCKKDNKOAABCSRUCUFOUFODNUFOOAABCSRUCKDNKYCAABCSRUCKKDNKAABCSRUCUFOUFODNUFOAABCSRUCKKAABCSRUCKUFOAABCSRUCUFOUFOAABCSRUCKVMAABCSRUCKUFAABCSRUCUFOUFAABCSRUCKAABCSRUCUFOAABCSRUCUFOAABCSRUCVMAABCSRUCUFOUNUOUFUNUQUODNKDNUFODNUFODNVMDNUFOUNUOUQUOUFUNUQUODNUNUQVEWFAABCSRUCDNADAABCSRUBADAABCSRUBADAABCSRUBOAABCSRUCDNMADAABCSRUBOADAABCSRUBYDAABCSRUCDNMADAABCSRUBADAABCSRUBADAABCSRUBAABCSRUCDNMAABCSRUCDNMADAABCSRUBAABCSRUCDNMUNADAABCSRUBAABCSRUCDNMADAABCSRWOWCUOADAABCSRUBUNUQVEYEVNAABCSRUCADAABCSRUBDNVFAABCSRUCADAABCSRUBDNODNADAABCSRUBOMAABCSRUCUNADAABCSRUBDNVFADAABCSRUBDNODNADAABCSRUBOMADAABCSRUBDNODNADAABCSRUBOMADAABCSRUBDNYFADAABCSRUBDNODNADAABCSRUBOMUNUOUQVEWKAABCSRUCUKDADAABCSRUBVBAABCSRUCUKADAABCSRUBDNVFUKAABCSRUCUKUNDADAABCSRUBVBADAABCSRUBDNVFUKADAABCSRUBDNVFUKDADAABCSRUBVBADAABCSRUBDNYGADAABCSRUBDNVFUKDADAABCSRUBYHADAABCSRUBDNYIUOADAABCSRUBDNVFUKUNUOUQVEUIYJ $. $}
${ desugar-not-to-imp.0 $e |- ( \not ph0 ) $.
   desugar-not-to-imp $p |- ( \imp ph0 \bot ) $= ( bot-is-pattern imp-is-pattern not-is-pattern notation-symmetry not-is-sugar notation-reflexivity notation-transitivity notation-proof ) AEACDBAEACDAEACDACDAGACDACDACDHFIFJ $. $}
${ sugar-imp-to-not.0 $e |- ( \imp ph0 \bot ) $.
   sugar-imp-to-not $p |- ( \not ph0 ) $= ( bot-is-pattern imp-is-pattern not-is-pattern not-is-sugar notation-reflexivity notation-symmetry notation-transitivity notation-proof ) ACDAEBAEACDACDAFACDACDACDGHIJ $. $}

$( symbol inj(From): To $)

$( adding 1 new metavariable(s) $)
$v xX0 $.
xX0-variable $f #Variable xX0 $.

$( adding 3 new metavariable(s) $)
$v ptn0 ptn1 ptn2 $.
ptn0-pattern $f #Pattern ptn0 $.
ptn1-pattern $f #Pattern ptn1 $.
ptn2-pattern $f #Pattern ptn2 $.
notation-cache-0 $p #Notation ( \kore-inj ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-inj-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern notation-reflexivity notation-app kore-inj-is-pattern kore-inj-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   kore-inj-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   kore-inj-application-context-0 $p #ApplicationContext xX0 ( \kore-inj ptn0 ptn1 ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern application-context-app-left kore-inj-is-pattern application-context-app-right notation-cache-0 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   kore-inj-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   kore-inj-application-context-1 $p #ApplicationContext xX0 ( \kore-inj ptn0 ptn1 ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern kore-inj-is-pattern application-context-app-right application-context-app-left notation-cache-0 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   kore-inj-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   kore-inj-application-context-2 $p #ApplicationContext xX0 ( \kore-inj ptn0 ptn1 ptn2 ) $= ( app-is-pattern kore-inj-is-symbol symbol-is-pattern kore-inj-is-pattern application-context-app-right notation-cache-0 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}

$( adding 1 new metavariable(s) $)
$v kore-sort-var-To $.
kore-sort-var-To-elementvariable $f #ElementVariable kore-sort-var-To $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To $.

$( adding 1 new metavariable(s) $)
$v kore-sort-var-From $.
kore-sort-var-From-elementvariable $f #ElementVariable kore-sort-var-From $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From $.
INJ-symbol-0-sorting $a |- ( \imp ( \and ( \and ( \kore-is-sort ptn0 ) ( \kore-is-sort ptn1 ) ) ( \in-sort ptn2 ptn0 ) ) ( \in-sort ( \kore-inj ptn0 ptn1 ptn2 ) ptn1 ) ) $.

$( sort SortK() $)
$c \kore-sort-SortK \kore-sort-SortK-symbol $.
BASIC-K-sort-0-is-symbol $a #Symbol \kore-sort-SortK-symbol $.
BASIC-K-sort-0-is-pattern $a #Pattern \kore-sort-SortK $.
BASIC-K-sort-0-is-sugar $a #Notation \kore-sort-SortK \kore-sort-SortK-symbol $.
${ BASIC-K-sort-0-substitution $p #Substitution \kore-sort-SortK \kore-sort-SortK ptn0 xX0 $= ( BASIC-K-sort-0-is-pattern substitution-disjoint ) CBAD $. $}
BASIC-K-sort-0-sort $a |- ( \kore-is-sort \kore-sort-SortK ) $.

$( sort SortKItem() $)
$c \kore-sort-SortKItem \kore-sort-SortKItem-symbol $.
BASIC-K-sort-1-is-symbol $a #Symbol \kore-sort-SortKItem-symbol $.
BASIC-K-sort-1-is-pattern $a #Pattern \kore-sort-SortKItem $.
BASIC-K-sort-1-is-sugar $a #Notation \kore-sort-SortKItem \kore-sort-SortKItem-symbol $.
${ BASIC-K-sort-1-substitution $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem ptn0 xX0 $= ( BASIC-K-sort-1-is-pattern substitution-disjoint ) CBAD $. $}
BASIC-K-sort-1-sort $a |- ( \kore-is-sort \kore-sort-SortKItem ) $.

$( symbol kseq(SortKItem{}, SortK{}): SortK{} $)
$c \kore-symbol-kseq \kore-symbol-kseq-symbol $.
KSEQ-symbol-0-is-symbol $a #Symbol \kore-symbol-kseq-symbol $.
KSEQ-symbol-0-is-pattern $a #Pattern ( \kore-symbol-kseq ptn0 ptn1 ) $.
KSEQ-symbol-0-is-sugar $a #Notation ( \kore-symbol-kseq ptn0 ptn1 ) ( \app ( \app \kore-symbol-kseq-symbol ptn0 ) ptn1 ) $.

$( adding 2 new metavariable(s) $)
$v ptn3 ptn4 $.
ptn3-pattern $f #Pattern ptn3 $.
ptn4-pattern $f #Pattern ptn4 $.
notation-cache-1 $p #Notation ( \kore-symbol-kseq ptn1 ptn2 ) ( \app ( \app \kore-symbol-kseq-symbol ptn1 ) ptn2 ) $= ( app-is-pattern KSEQ-symbol-0-is-symbol symbol-is-pattern KSEQ-symbol-0-is-pattern KSEQ-symbol-0-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-2 $p #Notation ( \kore-symbol-kseq ptn3 ptn4 ) ( \app ( \app \kore-symbol-kseq-symbol ptn3 ) ptn4 ) $= ( app-is-pattern KSEQ-symbol-0-is-symbol symbol-is-pattern KSEQ-symbol-0-is-pattern KSEQ-symbol-0-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ KSEQ-symbol-0-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   KSEQ-symbol-0-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   KSEQ-symbol-0-substitution $p #Substitution ( \kore-symbol-kseq ptn1 ptn2 ) ( \kore-symbol-kseq ptn3 ptn4 ) ptn0 xX0 $= ( KSEQ-symbol-0-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-0-is-pattern substitution-app substitution-disjoint notation-cache-1 notation-cache-2 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-3 $p #Notation ( \kore-symbol-kseq ptn0 ptn1 ) ( \app ( \app \kore-symbol-kseq-symbol ptn0 ) ptn1 ) $= ( KSEQ-symbol-0-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app KSEQ-symbol-0-is-pattern KSEQ-symbol-0-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   KSEQ-symbol-0-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   KSEQ-symbol-0-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-kseq ptn0 ptn1 ) $= ( KSEQ-symbol-0-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-0-is-pattern application-context-app-right application-context-app-left notation-cache-3 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   KSEQ-symbol-0-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   KSEQ-symbol-0-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-kseq ptn0 ptn1 ) $= ( app-is-pattern KSEQ-symbol-0-is-symbol symbol-is-pattern KSEQ-symbol-0-is-pattern application-context-app-right notation-cache-3 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
KSEQ-symbol-0-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-kseq ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$( symbol dotk(): SortK{} $)
$c \kore-symbol-dotk \kore-symbol-dotk-symbol $.
KSEQ-symbol-1-is-symbol $a #Symbol \kore-symbol-dotk-symbol $.
KSEQ-symbol-1-is-pattern $a #Pattern \kore-symbol-dotk $.
KSEQ-symbol-1-is-sugar $a #Notation \kore-symbol-dotk \kore-symbol-dotk-symbol $.
${ KSEQ-symbol-1-substitution $p #Substitution \kore-symbol-dotk \kore-symbol-dotk ptn0 xX0 $= ( KSEQ-symbol-1-is-pattern substitution-disjoint ) CBAD $. $}
KSEQ-symbol-1-sorting $a |- ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) $.

$( symbol append(SortK{}, SortK{}): SortK{} $)
$c \kore-symbol-append \kore-symbol-append-symbol $.
KSEQ-symbol-2-is-symbol $a #Symbol \kore-symbol-append-symbol $.
KSEQ-symbol-2-is-pattern $a #Pattern ( \kore-symbol-append ptn0 ptn1 ) $.
KSEQ-symbol-2-is-sugar $a #Notation ( \kore-symbol-append ptn0 ptn1 ) ( \app ( \app \kore-symbol-append-symbol ptn0 ) ptn1 ) $.
notation-cache-4 $p #Notation ( \kore-symbol-append ptn1 ptn2 ) ( \app ( \app \kore-symbol-append-symbol ptn1 ) ptn2 ) $= ( app-is-pattern KSEQ-symbol-2-is-symbol symbol-is-pattern KSEQ-symbol-2-is-pattern KSEQ-symbol-2-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-5 $p #Notation ( \kore-symbol-append ptn3 ptn4 ) ( \app ( \app \kore-symbol-append-symbol ptn3 ) ptn4 ) $= ( app-is-pattern KSEQ-symbol-2-is-symbol symbol-is-pattern KSEQ-symbol-2-is-pattern KSEQ-symbol-2-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ KSEQ-symbol-2-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   KSEQ-symbol-2-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   KSEQ-symbol-2-substitution $p #Substitution ( \kore-symbol-append ptn1 ptn2 ) ( \kore-symbol-append ptn3 ptn4 ) ptn0 xX0 $= ( KSEQ-symbol-2-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-2-is-pattern substitution-app substitution-disjoint notation-cache-4 notation-cache-5 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-6 $p #Notation ( \kore-symbol-append ptn0 ptn1 ) ( \app ( \app \kore-symbol-append-symbol ptn0 ) ptn1 ) $= ( KSEQ-symbol-2-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app KSEQ-symbol-2-is-pattern KSEQ-symbol-2-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   KSEQ-symbol-2-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   KSEQ-symbol-2-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-append ptn0 ptn1 ) $= ( KSEQ-symbol-2-is-symbol symbol-is-pattern app-is-pattern KSEQ-symbol-2-is-pattern application-context-app-right application-context-app-left notation-cache-6 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   KSEQ-symbol-2-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   KSEQ-symbol-2-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-append ptn0 ptn1 ) $= ( app-is-pattern KSEQ-symbol-2-is-symbol symbol-is-pattern KSEQ-symbol-2-is-pattern application-context-app-right notation-cache-6 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
KSEQ-symbol-2-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-append ptn0 ptn1 ) \kore-sort-SortK ) ) $.

$( adding 4 new metavariable(s) $)
$v kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 $.
kore-sort-var-R-elementvariable $f #ElementVariable kore-sort-var-R $.
kore-element-var-VE1-elementvariable $f #ElementVariable kore-element-var-VE1 $.
kore-element-var-VE2-elementvariable $f #ElementVariable kore-element-var-VE2 $.
kore-element-var-VE0-elementvariable $f #ElementVariable kore-element-var-VE0 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE1:SortK{}, dotk{}()), \and{R}(\in{SortK{}, R}(VE2:SortK{}, VE0:SortK{}), \top{R}()))), \and{R}(\equals{SortK{}, R}(append{}(VE1:SortK{}, VE2:SortK{}), VE0:SortK{}), \top{R}())) $)
KSEQ-axiom-0 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 \kore-symbol-dotk ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-append kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( adding 2 new metavariable(s) $)
$v kore-element-var-VE4 kore-element-var-VE3 $.
kore-element-var-VE4-elementvariable $f #ElementVariable kore-element-var-VE4 $.
kore-element-var-VE3-elementvariable $f #ElementVariable kore-element-var-VE3 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE4:SortK{}, kseq{}(VE2:SortKItem{}, VE0:SortK{})), \and{R}(\in{SortK{}, R}(VE3:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortK{}, R}(append{}(VE4:SortK{}, VE3:SortK{}), kseq{}(VE2:SortKItem{}, append{}(VE0:SortK{}, VE1:SortK{}))), \top{R}())) $)
KSEQ-axiom-1 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortK ) \top ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE4 ( \kore-symbol-kseq kore-element-var-VE2 kore-element-var-VE0 ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE3 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-append kore-element-var-VE4 kore-element-var-VE3 ) ( \kore-symbol-kseq kore-element-var-VE2 ( \kore-symbol-append kore-element-var-VE0 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( adding 3 new metavariable(s) $)
$v kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 $.
kore-element-var-V0-elementvariable $f #ElementVariable kore-element-var-V0 $.
kore-element-var-V1-elementvariable $f #ElementVariable kore-element-var-V1 $.
kore-element-var-V2-elementvariable $f #ElementVariable kore-element-var-V2 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 $.

$( axiom {R} \exists{R}(V0:SortK{}, \equals{SortK{}, R}(V0:SortK{}, kseq{}(V1:SortKItem{}, V2:SortK{}))) $)
KSEQ-axiom-2 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

$( axiom {R} \exists{R}(V0:SortK{}, \equals{SortK{}, R}(V0:SortK{}, dotk{}())) $)
KSEQ-axiom-3 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) ) ) ) $.

$( sort SortTCellFragment() $)
$c \kore-sort-SortTCellFragment \kore-sort-SortTCellFragment-symbol $.
IMP-sort-0-is-symbol $a #Symbol \kore-sort-SortTCellFragment-symbol $.
IMP-sort-0-is-pattern $a #Pattern \kore-sort-SortTCellFragment $.
IMP-sort-0-is-sugar $a #Notation \kore-sort-SortTCellFragment \kore-sort-SortTCellFragment-symbol $.
${ IMP-sort-0-substitution $p #Substitution \kore-sort-SortTCellFragment \kore-sort-SortTCellFragment ptn0 xX0 $= ( IMP-sort-0-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-0-sort $a |- ( \kore-is-sort \kore-sort-SortTCellFragment ) $.

$( sort SortKCellOpt() $)
$c \kore-sort-SortKCellOpt \kore-sort-SortKCellOpt-symbol $.
IMP-sort-1-is-symbol $a #Symbol \kore-sort-SortKCellOpt-symbol $.
IMP-sort-1-is-pattern $a #Pattern \kore-sort-SortKCellOpt $.
IMP-sort-1-is-sugar $a #Notation \kore-sort-SortKCellOpt \kore-sort-SortKCellOpt-symbol $.
${ IMP-sort-1-substitution $p #Substitution \kore-sort-SortKCellOpt \kore-sort-SortKCellOpt ptn0 xX0 $= ( IMP-sort-1-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-1-sort $a |- ( \kore-is-sort \kore-sort-SortKCellOpt ) $.

$( sort SortBCell() $)
$c \kore-sort-SortBCell \kore-sort-SortBCell-symbol $.
IMP-sort-2-is-symbol $a #Symbol \kore-sort-SortBCell-symbol $.
IMP-sort-2-is-pattern $a #Pattern \kore-sort-SortBCell $.
IMP-sort-2-is-sugar $a #Notation \kore-sort-SortBCell \kore-sort-SortBCell-symbol $.
${ IMP-sort-2-substitution $p #Substitution \kore-sort-SortBCell \kore-sort-SortBCell ptn0 xX0 $= ( IMP-sort-2-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-2-sort $a |- ( \kore-is-sort \kore-sort-SortBCell ) $.

$( sort SortGeneratedTopCellFragment() $)
$c \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortGeneratedTopCellFragment-symbol $.
IMP-sort-3-is-symbol $a #Symbol \kore-sort-SortGeneratedTopCellFragment-symbol $.
IMP-sort-3-is-pattern $a #Pattern \kore-sort-SortGeneratedTopCellFragment $.
IMP-sort-3-is-sugar $a #Notation \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortGeneratedTopCellFragment-symbol $.
${ IMP-sort-3-substitution $p #Substitution \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortGeneratedTopCellFragment ptn0 xX0 $= ( IMP-sort-3-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-3-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedTopCellFragment ) $.

$( sort SortList() $)
$c \kore-sort-SortList \kore-sort-SortList-symbol $.
IMP-sort-4-is-symbol $a #Symbol \kore-sort-SortList-symbol $.
IMP-sort-4-is-pattern $a #Pattern \kore-sort-SortList $.
IMP-sort-4-is-sugar $a #Notation \kore-sort-SortList \kore-sort-SortList-symbol $.
${ IMP-sort-4-substitution $p #Substitution \kore-sort-SortList \kore-sort-SortList ptn0 xX0 $= ( IMP-sort-4-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-4-sort $a |- ( \kore-is-sort \kore-sort-SortList ) $.

$( sort SortKCell() $)
$c \kore-sort-SortKCell \kore-sort-SortKCell-symbol $.
IMP-sort-5-is-symbol $a #Symbol \kore-sort-SortKCell-symbol $.
IMP-sort-5-is-pattern $a #Pattern \kore-sort-SortKCell $.
IMP-sort-5-is-sugar $a #Notation \kore-sort-SortKCell \kore-sort-SortKCell-symbol $.
${ IMP-sort-5-substitution $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell ptn0 xX0 $= ( IMP-sort-5-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-5-sort $a |- ( \kore-is-sort \kore-sort-SortKCell ) $.

$( sort SortGeneratedTopCell() $)
$c \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell-symbol $.
IMP-sort-6-is-symbol $a #Symbol \kore-sort-SortGeneratedTopCell-symbol $.
IMP-sort-6-is-pattern $a #Pattern \kore-sort-SortGeneratedTopCell $.
IMP-sort-6-is-sugar $a #Notation \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell-symbol $.
${ IMP-sort-6-substitution $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell ptn0 xX0 $= ( IMP-sort-6-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-6-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedTopCell ) $.

$( sort SortGeneratedCounterCell() $)
$c \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell-symbol $.
IMP-sort-7-is-symbol $a #Symbol \kore-sort-SortGeneratedCounterCell-symbol $.
IMP-sort-7-is-pattern $a #Pattern \kore-sort-SortGeneratedCounterCell $.
IMP-sort-7-is-sugar $a #Notation \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell-symbol $.
${ IMP-sort-7-substitution $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell ptn0 xX0 $= ( IMP-sort-7-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-7-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedCounterCell ) $.

$( sort SortBCellOpt() $)
$c \kore-sort-SortBCellOpt \kore-sort-SortBCellOpt-symbol $.
IMP-sort-8-is-symbol $a #Symbol \kore-sort-SortBCellOpt-symbol $.
IMP-sort-8-is-pattern $a #Pattern \kore-sort-SortBCellOpt $.
IMP-sort-8-is-sugar $a #Notation \kore-sort-SortBCellOpt \kore-sort-SortBCellOpt-symbol $.
${ IMP-sort-8-substitution $p #Substitution \kore-sort-SortBCellOpt \kore-sort-SortBCellOpt ptn0 xX0 $= ( IMP-sort-8-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-8-sort $a |- ( \kore-is-sort \kore-sort-SortBCellOpt ) $.

$( sort SortTCellOpt() $)
$c \kore-sort-SortTCellOpt \kore-sort-SortTCellOpt-symbol $.
IMP-sort-9-is-symbol $a #Symbol \kore-sort-SortTCellOpt-symbol $.
IMP-sort-9-is-pattern $a #Pattern \kore-sort-SortTCellOpt $.
IMP-sort-9-is-sugar $a #Notation \kore-sort-SortTCellOpt \kore-sort-SortTCellOpt-symbol $.
${ IMP-sort-9-substitution $p #Substitution \kore-sort-SortTCellOpt \kore-sort-SortTCellOpt ptn0 xX0 $= ( IMP-sort-9-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-9-sort $a |- ( \kore-is-sort \kore-sort-SortTCellOpt ) $.

$( sort SortAExp() $)
$c \kore-sort-SortAExp \kore-sort-SortAExp-symbol $.
IMP-sort-10-is-symbol $a #Symbol \kore-sort-SortAExp-symbol $.
IMP-sort-10-is-pattern $a #Pattern \kore-sort-SortAExp $.
IMP-sort-10-is-sugar $a #Notation \kore-sort-SortAExp \kore-sort-SortAExp-symbol $.
${ IMP-sort-10-substitution $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp ptn0 xX0 $= ( IMP-sort-10-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-10-sort $a |- ( \kore-is-sort \kore-sort-SortAExp ) $.

$( sort SortMap() $)
$c \kore-sort-SortMap \kore-sort-SortMap-symbol $.
IMP-sort-11-is-symbol $a #Symbol \kore-sort-SortMap-symbol $.
IMP-sort-11-is-pattern $a #Pattern \kore-sort-SortMap $.
IMP-sort-11-is-sugar $a #Notation \kore-sort-SortMap \kore-sort-SortMap-symbol $.
${ IMP-sort-11-substitution $p #Substitution \kore-sort-SortMap \kore-sort-SortMap ptn0 xX0 $= ( IMP-sort-11-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-11-sort $a |- ( \kore-is-sort \kore-sort-SortMap ) $.
IMP-sort-11-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortMap ) ( \inh \kore-sort-SortList ) ) ) $.

$( sort SortBlock() $)
$c \kore-sort-SortBlock \kore-sort-SortBlock-symbol $.
IMP-sort-12-is-symbol $a #Symbol \kore-sort-SortBlock-symbol $.
IMP-sort-12-is-pattern $a #Pattern \kore-sort-SortBlock $.
IMP-sort-12-is-sugar $a #Notation \kore-sort-SortBlock \kore-sort-SortBlock-symbol $.
${ IMP-sort-12-substitution $p #Substitution \kore-sort-SortBlock \kore-sort-SortBlock ptn0 xX0 $= ( IMP-sort-12-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-12-sort $a |- ( \kore-is-sort \kore-sort-SortBlock ) $.

$( sort SortGeneratedCounterCellOpt() $)
$c \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortGeneratedCounterCellOpt-symbol $.
IMP-sort-13-is-symbol $a #Symbol \kore-sort-SortGeneratedCounterCellOpt-symbol $.
IMP-sort-13-is-pattern $a #Pattern \kore-sort-SortGeneratedCounterCellOpt $.
IMP-sort-13-is-sugar $a #Notation \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortGeneratedCounterCellOpt-symbol $.
${ IMP-sort-13-substitution $p #Substitution \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortGeneratedCounterCellOpt ptn0 xX0 $= ( IMP-sort-13-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-13-sort $a |- ( \kore-is-sort \kore-sort-SortGeneratedCounterCellOpt ) $.

$( sort SortKConfigVar() $)
$c \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar-symbol $.
IMP-sort-14-is-symbol $a #Symbol \kore-sort-SortKConfigVar-symbol $.
IMP-sort-14-is-pattern $a #Pattern \kore-sort-SortKConfigVar $.
IMP-sort-14-is-sugar $a #Notation \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar-symbol $.
${ IMP-sort-14-substitution $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar ptn0 xX0 $= ( IMP-sort-14-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-14-sort $a |- ( \kore-is-sort \kore-sort-SortKConfigVar ) $.
IMP-sort-14-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortKConfigVar ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-14-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortKConfigVar ) ( \inh \kore-sort-SortMap ) ) ) $.

$( sort SortInt() $)
$c \kore-sort-SortInt \kore-sort-SortInt-symbol $.
IMP-sort-15-is-symbol $a #Symbol \kore-sort-SortInt-symbol $.
IMP-sort-15-is-pattern $a #Pattern \kore-sort-SortInt $.
IMP-sort-15-is-sugar $a #Notation \kore-sort-SortInt \kore-sort-SortInt-symbol $.
${ IMP-sort-15-substitution $p #Substitution \kore-sort-SortInt \kore-sort-SortInt ptn0 xX0 $= ( IMP-sort-15-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-15-sort $a |- ( \kore-is-sort \kore-sort-SortInt ) $.
IMP-sort-15-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-15-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-15-hooked-sort-disjoint-with-SortKConfigVar $a |- ( \not ( \and ( \inh \kore-sort-SortInt ) ( \inh \kore-sort-SortKConfigVar ) ) ) $.

$( sort SortId2() $)
$c \kore-sort-SortId2 \kore-sort-SortId2-symbol $.
IMP-sort-16-is-symbol $a #Symbol \kore-sort-SortId2-symbol $.
IMP-sort-16-is-pattern $a #Pattern \kore-sort-SortId2 $.
IMP-sort-16-is-sugar $a #Notation \kore-sort-SortId2 \kore-sort-SortId2-symbol $.
${ IMP-sort-16-substitution $p #Substitution \kore-sort-SortId2 \kore-sort-SortId2 ptn0 xX0 $= ( IMP-sort-16-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-16-sort $a |- ( \kore-is-sort \kore-sort-SortId2 ) $.

$( sort SortSet() $)
$c \kore-sort-SortSet \kore-sort-SortSet-symbol $.
IMP-sort-17-is-symbol $a #Symbol \kore-sort-SortSet-symbol $.
IMP-sort-17-is-pattern $a #Pattern \kore-sort-SortSet $.
IMP-sort-17-is-sugar $a #Notation \kore-sort-SortSet \kore-sort-SortSet-symbol $.
${ IMP-sort-17-substitution $p #Substitution \kore-sort-SortSet \kore-sort-SortSet ptn0 xX0 $= ( IMP-sort-17-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-17-sort $a |- ( \kore-is-sort \kore-sort-SortSet ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortKConfigVar $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortKConfigVar ) ) ) $.
IMP-sort-17-hooked-sort-disjoint-with-SortInt $a |- ( \not ( \and ( \inh \kore-sort-SortSet ) ( \inh \kore-sort-SortInt ) ) ) $.

$( sort SortPgm() $)
$c \kore-sort-SortPgm \kore-sort-SortPgm-symbol $.
IMP-sort-18-is-symbol $a #Symbol \kore-sort-SortPgm-symbol $.
IMP-sort-18-is-pattern $a #Pattern \kore-sort-SortPgm $.
IMP-sort-18-is-sugar $a #Notation \kore-sort-SortPgm \kore-sort-SortPgm-symbol $.
${ IMP-sort-18-substitution $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm ptn0 xX0 $= ( IMP-sort-18-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-18-sort $a |- ( \kore-is-sort \kore-sort-SortPgm ) $.

$( sort SortKResult() $)
$c \kore-sort-SortKResult \kore-sort-SortKResult-symbol $.
IMP-sort-19-is-symbol $a #Symbol \kore-sort-SortKResult-symbol $.
IMP-sort-19-is-pattern $a #Pattern \kore-sort-SortKResult $.
IMP-sort-19-is-sugar $a #Notation \kore-sort-SortKResult \kore-sort-SortKResult-symbol $.
${ IMP-sort-19-substitution $p #Substitution \kore-sort-SortKResult \kore-sort-SortKResult ptn0 xX0 $= ( IMP-sort-19-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-19-sort $a |- ( \kore-is-sort \kore-sort-SortKResult ) $.

$( sort SortTCell() $)
$c \kore-sort-SortTCell \kore-sort-SortTCell-symbol $.
IMP-sort-20-is-symbol $a #Symbol \kore-sort-SortTCell-symbol $.
IMP-sort-20-is-pattern $a #Pattern \kore-sort-SortTCell $.
IMP-sort-20-is-sugar $a #Notation \kore-sort-SortTCell \kore-sort-SortTCell-symbol $.
${ IMP-sort-20-substitution $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell ptn0 xX0 $= ( IMP-sort-20-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-20-sort $a |- ( \kore-is-sort \kore-sort-SortTCell ) $.

$( sort SortStmt() $)
$c \kore-sort-SortStmt \kore-sort-SortStmt-symbol $.
IMP-sort-21-is-symbol $a #Symbol \kore-sort-SortStmt-symbol $.
IMP-sort-21-is-pattern $a #Pattern \kore-sort-SortStmt $.
IMP-sort-21-is-sugar $a #Notation \kore-sort-SortStmt \kore-sort-SortStmt-symbol $.
${ IMP-sort-21-substitution $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt ptn0 xX0 $= ( IMP-sort-21-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-21-sort $a |- ( \kore-is-sort \kore-sort-SortStmt ) $.

$( sort SortBool() $)
$c \kore-sort-SortBool \kore-sort-SortBool-symbol $.
IMP-sort-22-is-symbol $a #Symbol \kore-sort-SortBool-symbol $.
IMP-sort-22-is-pattern $a #Pattern \kore-sort-SortBool $.
IMP-sort-22-is-sugar $a #Notation \kore-sort-SortBool \kore-sort-SortBool-symbol $.
${ IMP-sort-22-substitution $p #Substitution \kore-sort-SortBool \kore-sort-SortBool ptn0 xX0 $= ( IMP-sort-22-is-pattern substitution-disjoint ) CBAD $. $}
IMP-sort-22-sort $a |- ( \kore-is-sort \kore-sort-SortBool ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortList $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortList ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortMap $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortMap ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortKConfigVar $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortKConfigVar ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortInt $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortInt ) ) ) $.
IMP-sort-22-hooked-sort-disjoint-with-SortSet $a |- ( \not ( \and ( \inh \kore-sort-SortBool ) ( \inh \kore-sort-SortSet ) ) ) $.

$( symbol Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-0-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-0-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-0-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
notation-cache-7 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern IMP-symbol-0-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-8 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern IMP-symbol-0-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-0-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-0-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern substitution-disjoint substitution-app notation-cache-7 notation-cache-8 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-9 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-0-is-pattern IMP-symbol-0-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-0-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-0-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-0-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-0-is-pattern application-context-app-right notation-cache-9 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-0-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-1-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-1-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-1-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
notation-cache-10 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-1-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-1-is-pattern IMP-symbol-1-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-11 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-1-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-1-is-pattern IMP-symbol-1-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-1-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-1-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-1-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-1-is-pattern substitution-disjoint substitution-app notation-cache-10 notation-cache-11 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-12 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-1-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-1-is-pattern IMP-symbol-1-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-1-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-1-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-1-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-1-is-pattern application-context-app-right notation-cache-12 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-1-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-2-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-2-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-2-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
notation-cache-13 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-2-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-2-is-pattern IMP-symbol-2-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-14 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-2-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-2-is-pattern IMP-symbol-2-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-2-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-2-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-2-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-2-is-pattern substitution-disjoint substitution-app notation-cache-13 notation-cache-14 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-15 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-2-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-2-is-pattern IMP-symbol-2-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-2-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-2-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-2-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-2-is-pattern application-context-app-right notation-cache-15 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-2-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-3-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-3-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-3-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
notation-cache-16 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-3-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-3-is-pattern IMP-symbol-3-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-17 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-3-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-3-is-pattern IMP-symbol-3-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-3-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-3-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-3-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-3-is-pattern substitution-disjoint substitution-app notation-cache-16 notation-cache-17 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-18 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-3-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-3-is-pattern IMP-symbol-3-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-3-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-3-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-3-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-3-is-pattern application-context-app-right notation-cache-18 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-3-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-4-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-4-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-4-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
notation-cache-19 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-4-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-4-is-pattern IMP-symbol-4-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-20 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-4-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-4-is-pattern IMP-symbol-4-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-4-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-4-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-4-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-4-is-pattern substitution-disjoint substitution-app notation-cache-19 notation-cache-20 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-21 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-4-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-4-is-pattern IMP-symbol-4-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-4-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-4-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-4-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-4-is-pattern application-context-app-right notation-cache-21 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-4-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-5-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-5-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-5-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
notation-cache-22 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-5-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-5-is-pattern IMP-symbol-5-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-23 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-5-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-5-is-pattern IMP-symbol-5-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-5-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-5-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-5-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-5-is-pattern substitution-disjoint substitution-app notation-cache-22 notation-cache-23 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-24 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-5-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-5-is-pattern IMP-symbol-5-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-5-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-5-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-5-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-5-is-pattern application-context-app-right notation-cache-24 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-5-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-6-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-6-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-6-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
notation-cache-25 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-6-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-6-is-pattern IMP-symbol-6-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-26 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-6-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-6-is-pattern IMP-symbol-6-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-6-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-6-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-6-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-6-is-pattern substitution-disjoint substitution-app notation-cache-25 notation-cache-26 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-27 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-6-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-6-is-pattern IMP-symbol-6-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-6-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-6-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-6-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-6-is-pattern application-context-app-right notation-cache-27 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-6-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-7-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-7-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-7-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
notation-cache-28 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-7-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-7-is-pattern IMP-symbol-7-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-29 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-7-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-7-is-pattern IMP-symbol-7-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-7-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-7-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-7-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-7-is-pattern substitution-disjoint substitution-app notation-cache-28 notation-cache-29 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-30 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-7-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-7-is-pattern IMP-symbol-7-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-7-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-7-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-7-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-7-is-pattern application-context-app-right notation-cache-30 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-7-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-8-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol $.
IMP-symbol-8-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $.
IMP-symbol-8-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $.
notation-cache-31 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn1 ) $= ( IMP-symbol-8-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-8-is-pattern IMP-symbol-8-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-32 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn2 ) $= ( IMP-symbol-8-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-8-is-pattern IMP-symbol-8-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-8-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-8-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-8-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-8-is-pattern substitution-disjoint substitution-app notation-cache-31 notation-cache-32 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-33 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'-symbol ptn0 ) $= ( IMP-symbol-8-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-8-is-pattern IMP-symbol-8-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-8-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-8-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) $= ( IMP-symbol-8-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-8-is-pattern application-context-app-right notation-cache-33 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-8-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-9-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol $.
IMP-symbol-9-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-9-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $.
notation-cache-34 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-9-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-9-is-pattern IMP-symbol-9-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-35 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-9-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-9-is-pattern IMP-symbol-9-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-9-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-9-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-9-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-9-is-pattern substitution-disjoint substitution-app notation-cache-34 notation-cache-35 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-36 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-9-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-9-is-pattern IMP-symbol-9-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-9-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-9-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-9-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-9-is-pattern application-context-app-right notation-cache-36 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-9-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'(SortK{}): SortKItem{} $)
$c \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'-symbol $.
IMP-symbol-10-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'-symbol $.
IMP-symbol-10-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn0 ) $.
IMP-symbol-10-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'-symbol ptn0 ) $.
notation-cache-37 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'-symbol ptn1 ) $= ( IMP-symbol-10-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-10-is-pattern IMP-symbol-10-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-38 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'-symbol ptn2 ) $= ( IMP-symbol-10-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-10-is-pattern IMP-symbol-10-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-10-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-10-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn1 ) ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-10-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-10-is-pattern substitution-disjoint substitution-app notation-cache-37 notation-cache-38 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-39 $p #Notation ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'-symbol ptn0 ) $= ( IMP-symbol-10-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-10-is-pattern IMP-symbol-10-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-10-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-10-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn0 ) $= ( IMP-symbol-10-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-10-is-pattern application-context-app-right notation-cache-39 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-10-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort(SortBool{}, SortSort, SortSort): SortSort $)
$c \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol $.
IMP-symbol-11-is-symbol $a #Symbol \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol $.
IMP-symbol-11-is-pattern $a #Pattern ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $.
IMP-symbol-11-is-sugar $a #Notation ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $.

$( adding 4 new metavariable(s) $)
$v ptn5 ptn6 ptn7 ptn8 $.
ptn5-pattern $f #Pattern ptn5 $.
ptn6-pattern $f #Pattern ptn6 $.
ptn7-pattern $f #Pattern ptn7 $.
ptn8-pattern $f #Pattern ptn8 $.
${ IMP-symbol-11-substitution.0 $e #Substitution ptn1 ptn5 ptn0 xX0 $.
   IMP-symbol-11-substitution.1 $e #Substitution ptn2 ptn6 ptn0 xX0 $.
   IMP-symbol-11-substitution.2 $e #Substitution ptn3 ptn7 ptn0 xX0 $.
   IMP-symbol-11-substitution.3 $e #Substitution ptn4 ptn8 ptn0 xX0 $.
   IMP-symbol-11-substitution $p #Substitution ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn1 ptn2 ptn3 ptn4 ) ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn5 ptn6 ptn7 ptn8 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-11-is-symbol symbol-is-pattern IMP-symbol-11-is-pattern substitution-app notation-reflexivity IMP-symbol-11-is-sugar notation-transitivity substitution-disjoint notation-substitution ) PQCODOEOFOPQGOHOIOJOBCDEFRGHIJRBABPQCODOEOFPQGOHOIOJABPQCODOEPQGOHOIABPQCODPQGOHABPQCPQGAPQBAUCKSLSMSNSCDEFRPQCODOEOFOPQCODOEOFOCDEFUAPQCODOEOFOTUBGHIJRPQGOHOIOJOPQGOHOIOJOGHIJUAPQGOHOIOJOTUBBTUD $. $}
notation-cache-40 $p #Notation ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $= ( app-is-pattern IMP-symbol-11-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-11-is-pattern IMP-symbol-11-is-sugar notation-transitivity ) ABCDJFGAEBECEDEFGAEBECEDEABCDKFGAEBECEDFGAEBECEDFGAEBECFGAEBECFGAEBFGAEBFGAFGAFGHAHIBHICHIDHIL $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-11-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-11-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-11-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-11-is-pattern application-context-app-right notation-cache-40 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAHIBAFLJJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-11-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-11-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-11-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-11-is-pattern application-context-app-right notation-cache-40 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAFLJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn3 $.
   IMP-symbol-11-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-11-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-11-is-symbol symbol-is-pattern IMP-symbol-11-is-pattern application-context-app-right application-context-app-left notation-cache-40 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAHIBGCGDAFKLBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-11-application-context-3.0 $e #ApplicationContext xX0 ptn3 $.
   IMP-symbol-11-application-context-3 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-11-is-symbol symbol-is-pattern IMP-symbol-11-is-pattern application-context-app-right notation-cache-40 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAFKBCDELM $. $}

$( adding 1 new metavariable(s) $)
$v kore-sort-var-SortSort $.
kore-sort-var-SortSort-elementvariable $f #ElementVariable kore-sort-var-SortSort $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort $.
IMP-symbol-11-sorting $a |- ( \imp ( \and ( \and ( \and ( \kore-is-sort ptn0 ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ptn2 ptn0 ) ) ( \in-sort ptn3 ptn0 ) ) ( \in-sort ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort ptn0 ptn1 ptn2 ptn3 ) ptn0 ) ) $.

$( symbol Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int(SortInt{}): SortAExp{} $)
$c \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol $.
IMP-symbol-12-is-symbol $a #Symbol \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol $.
IMP-symbol-12-is-pattern $a #Pattern ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) $.
IMP-symbol-12-is-sugar $a #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn0 ) $.
notation-cache-41 $p #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn1 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-12-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-12-is-pattern IMP-symbol-12-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-42 $p #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn2 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-12-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-12-is-pattern IMP-symbol-12-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-12-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-12-substitution $p #Substitution ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn1 ) ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-12-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-12-is-pattern substitution-disjoint substitution-app notation-cache-41 notation-cache-42 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-43 $p #Notation ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) ( \app \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-12-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-12-is-pattern IMP-symbol-12-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-12-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-12-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) $= ( IMP-symbol-12-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-12-is-pattern application-context-app-right notation-cache-43 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-12-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int ptn0 ) \kore-sort-SortAExp ) ) $.

$( symbol Lbl'Stop'List(): SortList{} $)
$c \kore-symbol-Lbl'Stop'List \kore-symbol-Lbl'Stop'List-symbol $.
IMP-symbol-13-is-symbol $a #Symbol \kore-symbol-Lbl'Stop'List-symbol $.
IMP-symbol-13-is-pattern $a #Pattern \kore-symbol-Lbl'Stop'List $.
IMP-symbol-13-is-sugar $a #Notation \kore-symbol-Lbl'Stop'List \kore-symbol-Lbl'Stop'List-symbol $.
${ IMP-symbol-13-substitution $p #Substitution \kore-symbol-Lbl'Stop'List \kore-symbol-Lbl'Stop'List ptn0 xX0 $= ( IMP-symbol-13-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-13-sorting $a |- ( \in-sort \kore-symbol-Lbl'Stop'List \kore-sort-SortList ) $.

$( symbol Lbl'Stop'Map(): SortMap{} $)
$c \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map-symbol $.
IMP-symbol-14-is-symbol $a #Symbol \kore-symbol-Lbl'Stop'Map-symbol $.
IMP-symbol-14-is-pattern $a #Pattern \kore-symbol-Lbl'Stop'Map $.
IMP-symbol-14-is-sugar $a #Notation \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map-symbol $.
${ IMP-symbol-14-substitution $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map ptn0 xX0 $= ( IMP-symbol-14-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-14-sorting $a |- ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) $.

$( symbol Lbl'Stop'Set(): SortSet{} $)
$c \kore-symbol-Lbl'Stop'Set \kore-symbol-Lbl'Stop'Set-symbol $.
IMP-symbol-15-is-symbol $a #Symbol \kore-symbol-Lbl'Stop'Set-symbol $.
IMP-symbol-15-is-pattern $a #Pattern \kore-symbol-Lbl'Stop'Set $.
IMP-symbol-15-is-sugar $a #Notation \kore-symbol-Lbl'Stop'Set \kore-symbol-Lbl'Stop'Set-symbol $.
${ IMP-symbol-15-substitution $p #Substitution \kore-symbol-Lbl'Stop'Set \kore-symbol-Lbl'Stop'Set ptn0 xX0 $= ( IMP-symbol-15-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-15-sorting $a |- ( \in-sort \kore-symbol-Lbl'Stop'Set \kore-sort-SortSet ) $.

$( symbol Lbl'-LT-'T'-GT-'(SortKCell{}, SortBCell{}): SortTCell{} $)
$c \kore-symbol-Lbl'-LT-'T'-GT-' \kore-symbol-Lbl'-LT-'T'-GT-'-symbol $.
IMP-symbol-16-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'T'-GT-'-symbol $.
IMP-symbol-16-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) $.
IMP-symbol-16-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn0 ) ptn1 ) $.
notation-cache-44 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-16-is-symbol symbol-is-pattern IMP-symbol-16-is-pattern IMP-symbol-16-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-45 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-16-is-symbol symbol-is-pattern IMP-symbol-16-is-pattern IMP-symbol-16-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-16-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-16-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-16-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-16-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-16-is-pattern substitution-app substitution-disjoint notation-cache-44 notation-cache-45 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-46 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-16-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-16-is-pattern IMP-symbol-16-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-16-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-16-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) $= ( IMP-symbol-16-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-16-is-pattern application-context-app-right application-context-app-left notation-cache-46 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-16-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-16-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-16-is-symbol symbol-is-pattern IMP-symbol-16-is-pattern application-context-app-right notation-cache-46 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-16-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKCell ) ( \in-sort ptn1 \kore-sort-SortBCell ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ptn0 ptn1 ) \kore-sort-SortTCell ) ) $.

$( symbol Lbl'-LT-'T'-GT-'-fragment(SortKCellOpt{}, SortBCellOpt{}): SortTCellFragment{} $)
$c \kore-symbol-Lbl'-LT-'T'-GT-'-fragment \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol $.
IMP-symbol-17-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol $.
IMP-symbol-17-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) $.
IMP-symbol-17-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn0 ) ptn1 ) $.
notation-cache-47 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-17-is-symbol symbol-is-pattern IMP-symbol-17-is-pattern IMP-symbol-17-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-48 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-17-is-symbol symbol-is-pattern IMP-symbol-17-is-pattern IMP-symbol-17-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-17-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-17-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-17-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-17-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-17-is-pattern substitution-app substitution-disjoint notation-cache-47 notation-cache-48 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-49 $p #Notation ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'T'-GT-'-fragment-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-17-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-17-is-pattern IMP-symbol-17-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-17-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-17-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) $= ( IMP-symbol-17-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-17-is-pattern application-context-app-right application-context-app-left notation-cache-49 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-17-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-17-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-17-is-symbol symbol-is-pattern IMP-symbol-17-is-pattern application-context-app-right notation-cache-49 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-17-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKCellOpt ) ( \in-sort ptn1 \kore-sort-SortBCellOpt ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment ptn0 ptn1 ) \kore-sort-SortTCellFragment ) ) $.

$( symbol Lbl'-LT-'b'-GT-'(SortInt{}): SortBCell{} $)
$c \kore-symbol-Lbl'-LT-'b'-GT-' \kore-symbol-Lbl'-LT-'b'-GT-'-symbol $.
IMP-symbol-18-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'b'-GT-'-symbol $.
IMP-symbol-18-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn0 ) $.
IMP-symbol-18-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'b'-GT-'-symbol ptn0 ) $.
notation-cache-50 $p #Notation ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn1 ) ( \app \kore-symbol-Lbl'-LT-'b'-GT-'-symbol ptn1 ) $= ( IMP-symbol-18-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-18-is-pattern IMP-symbol-18-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-51 $p #Notation ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn2 ) ( \app \kore-symbol-Lbl'-LT-'b'-GT-'-symbol ptn2 ) $= ( IMP-symbol-18-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-18-is-pattern IMP-symbol-18-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-18-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-18-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn1 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn2 ) ptn0 xX0 $= ( IMP-symbol-18-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-18-is-pattern substitution-disjoint substitution-app notation-cache-50 notation-cache-51 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-52 $p #Notation ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'b'-GT-'-symbol ptn0 ) $= ( IMP-symbol-18-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-18-is-pattern IMP-symbol-18-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-18-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-18-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn0 ) $= ( IMP-symbol-18-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-18-is-pattern application-context-app-right notation-cache-52 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-18-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'-LT-'b'-GT-' ptn0 ) \kore-sort-SortBCell ) ) $.

$( symbol Lbl'-LT-'generatedCounter'-GT-'(SortInt{}): SortGeneratedCounterCell{} $)
$c \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol $.
IMP-symbol-19-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol $.
IMP-symbol-19-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) $.
IMP-symbol-19-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn0 ) $.
notation-cache-53 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn1 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn1 ) $= ( IMP-symbol-19-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-19-is-pattern IMP-symbol-19-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-54 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn2 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn2 ) $= ( IMP-symbol-19-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-19-is-pattern IMP-symbol-19-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-19-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-19-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn1 ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn2 ) ptn0 xX0 $= ( IMP-symbol-19-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-19-is-pattern substitution-disjoint substitution-app notation-cache-53 notation-cache-54 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-55 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'generatedCounter'-GT-'-symbol ptn0 ) $= ( IMP-symbol-19-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-19-is-pattern IMP-symbol-19-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-19-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-19-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) $= ( IMP-symbol-19-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-19-is-pattern application-context-app-right notation-cache-55 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-19-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ptn0 ) \kore-sort-SortGeneratedCounterCell ) ) $.

$( symbol Lbl'-LT-'generatedTop'-GT-'(SortTCell{}, SortGeneratedCounterCell{}): SortGeneratedTopCell{} $)
$c \kore-symbol-Lbl'-LT-'generatedTop'-GT-' \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol $.
IMP-symbol-20-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol $.
IMP-symbol-20-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) $.
IMP-symbol-20-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn0 ) ptn1 ) $.
notation-cache-56 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-20-is-symbol symbol-is-pattern IMP-symbol-20-is-pattern IMP-symbol-20-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-57 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-20-is-symbol symbol-is-pattern IMP-symbol-20-is-pattern IMP-symbol-20-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-20-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-20-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-20-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-20-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-20-is-pattern substitution-app substitution-disjoint notation-cache-56 notation-cache-57 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-58 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-20-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-20-is-pattern IMP-symbol-20-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-20-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-20-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) $= ( IMP-symbol-20-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-20-is-pattern application-context-app-right application-context-app-left notation-cache-58 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-20-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-20-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-20-is-symbol symbol-is-pattern IMP-symbol-20-is-pattern application-context-app-right notation-cache-58 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-20-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortTCell ) ( \in-sort ptn1 \kore-sort-SortGeneratedCounterCell ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ptn0 ptn1 ) \kore-sort-SortGeneratedTopCell ) ) $.

$( symbol Lbl'-LT-'generatedTop'-GT-'-fragment(SortTCellOpt{}, SortGeneratedCounterCellOpt{}): SortGeneratedTopCellFragment{} $)
$c \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol $.
IMP-symbol-21-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol $.
IMP-symbol-21-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) $.
IMP-symbol-21-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn0 ) ptn1 ) $.
notation-cache-59 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-21-is-symbol symbol-is-pattern IMP-symbol-21-is-pattern IMP-symbol-21-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-60 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-21-is-symbol symbol-is-pattern IMP-symbol-21-is-pattern IMP-symbol-21-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-21-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-21-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-21-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn1 ptn2 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-21-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-21-is-pattern substitution-app substitution-disjoint notation-cache-59 notation-cache-60 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-61 $p #Notation ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-21-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-21-is-pattern IMP-symbol-21-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-21-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-21-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) $= ( IMP-symbol-21-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-21-is-pattern application-context-app-right application-context-app-left notation-cache-61 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-21-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-21-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-21-is-symbol symbol-is-pattern IMP-symbol-21-is-pattern application-context-app-right notation-cache-61 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-21-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortTCellOpt ) ( \in-sort ptn1 \kore-sort-SortGeneratedCounterCellOpt ) ) ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment ptn0 ptn1 ) \kore-sort-SortGeneratedTopCellFragment ) ) $.

$( symbol Lbl'-LT-'k'-GT-'(SortK{}): SortKCell{} $)
$c \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-Lbl'-LT-'k'-GT-'-symbol $.
IMP-symbol-22-is-symbol $a #Symbol \kore-symbol-Lbl'-LT-'k'-GT-'-symbol $.
IMP-symbol-22-is-pattern $a #Pattern ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) $.
IMP-symbol-22-is-sugar $a #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn0 ) $.
notation-cache-62 $p #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn1 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn1 ) $= ( IMP-symbol-22-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-22-is-pattern IMP-symbol-22-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-63 $p #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn2 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn2 ) $= ( IMP-symbol-22-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-22-is-pattern IMP-symbol-22-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-22-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-22-substitution $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn1 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn2 ) ptn0 xX0 $= ( IMP-symbol-22-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-22-is-pattern substitution-disjoint substitution-app notation-cache-62 notation-cache-63 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-64 $p #Notation ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) ( \app \kore-symbol-Lbl'-LT-'k'-GT-'-symbol ptn0 ) $= ( IMP-symbol-22-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-22-is-pattern IMP-symbol-22-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-22-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-22-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) $= ( IMP-symbol-22-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-22-is-pattern application-context-app-right notation-cache-64 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-22-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' ptn0 ) \kore-sort-SortKCell ) ) $.

$( symbol LblList'Coln'get(SortList{}, SortInt{}): SortKItem{} $)
$c \kore-symbol-LblList'Coln'get \kore-symbol-LblList'Coln'get-symbol $.
IMP-symbol-23-is-symbol $a #Symbol \kore-symbol-LblList'Coln'get-symbol $.
IMP-symbol-23-is-pattern $a #Pattern ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) $.
IMP-symbol-23-is-sugar $a #Notation ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn0 ) ptn1 ) $.
notation-cache-65 $p #Notation ( \kore-symbol-LblList'Coln'get ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-23-is-symbol symbol-is-pattern IMP-symbol-23-is-pattern IMP-symbol-23-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-66 $p #Notation ( \kore-symbol-LblList'Coln'get ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-23-is-symbol symbol-is-pattern IMP-symbol-23-is-pattern IMP-symbol-23-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-23-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-23-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-23-substitution $p #Substitution ( \kore-symbol-LblList'Coln'get ptn1 ptn2 ) ( \kore-symbol-LblList'Coln'get ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-23-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-23-is-pattern substitution-app substitution-disjoint notation-cache-65 notation-cache-66 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-67 $p #Notation ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblList'Coln'get-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-23-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-23-is-pattern IMP-symbol-23-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-23-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-23-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) $= ( IMP-symbol-23-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-23-is-pattern application-context-app-right application-context-app-left notation-cache-67 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-23-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-23-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-23-is-symbol symbol-is-pattern IMP-symbol-23-is-pattern application-context-app-right notation-cache-67 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-23-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblList'Coln'get ptn0 ptn1 ) \kore-sort-SortKItem ) ) $.

$( symbol LblList'Coln'range(SortList{}, SortInt{}, SortInt{}): SortList{} $)
$c \kore-symbol-LblList'Coln'range \kore-symbol-LblList'Coln'range-symbol $.
IMP-symbol-24-is-symbol $a #Symbol \kore-symbol-LblList'Coln'range-symbol $.
IMP-symbol-24-is-pattern $a #Pattern ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $.
IMP-symbol-24-is-sugar $a #Notation ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblList'Coln'range-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-24-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-24-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-24-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-24-substitution $p #Substitution ( \kore-symbol-LblList'Coln'range ptn1 ptn2 ptn3 ) ( \kore-symbol-LblList'Coln'range ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-24-is-symbol symbol-is-pattern IMP-symbol-24-is-pattern substitution-app notation-reflexivity IMP-symbol-24-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-68 $p #Notation ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblList'Coln'range-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-24-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-24-is-pattern IMP-symbol-24-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-24-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-24-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-24-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-24-is-pattern application-context-app-right notation-cache-68 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-24-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-24-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-24-is-symbol symbol-is-pattern IMP-symbol-24-is-pattern application-context-app-right application-context-app-left notation-cache-68 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-24-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-24-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-24-is-symbol symbol-is-pattern IMP-symbol-24-is-pattern application-context-app-right notation-cache-68 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-24-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblList'Coln'range ptn0 ptn1 ptn2 ) \kore-sort-SortList ) ) $.

$( symbol LblListItem(SortKItem{}): SortList{} $)
$c \kore-symbol-LblListItem \kore-symbol-LblListItem-symbol $.
IMP-symbol-25-is-symbol $a #Symbol \kore-symbol-LblListItem-symbol $.
IMP-symbol-25-is-pattern $a #Pattern ( \kore-symbol-LblListItem ptn0 ) $.
IMP-symbol-25-is-sugar $a #Notation ( \kore-symbol-LblListItem ptn0 ) ( \app \kore-symbol-LblListItem-symbol ptn0 ) $.
notation-cache-69 $p #Notation ( \kore-symbol-LblListItem ptn1 ) ( \app \kore-symbol-LblListItem-symbol ptn1 ) $= ( IMP-symbol-25-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-25-is-pattern IMP-symbol-25-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-70 $p #Notation ( \kore-symbol-LblListItem ptn2 ) ( \app \kore-symbol-LblListItem-symbol ptn2 ) $= ( IMP-symbol-25-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-25-is-pattern IMP-symbol-25-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-25-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-25-substitution $p #Substitution ( \kore-symbol-LblListItem ptn1 ) ( \kore-symbol-LblListItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-25-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-25-is-pattern substitution-disjoint substitution-app notation-cache-69 notation-cache-70 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-71 $p #Notation ( \kore-symbol-LblListItem ptn0 ) ( \app \kore-symbol-LblListItem-symbol ptn0 ) $= ( IMP-symbol-25-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-25-is-pattern IMP-symbol-25-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-25-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-25-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblListItem ptn0 ) $= ( IMP-symbol-25-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-25-is-pattern application-context-app-right notation-cache-71 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-25-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ( \kore-symbol-LblListItem ptn0 ) \kore-sort-SortList ) ) $.

$( symbol LblMap'Coln'lookup(SortMap{}, SortKItem{}): SortKItem{} $)
$c \kore-symbol-LblMap'Coln'lookup \kore-symbol-LblMap'Coln'lookup-symbol $.
IMP-symbol-26-is-symbol $a #Symbol \kore-symbol-LblMap'Coln'lookup-symbol $.
IMP-symbol-26-is-pattern $a #Pattern ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) $.
IMP-symbol-26-is-sugar $a #Notation ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn0 ) ptn1 ) $.
notation-cache-72 $p #Notation ( \kore-symbol-LblMap'Coln'lookup ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-26-is-symbol symbol-is-pattern IMP-symbol-26-is-pattern IMP-symbol-26-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-73 $p #Notation ( \kore-symbol-LblMap'Coln'lookup ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-26-is-symbol symbol-is-pattern IMP-symbol-26-is-pattern IMP-symbol-26-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-26-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-26-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-26-substitution $p #Substitution ( \kore-symbol-LblMap'Coln'lookup ptn1 ptn2 ) ( \kore-symbol-LblMap'Coln'lookup ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-26-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-26-is-pattern substitution-app substitution-disjoint notation-cache-72 notation-cache-73 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-74 $p #Notation ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblMap'Coln'lookup-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-26-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-26-is-pattern IMP-symbol-26-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-26-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-26-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) $= ( IMP-symbol-26-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-26-is-pattern application-context-app-right application-context-app-left notation-cache-74 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-26-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-26-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-26-is-symbol symbol-is-pattern IMP-symbol-26-is-pattern application-context-app-right notation-cache-74 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-26-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblMap'Coln'lookup ptn0 ptn1 ) \kore-sort-SortKItem ) ) $.

$( symbol LblMap'Coln'update(SortMap{}, SortKItem{}, SortKItem{}): SortMap{} $)
$c \kore-symbol-LblMap'Coln'update \kore-symbol-LblMap'Coln'update-symbol $.
IMP-symbol-27-is-symbol $a #Symbol \kore-symbol-LblMap'Coln'update-symbol $.
IMP-symbol-27-is-pattern $a #Pattern ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $.
IMP-symbol-27-is-sugar $a #Notation ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblMap'Coln'update-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-27-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-27-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-27-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-27-substitution $p #Substitution ( \kore-symbol-LblMap'Coln'update ptn1 ptn2 ptn3 ) ( \kore-symbol-LblMap'Coln'update ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-27-is-symbol symbol-is-pattern IMP-symbol-27-is-pattern substitution-app notation-reflexivity IMP-symbol-27-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-75 $p #Notation ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblMap'Coln'update-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-27-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-27-is-pattern IMP-symbol-27-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-27-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-27-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-27-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-27-is-pattern application-context-app-right notation-cache-75 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-27-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-27-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-27-is-symbol symbol-is-pattern IMP-symbol-27-is-pattern application-context-app-right application-context-app-left notation-cache-75 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-27-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-27-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-27-is-symbol symbol-is-pattern IMP-symbol-27-is-pattern application-context-app-right notation-cache-75 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-27-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ptn2 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblMap'Coln'update ptn0 ptn1 ptn2 ) \kore-sort-SortMap ) ) $.

$( symbol LblSet'Coln'difference(SortSet{}, SortSet{}): SortSet{} $)
$c \kore-symbol-LblSet'Coln'difference \kore-symbol-LblSet'Coln'difference-symbol $.
IMP-symbol-28-is-symbol $a #Symbol \kore-symbol-LblSet'Coln'difference-symbol $.
IMP-symbol-28-is-pattern $a #Pattern ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) $.
IMP-symbol-28-is-sugar $a #Notation ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn0 ) ptn1 ) $.
notation-cache-76 $p #Notation ( \kore-symbol-LblSet'Coln'difference ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-28-is-symbol symbol-is-pattern IMP-symbol-28-is-pattern IMP-symbol-28-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-77 $p #Notation ( \kore-symbol-LblSet'Coln'difference ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-28-is-symbol symbol-is-pattern IMP-symbol-28-is-pattern IMP-symbol-28-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-28-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-28-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-28-substitution $p #Substitution ( \kore-symbol-LblSet'Coln'difference ptn1 ptn2 ) ( \kore-symbol-LblSet'Coln'difference ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-28-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-28-is-pattern substitution-app substitution-disjoint notation-cache-76 notation-cache-77 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-78 $p #Notation ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'difference-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-28-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-28-is-pattern IMP-symbol-28-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-28-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-28-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) $= ( IMP-symbol-28-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-28-is-pattern application-context-app-right application-context-app-left notation-cache-78 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-28-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-28-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-28-is-symbol symbol-is-pattern IMP-symbol-28-is-pattern application-context-app-right notation-cache-78 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-28-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblSet'Coln'difference ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$( symbol LblSet'Coln'in(SortKItem{}, SortSet{}): SortBool{} $)
$c \kore-symbol-LblSet'Coln'in \kore-symbol-LblSet'Coln'in-symbol $.
IMP-symbol-29-is-symbol $a #Symbol \kore-symbol-LblSet'Coln'in-symbol $.
IMP-symbol-29-is-pattern $a #Pattern ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) $.
IMP-symbol-29-is-sugar $a #Notation ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn0 ) ptn1 ) $.
notation-cache-79 $p #Notation ( \kore-symbol-LblSet'Coln'in ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-29-is-symbol symbol-is-pattern IMP-symbol-29-is-pattern IMP-symbol-29-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-80 $p #Notation ( \kore-symbol-LblSet'Coln'in ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-29-is-symbol symbol-is-pattern IMP-symbol-29-is-pattern IMP-symbol-29-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-29-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-29-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-29-substitution $p #Substitution ( \kore-symbol-LblSet'Coln'in ptn1 ptn2 ) ( \kore-symbol-LblSet'Coln'in ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-29-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-29-is-pattern substitution-app substitution-disjoint notation-cache-79 notation-cache-80 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-81 $p #Notation ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblSet'Coln'in-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-29-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-29-is-pattern IMP-symbol-29-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-29-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-29-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) $= ( IMP-symbol-29-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-29-is-pattern application-context-app-right application-context-app-left notation-cache-81 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-29-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-29-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-29-is-symbol symbol-is-pattern IMP-symbol-29-is-pattern application-context-app-right notation-cache-81 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-29-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblSet'Coln'in ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol LblSetItem(SortKItem{}): SortSet{} $)
$c \kore-symbol-LblSetItem \kore-symbol-LblSetItem-symbol $.
IMP-symbol-30-is-symbol $a #Symbol \kore-symbol-LblSetItem-symbol $.
IMP-symbol-30-is-pattern $a #Pattern ( \kore-symbol-LblSetItem ptn0 ) $.
IMP-symbol-30-is-sugar $a #Notation ( \kore-symbol-LblSetItem ptn0 ) ( \app \kore-symbol-LblSetItem-symbol ptn0 ) $.
notation-cache-82 $p #Notation ( \kore-symbol-LblSetItem ptn1 ) ( \app \kore-symbol-LblSetItem-symbol ptn1 ) $= ( IMP-symbol-30-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-30-is-pattern IMP-symbol-30-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-83 $p #Notation ( \kore-symbol-LblSetItem ptn2 ) ( \app \kore-symbol-LblSetItem-symbol ptn2 ) $= ( IMP-symbol-30-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-30-is-pattern IMP-symbol-30-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-30-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-30-substitution $p #Substitution ( \kore-symbol-LblSetItem ptn1 ) ( \kore-symbol-LblSetItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-30-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-30-is-pattern substitution-disjoint substitution-app notation-cache-82 notation-cache-83 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-84 $p #Notation ( \kore-symbol-LblSetItem ptn0 ) ( \app \kore-symbol-LblSetItem-symbol ptn0 ) $= ( IMP-symbol-30-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-30-is-pattern IMP-symbol-30-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-30-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-30-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblSetItem ptn0 ) $= ( IMP-symbol-30-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-30-is-pattern application-context-app-right notation-cache-84 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-30-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ( \kore-symbol-LblSetItem ptn0 ) \kore-sort-SortSet ) ) $.

$( symbol Lbl'UndsPerc'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsPerc'Int'Unds' \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol $.
IMP-symbol-31-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol $.
IMP-symbol-31-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-31-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-85 $p #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-31-is-symbol symbol-is-pattern IMP-symbol-31-is-pattern IMP-symbol-31-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-86 $p #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-31-is-symbol symbol-is-pattern IMP-symbol-31-is-pattern IMP-symbol-31-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-31-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-31-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-31-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-31-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-31-is-pattern substitution-app substitution-disjoint notation-cache-85 notation-cache-86 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-87 $p #Notation ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPerc'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-31-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-31-is-pattern IMP-symbol-31-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-31-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-31-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-31-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-31-is-pattern application-context-app-right application-context-app-left notation-cache-87 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-31-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-31-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-31-is-symbol symbol-is-pattern IMP-symbol-31-is-pattern application-context-app-right notation-cache-87 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-31-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp(SortAExp{}, SortAExp{}): SortAExp{} $)
$c \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-32-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-32-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-32-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
notation-cache-88 $p #Notation ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-32-is-symbol symbol-is-pattern IMP-symbol-32-is-pattern IMP-symbol-32-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-89 $p #Notation ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-32-is-symbol symbol-is-pattern IMP-symbol-32-is-pattern IMP-symbol-32-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-32-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-32-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-32-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-32-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-32-is-pattern substitution-app substitution-disjoint notation-cache-88 notation-cache-89 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-90 $p #Notation ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-32-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-32-is-pattern IMP-symbol-32-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-32-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-32-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-32-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-32-is-pattern application-context-app-right application-context-app-left notation-cache-90 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-32-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-32-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-32-is-symbol symbol-is-pattern IMP-symbol-32-is-pattern application-context-app-right notation-cache-90 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-32-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$( symbol Lbl'UndsAnd-'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsAnd-'Int'Unds' \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol $.
IMP-symbol-33-is-symbol $a #Symbol \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol $.
IMP-symbol-33-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-33-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-91 $p #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-33-is-symbol symbol-is-pattern IMP-symbol-33-is-pattern IMP-symbol-33-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-92 $p #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-33-is-symbol symbol-is-pattern IMP-symbol-33-is-pattern IMP-symbol-33-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-33-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-33-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-33-substitution $p #Substitution ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-33-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-33-is-pattern substitution-app substitution-disjoint notation-cache-91 notation-cache-92 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-93 $p #Notation ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsAnd-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-33-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-33-is-pattern IMP-symbol-33-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-33-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-33-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-33-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-33-is-pattern application-context-app-right application-context-app-left notation-cache-93 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-33-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-33-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-33-is-symbol symbol-is-pattern IMP-symbol-33-is-pattern application-context-app-right notation-cache-93 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-33-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsStar'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsStar'Int'Unds' \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol $.
IMP-symbol-34-is-symbol $a #Symbol \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol $.
IMP-symbol-34-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-34-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-94 $p #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-34-is-symbol symbol-is-pattern IMP-symbol-34-is-pattern IMP-symbol-34-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-95 $p #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-34-is-symbol symbol-is-pattern IMP-symbol-34-is-pattern IMP-symbol-34-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-34-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-34-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-34-substitution $p #Substitution ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-34-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-34-is-pattern substitution-app substitution-disjoint notation-cache-94 notation-cache-95 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-96 $p #Notation ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStar'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-34-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-34-is-pattern IMP-symbol-34-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-34-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-34-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-34-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-34-is-pattern application-context-app-right application-context-app-left notation-cache-96 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-34-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-34-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-34-is-symbol symbol-is-pattern IMP-symbol-34-is-pattern application-context-app-right notation-cache-96 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-34-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsStar'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp(SortAExp{}, SortAExp{}): SortAExp{} $)
$c \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-35-is-symbol $a #Symbol \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-35-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-35-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
notation-cache-97 $p #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-35-is-symbol symbol-is-pattern IMP-symbol-35-is-pattern IMP-symbol-35-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-98 $p #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-35-is-symbol symbol-is-pattern IMP-symbol-35-is-pattern IMP-symbol-35-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-35-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-35-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-35-substitution $p #Substitution ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-35-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-35-is-pattern substitution-app substitution-disjoint notation-cache-97 notation-cache-98 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-99 $p #Notation ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-35-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-35-is-pattern IMP-symbol-35-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-35-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-35-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-35-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-35-is-pattern application-context-app-right application-context-app-left notation-cache-99 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-35-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-35-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-35-is-symbol symbol-is-pattern IMP-symbol-35-is-pattern application-context-app-right notation-cache-99 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-35-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$( symbol Lbl'UndsPlus'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsPlus'Int'Unds' \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol $.
IMP-symbol-36-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol $.
IMP-symbol-36-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-36-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-100 $p #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-36-is-symbol symbol-is-pattern IMP-symbol-36-is-pattern IMP-symbol-36-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-101 $p #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-36-is-symbol symbol-is-pattern IMP-symbol-36-is-pattern IMP-symbol-36-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-36-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-36-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-36-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-36-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-36-is-pattern substitution-app substitution-disjoint notation-cache-100 notation-cache-101 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-102 $p #Notation ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlus'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-36-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-36-is-pattern IMP-symbol-36-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-36-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-36-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-36-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-36-is-pattern application-context-app-right application-context-app-left notation-cache-102 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-36-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-36-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-36-is-symbol symbol-is-pattern IMP-symbol-36-is-pattern application-context-app-right notation-cache-102 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-36-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp(SortAExp{}, SortAExp{}): SortAExp{} $)
$c \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-37-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-37-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-37-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
notation-cache-103 $p #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-37-is-symbol symbol-is-pattern IMP-symbol-37-is-pattern IMP-symbol-37-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-104 $p #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-37-is-symbol symbol-is-pattern IMP-symbol-37-is-pattern IMP-symbol-37-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-37-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-37-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-37-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-37-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-37-is-pattern substitution-app substitution-disjoint notation-cache-103 notation-cache-104 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-105 $p #Notation ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-37-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-37-is-pattern IMP-symbol-37-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-37-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-37-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-37-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-37-is-pattern application-context-app-right application-context-app-left notation-cache-105 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-37-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-37-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-37-is-symbol symbol-is-pattern IMP-symbol-37-is-pattern application-context-app-right notation-cache-105 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-37-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$( symbol Lbl'Unds'-Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'Unds'-Int'Unds' \kore-symbol-Lbl'Unds'-Int'Unds'-symbol $.
IMP-symbol-38-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'-Int'Unds'-symbol $.
IMP-symbol-38-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-38-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-106 $p #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-38-is-symbol symbol-is-pattern IMP-symbol-38-is-pattern IMP-symbol-38-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-107 $p #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-38-is-symbol symbol-is-pattern IMP-symbol-38-is-pattern IMP-symbol-38-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-38-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-38-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-38-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-38-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-38-is-pattern substitution-app substitution-disjoint notation-cache-106 notation-cache-107 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-108 $p #Notation ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-38-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-38-is-pattern IMP-symbol-38-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-38-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-38-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-38-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-38-is-pattern application-context-app-right application-context-app-left notation-cache-108 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-38-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-38-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-38-is-symbol symbol-is-pattern IMP-symbol-38-is-pattern application-context-app-right notation-cache-108 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-38-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'-Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map(SortMap{}, SortMap{}): SortMap{} $)
$c \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-39-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-39-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-39-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $.
notation-cache-109 $p #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-39-is-symbol symbol-is-pattern IMP-symbol-39-is-pattern IMP-symbol-39-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-110 $p #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-39-is-symbol symbol-is-pattern IMP-symbol-39-is-pattern IMP-symbol-39-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-39-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-39-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-39-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-39-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-39-is-pattern substitution-app substitution-disjoint notation-cache-109 notation-cache-110 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-111 $p #Notation ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-39-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-39-is-pattern IMP-symbol-39-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-39-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-39-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-39-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-39-is-pattern application-context-app-right application-context-app-left notation-cache-111 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-39-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-39-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-39-is-symbol symbol-is-pattern IMP-symbol-39-is-pattern application-context-app-right notation-cache-111 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-39-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$( symbol Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp(SortAExp{}, SortAExp{}): SortAExp{} $)
$c \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-40-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-40-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-40-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
notation-cache-112 $p #Notation ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-40-is-symbol symbol-is-pattern IMP-symbol-40-is-pattern IMP-symbol-40-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-113 $p #Notation ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-40-is-symbol symbol-is-pattern IMP-symbol-40-is-pattern IMP-symbol-40-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-40-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-40-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-40-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-40-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-40-is-pattern substitution-app substitution-disjoint notation-cache-112 notation-cache-113 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-114 $p #Notation ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-40-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-40-is-pattern IMP-symbol-40-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-40-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-40-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-40-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-40-is-pattern application-context-app-right application-context-app-left notation-cache-114 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-40-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-40-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-40-is-symbol symbol-is-pattern IMP-symbol-40-is-pattern application-context-app-right notation-cache-114 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-40-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$( symbol Lbl'UndsSlsh'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsSlsh'Int'Unds' \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol $.
IMP-symbol-41-is-symbol $a #Symbol \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol $.
IMP-symbol-41-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-41-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-115 $p #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-41-is-symbol symbol-is-pattern IMP-symbol-41-is-pattern IMP-symbol-41-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-116 $p #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-41-is-symbol symbol-is-pattern IMP-symbol-41-is-pattern IMP-symbol-41-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-41-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-41-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-41-substitution $p #Substitution ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-41-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-41-is-pattern substitution-app substitution-disjoint notation-cache-115 notation-cache-116 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-117 $p #Notation ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlsh'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-41-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-41-is-pattern IMP-symbol-41-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-41-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-41-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-41-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-41-is-pattern application-context-app-right application-context-app-left notation-cache-117 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-41-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-41-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-41-is-symbol symbol-is-pattern IMP-symbol-41-is-pattern application-context-app-right notation-cache-117 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-41-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp(SortAExp{}, SortAExp{}): SortAExp{} $)
$c \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-42-is-symbol $a #Symbol \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol $.
IMP-symbol-42-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-42-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $.
notation-cache-118 $p #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-42-is-symbol symbol-is-pattern IMP-symbol-42-is-pattern IMP-symbol-42-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-119 $p #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-42-is-symbol symbol-is-pattern IMP-symbol-42-is-pattern IMP-symbol-42-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-42-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-42-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-42-substitution $p #Substitution ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-42-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-42-is-pattern substitution-app substitution-disjoint notation-cache-118 notation-cache-119 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-120 $p #Notation ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-42-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-42-is-pattern IMP-symbol-42-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-42-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-42-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-42-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-42-is-pattern application-context-app-right application-context-app-left notation-cache-120 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-42-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-42-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-42-is-symbol symbol-is-pattern IMP-symbol-42-is-pattern application-context-app-right notation-cache-120 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-42-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortAExp ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp ptn0 ptn1 ) \kore-sort-SortAExp ) ) $.

$( symbol Lbl'Unds-LT--LT-'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol $.
IMP-symbol-43-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol $.
IMP-symbol-43-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-43-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-121 $p #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-43-is-symbol symbol-is-pattern IMP-symbol-43-is-pattern IMP-symbol-43-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-122 $p #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-43-is-symbol symbol-is-pattern IMP-symbol-43-is-pattern IMP-symbol-43-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-43-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-43-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-43-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-43-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-43-is-pattern substitution-app substitution-disjoint notation-cache-121 notation-cache-122 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-123 $p #Notation ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-43-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-43-is-pattern IMP-symbol-43-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-43-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-43-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-43-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-43-is-pattern application-context-app-right application-context-app-left notation-cache-123 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-43-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-43-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-43-is-symbol symbol-is-pattern IMP-symbol-43-is-pattern application-context-app-right notation-cache-123 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-43-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'Unds-LT-Eqls'Int'Unds'(SortInt{}, SortInt{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol $.
IMP-symbol-44-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol $.
IMP-symbol-44-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-44-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-124 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-44-is-symbol symbol-is-pattern IMP-symbol-44-is-pattern IMP-symbol-44-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-125 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-44-is-symbol symbol-is-pattern IMP-symbol-44-is-pattern IMP-symbol-44-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-44-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-44-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-44-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-44-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-44-is-pattern substitution-app substitution-disjoint notation-cache-124 notation-cache-125 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-126 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-44-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-44-is-pattern IMP-symbol-44-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-44-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-44-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-44-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-44-is-pattern application-context-app-right application-context-app-left notation-cache-126 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-44-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-44-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-44-is-symbol symbol-is-pattern IMP-symbol-44-is-pattern application-context-app-right notation-cache-126 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-44-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map(SortMap{}, SortMap{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol $.
IMP-symbol-45-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol $.
IMP-symbol-45-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-45-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $.
notation-cache-127 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-45-is-symbol symbol-is-pattern IMP-symbol-45-is-pattern IMP-symbol-45-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-128 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-45-is-symbol symbol-is-pattern IMP-symbol-45-is-pattern IMP-symbol-45-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-45-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-45-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-45-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-45-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-45-is-pattern substitution-app substitution-disjoint notation-cache-127 notation-cache-128 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-129 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-45-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-45-is-pattern IMP-symbol-45-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-45-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-45-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-45-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-45-is-pattern application-context-app-right application-context-app-left notation-cache-129 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-45-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-45-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-45-is-symbol symbol-is-pattern IMP-symbol-45-is-pattern application-context-app-right notation-cache-129 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-45-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set(SortSet{}, SortSet{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol $.
IMP-symbol-46-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol $.
IMP-symbol-46-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-46-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $.
notation-cache-130 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-46-is-symbol symbol-is-pattern IMP-symbol-46-is-pattern IMP-symbol-46-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-131 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-46-is-symbol symbol-is-pattern IMP-symbol-46-is-pattern IMP-symbol-46-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-46-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-46-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-46-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-46-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-46-is-pattern substitution-app substitution-disjoint notation-cache-130 notation-cache-131 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-132 $p #Notation ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-46-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-46-is-pattern IMP-symbol-46-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-46-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-46-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-46-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-46-is-pattern application-context-app-right application-context-app-left notation-cache-132 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-46-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-46-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-46-is-symbol symbol-is-pattern IMP-symbol-46-is-pattern application-context-app-right notation-cache-132 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-46-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds-LT-'Int'Unds'(SortInt{}, SortInt{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds-LT-'Int'Unds' \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol $.
IMP-symbol-47-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol $.
IMP-symbol-47-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-47-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-133 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-47-is-symbol symbol-is-pattern IMP-symbol-47-is-pattern IMP-symbol-47-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-134 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-47-is-symbol symbol-is-pattern IMP-symbol-47-is-pattern IMP-symbol-47-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-47-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-47-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-47-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-47-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-47-is-pattern substitution-app substitution-disjoint notation-cache-133 notation-cache-134 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-135 $p #Notation ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-LT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-47-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-47-is-pattern IMP-symbol-47-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-47-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-47-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-47-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-47-is-pattern application-context-app-right application-context-app-left notation-cache-135 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-47-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-47-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-47-is-symbol symbol-is-pattern IMP-symbol-47-is-pattern application-context-app-right notation-cache-135 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-47-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol $.
IMP-symbol-48-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol $.
IMP-symbol-48-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) $.
IMP-symbol-48-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-136 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-48-is-symbol symbol-is-pattern IMP-symbol-48-is-pattern IMP-symbol-48-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-137 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-48-is-symbol symbol-is-pattern IMP-symbol-48-is-pattern IMP-symbol-48-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-48-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-48-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-48-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-48-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-48-is-pattern substitution-app substitution-disjoint notation-cache-136 notation-cache-137 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-138 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-48-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-48-is-pattern IMP-symbol-48-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-48-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-48-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-48-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-48-is-pattern application-context-app-right application-context-app-left notation-cache-138 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-48-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-48-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-48-is-symbol symbol-is-pattern IMP-symbol-48-is-pattern application-context-app-right notation-cache-138 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-48-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'UndsEqlsSlshEqls'Int'Unds'(SortInt{}, SortInt{}): SortBool{} $)
$c \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol $.
IMP-symbol-49-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol $.
IMP-symbol-49-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-49-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-139 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-49-is-symbol symbol-is-pattern IMP-symbol-49-is-pattern IMP-symbol-49-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-140 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-49-is-symbol symbol-is-pattern IMP-symbol-49-is-pattern IMP-symbol-49-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-49-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-49-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-49-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-49-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-49-is-pattern substitution-app substitution-disjoint notation-cache-139 notation-cache-140 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-141 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-49-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-49-is-pattern IMP-symbol-49-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-49-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-49-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-49-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-49-is-pattern application-context-app-right application-context-app-left notation-cache-141 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-49-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-49-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-49-is-symbol symbol-is-pattern IMP-symbol-49-is-pattern application-context-app-right notation-cache-141 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-49-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'UndsEqlsSlshEqls'K'Unds'(SortK{}, SortK{}): SortBool{} $)
$c \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol $.
IMP-symbol-50-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol $.
IMP-symbol-50-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) $.
IMP-symbol-50-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-142 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-50-is-symbol symbol-is-pattern IMP-symbol-50-is-pattern IMP-symbol-50-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-143 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-50-is-symbol symbol-is-pattern IMP-symbol-50-is-pattern IMP-symbol-50-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-50-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-50-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-50-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-50-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-50-is-pattern substitution-app substitution-disjoint notation-cache-142 notation-cache-143 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-144 $p #Notation ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-50-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-50-is-pattern IMP-symbol-50-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-50-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-50-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) $= ( IMP-symbol-50-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-50-is-pattern application-context-app-right application-context-app-left notation-cache-144 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-50-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-50-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-50-is-symbol symbol-is-pattern IMP-symbol-50-is-pattern application-context-app-right notation-cache-144 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-50-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'UndsEqlsEqls'Bool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol $.
IMP-symbol-51-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol $.
IMP-symbol-51-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) $.
IMP-symbol-51-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-145 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-51-is-symbol symbol-is-pattern IMP-symbol-51-is-pattern IMP-symbol-51-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-146 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-51-is-symbol symbol-is-pattern IMP-symbol-51-is-pattern IMP-symbol-51-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-51-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-51-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-51-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-51-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-51-is-pattern substitution-app substitution-disjoint notation-cache-145 notation-cache-146 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-147 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-51-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-51-is-pattern IMP-symbol-51-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-51-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-51-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-51-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-51-is-pattern application-context-app-right application-context-app-left notation-cache-147 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-51-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-51-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-51-is-symbol symbol-is-pattern IMP-symbol-51-is-pattern application-context-app-right notation-cache-147 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-51-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'UndsEqlsEqls'Int'Unds'(SortInt{}, SortInt{}): SortBool{} $)
$c \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol $.
IMP-symbol-52-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol $.
IMP-symbol-52-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-52-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-148 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-52-is-symbol symbol-is-pattern IMP-symbol-52-is-pattern IMP-symbol-52-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-149 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-52-is-symbol symbol-is-pattern IMP-symbol-52-is-pattern IMP-symbol-52-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-52-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-52-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-52-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-52-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-52-is-pattern substitution-app substitution-disjoint notation-cache-148 notation-cache-149 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-150 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-52-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-52-is-pattern IMP-symbol-52-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-52-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-52-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-52-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-52-is-pattern application-context-app-right application-context-app-left notation-cache-150 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-52-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-52-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-52-is-symbol symbol-is-pattern IMP-symbol-52-is-pattern application-context-app-right notation-cache-150 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-52-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'UndsEqlsEqls'K'Unds'(SortK{}, SortK{}): SortBool{} $)
$c \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol $.
IMP-symbol-53-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol $.
IMP-symbol-53-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) $.
IMP-symbol-53-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-151 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-53-is-symbol symbol-is-pattern IMP-symbol-53-is-pattern IMP-symbol-53-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-152 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-53-is-symbol symbol-is-pattern IMP-symbol-53-is-pattern IMP-symbol-53-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-53-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-53-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-53-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-53-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-53-is-pattern substitution-app substitution-disjoint notation-cache-151 notation-cache-152 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-153 $p #Notation ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsEqls'K'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-53-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-53-is-pattern IMP-symbol-53-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-53-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-53-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) $= ( IMP-symbol-53-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-53-is-pattern application-context-app-right application-context-app-left notation-cache-153 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-53-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-53-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-53-is-symbol symbol-is-pattern IMP-symbol-53-is-pattern application-context-app-right notation-cache-153 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-53-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ptn1 \kore-sort-SortK ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp(SortId2{}, SortAExp{}): SortStmt{} $)
$c \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp-symbol $.
IMP-symbol-54-is-symbol $a #Symbol \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp-symbol $.
IMP-symbol-54-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn0 ptn1 ) $.
IMP-symbol-54-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp-symbol ptn0 ) ptn1 ) $.
notation-cache-154 $p #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-54-is-symbol symbol-is-pattern IMP-symbol-54-is-pattern IMP-symbol-54-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-155 $p #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-54-is-symbol symbol-is-pattern IMP-symbol-54-is-pattern IMP-symbol-54-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-54-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-54-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-54-substitution $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-54-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-54-is-pattern substitution-app substitution-disjoint notation-cache-154 notation-cache-155 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-156 $p #Notation ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-54-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-54-is-pattern IMP-symbol-54-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-54-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-54-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn0 ptn1 ) $= ( IMP-symbol-54-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-54-is-pattern application-context-app-right application-context-app-left notation-cache-156 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-54-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-54-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-54-is-symbol symbol-is-pattern IMP-symbol-54-is-pattern application-context-app-right notation-cache-156 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-54-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortId2 ) ( \in-sort ptn1 \kore-sort-SortAExp ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp ptn0 ptn1 ) \kore-sort-SortStmt ) ) $.

$( symbol Lbl'Unds-GT-Eqls'Int'Unds'(SortInt{}, SortInt{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol $.
IMP-symbol-55-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol $.
IMP-symbol-55-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-55-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-157 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-55-is-symbol symbol-is-pattern IMP-symbol-55-is-pattern IMP-symbol-55-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-158 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-55-is-symbol symbol-is-pattern IMP-symbol-55-is-pattern IMP-symbol-55-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-55-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-55-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-55-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-55-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-55-is-pattern substitution-app substitution-disjoint notation-cache-157 notation-cache-158 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-159 $p #Notation ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-55-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-55-is-pattern IMP-symbol-55-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-55-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-55-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-55-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-55-is-pattern application-context-app-right application-context-app-left notation-cache-159 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-55-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-55-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-55-is-symbol symbol-is-pattern IMP-symbol-55-is-pattern application-context-app-right notation-cache-159 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-55-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds-GT--GT-'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol $.
IMP-symbol-56-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol $.
IMP-symbol-56-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-56-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-160 $p #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-56-is-symbol symbol-is-pattern IMP-symbol-56-is-pattern IMP-symbol-56-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-161 $p #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-56-is-symbol symbol-is-pattern IMP-symbol-56-is-pattern IMP-symbol-56-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-56-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-56-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-56-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-56-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-56-is-pattern substitution-app substitution-disjoint notation-cache-160 notation-cache-161 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-162 $p #Notation ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-56-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-56-is-pattern IMP-symbol-56-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-56-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-56-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-56-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-56-is-pattern application-context-app-right application-context-app-left notation-cache-162 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-56-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-56-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-56-is-symbol symbol-is-pattern IMP-symbol-56-is-pattern application-context-app-right notation-cache-162 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-56-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'Unds-GT-'Int'Unds'(SortInt{}, SortInt{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds-GT-'Int'Unds' \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol $.
IMP-symbol-57-is-symbol $a #Symbol \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol $.
IMP-symbol-57-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-57-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-163 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-57-is-symbol symbol-is-pattern IMP-symbol-57-is-pattern IMP-symbol-57-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-164 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-57-is-symbol symbol-is-pattern IMP-symbol-57-is-pattern IMP-symbol-57-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-57-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-57-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-57-substitution $p #Substitution ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-57-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-57-is-pattern substitution-app substitution-disjoint notation-cache-163 notation-cache-164 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-165 $p #Notation ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds-GT-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-57-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-57-is-pattern IMP-symbol-57-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-57-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-57-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-57-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-57-is-pattern application-context-app-right application-context-app-left notation-cache-165 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-57-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-57-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-57-is-symbol symbol-is-pattern IMP-symbol-57-is-pattern application-context-app-right notation-cache-165 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-57-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'List'Unds'(SortList{}, SortList{}): SortList{} $)
$c \kore-symbol-Lbl'Unds'List'Unds' \kore-symbol-Lbl'Unds'List'Unds'-symbol $.
IMP-symbol-58-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'List'Unds'-symbol $.
IMP-symbol-58-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) $.
IMP-symbol-58-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-166 $p #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-58-is-symbol symbol-is-pattern IMP-symbol-58-is-pattern IMP-symbol-58-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-167 $p #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-58-is-symbol symbol-is-pattern IMP-symbol-58-is-pattern IMP-symbol-58-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-58-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-58-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-58-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'List'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'List'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-58-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-58-is-pattern substitution-app substitution-disjoint notation-cache-166 notation-cache-167 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-168 $p #Notation ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'List'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-58-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-58-is-pattern IMP-symbol-58-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-58-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-58-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) $= ( IMP-symbol-58-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-58-is-pattern application-context-app-right application-context-app-left notation-cache-168 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-58-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-58-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-58-is-symbol symbol-is-pattern IMP-symbol-58-is-pattern application-context-app-right notation-cache-168 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-58-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortList ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'List'Unds' ptn0 ptn1 ) \kore-sort-SortList ) ) $.

$( symbol Lbl'Unds'Map'Unds'(SortMap{}, SortMap{}): SortMap{} $)
$c \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Unds'Map'Unds'-symbol $.
IMP-symbol-59-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'Map'Unds'-symbol $.
IMP-symbol-59-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) $.
IMP-symbol-59-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-169 $p #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-59-is-symbol symbol-is-pattern IMP-symbol-59-is-pattern IMP-symbol-59-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-170 $p #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-59-is-symbol symbol-is-pattern IMP-symbol-59-is-pattern IMP-symbol-59-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-59-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-59-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-59-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-59-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-59-is-pattern substitution-app substitution-disjoint notation-cache-169 notation-cache-170 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-171 $p #Notation ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Map'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-59-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-59-is-pattern IMP-symbol-59-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-59-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-59-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) $= ( IMP-symbol-59-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-59-is-pattern application-context-app-right application-context-app-left notation-cache-171 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-59-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-59-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-59-is-symbol symbol-is-pattern IMP-symbol-59-is-pattern application-context-app-right notation-cache-171 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-59-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$( symbol Lbl'Unds'Set'Unds'(SortSet{}, SortSet{}): SortSet{} $)
$c \kore-symbol-Lbl'Unds'Set'Unds' \kore-symbol-Lbl'Unds'Set'Unds'-symbol $.
IMP-symbol-60-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'Set'Unds'-symbol $.
IMP-symbol-60-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) $.
IMP-symbol-60-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-172 $p #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-60-is-symbol symbol-is-pattern IMP-symbol-60-is-pattern IMP-symbol-60-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-173 $p #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-60-is-symbol symbol-is-pattern IMP-symbol-60-is-pattern IMP-symbol-60-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-60-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-60-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-60-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'Set'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'Set'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-60-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-60-is-pattern substitution-app substitution-disjoint notation-cache-172 notation-cache-173 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-174 $p #Notation ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'Set'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-60-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-60-is-pattern IMP-symbol-60-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-60-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-60-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) $= ( IMP-symbol-60-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-60-is-pattern application-context-app-right application-context-app-left notation-cache-174 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-60-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-60-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-60-is-symbol symbol-is-pattern IMP-symbol-60-is-pattern application-context-app-right notation-cache-174 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-60-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'Set'Unds' ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$( symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem(SortList{}, SortInt{}, SortKItem{}): SortList{} $)
$c \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-61-is-symbol $a #Symbol \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-61-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $.
IMP-symbol-61-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-61-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-61-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-61-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-61-substitution $p #Substitution ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn1 ptn2 ptn3 ) ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-61-is-symbol symbol-is-pattern IMP-symbol-61-is-pattern substitution-app notation-reflexivity IMP-symbol-61-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-175 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-61-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-61-is-pattern IMP-symbol-61-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-61-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-61-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-61-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-61-is-pattern application-context-app-right notation-cache-175 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-61-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-61-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-61-is-symbol symbol-is-pattern IMP-symbol-61-is-pattern application-context-app-right application-context-app-left notation-cache-175 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-61-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-61-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-61-is-symbol symbol-is-pattern IMP-symbol-61-is-pattern application-context-app-right notation-cache-175 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-61-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ) \kore-sort-SortList ) ) $.

$( symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'(SortMap{}, SortKItem{}): SortMap{} $)
$c \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol $.
IMP-symbol-62-is-symbol $a #Symbol \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol $.
IMP-symbol-62-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) $.
IMP-symbol-62-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn0 ) ptn1 ) $.
notation-cache-176 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-62-is-symbol symbol-is-pattern IMP-symbol-62-is-pattern IMP-symbol-62-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-177 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-62-is-symbol symbol-is-pattern IMP-symbol-62-is-pattern IMP-symbol-62-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-62-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-62-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-62-substitution $p #Substitution ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-62-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-62-is-pattern substitution-app substitution-disjoint notation-cache-176 notation-cache-177 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-178 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-62-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-62-is-pattern IMP-symbol-62-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-62-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-62-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) $= ( IMP-symbol-62-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-62-is-pattern application-context-app-right application-context-app-left notation-cache-178 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-62-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-62-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-62-is-symbol symbol-is-pattern IMP-symbol-62-is-pattern application-context-app-right notation-cache-178 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-62-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$( symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem(SortMap{}, SortKItem{}, SortKItem{}): SortKItem{} $)
$c \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol $.
IMP-symbol-63-is-symbol $a #Symbol \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol $.
IMP-symbol-63-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $.
IMP-symbol-63-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-63-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-63-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-63-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-63-substitution $p #Substitution ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn1 ptn2 ptn3 ) ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-63-is-symbol symbol-is-pattern IMP-symbol-63-is-pattern substitution-app notation-reflexivity IMP-symbol-63-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-179 $p #Notation ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-63-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-63-is-pattern IMP-symbol-63-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-63-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-63-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-63-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-63-is-pattern application-context-app-right notation-cache-179 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-63-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-63-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-63-is-symbol symbol-is-pattern IMP-symbol-63-is-pattern application-context-app-right application-context-app-left notation-cache-179 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-63-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-63-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-63-is-symbol symbol-is-pattern IMP-symbol-63-is-pattern application-context-app-right notation-cache-179 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-63-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ptn2 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem ptn0 ptn1 ptn2 ) \kore-sort-SortKItem ) ) $.

$( symbol Lbl'UndsXor-Perc'Int'UndsUnds'(SortInt{}, SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol $.
IMP-symbol-64-is-symbol $a #Symbol \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol $.
IMP-symbol-64-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $.
IMP-symbol-64-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-64-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-64-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-64-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-64-substitution $p #Substitution ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn1 ptn2 ptn3 ) ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-64-is-symbol symbol-is-pattern IMP-symbol-64-is-pattern substitution-app notation-reflexivity IMP-symbol-64-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-180 $p #Notation ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds'-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-64-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-64-is-pattern IMP-symbol-64-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-64-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-64-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-64-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-64-is-pattern application-context-app-right notation-cache-180 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-64-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-64-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-64-is-symbol symbol-is-pattern IMP-symbol-64-is-pattern application-context-app-right application-context-app-left notation-cache-180 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-64-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-64-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-64-is-symbol symbol-is-pattern IMP-symbol-64-is-pattern application-context-app-right notation-cache-180 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-64-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsXor-Perc'Int'UndsUnds' ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsXor-'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsXor-'Int'Unds' \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol $.
IMP-symbol-65-is-symbol $a #Symbol \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol $.
IMP-symbol-65-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-65-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-181 $p #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-65-is-symbol symbol-is-pattern IMP-symbol-65-is-pattern IMP-symbol-65-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-182 $p #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-65-is-symbol symbol-is-pattern IMP-symbol-65-is-pattern IMP-symbol-65-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-65-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-65-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-65-substitution $p #Substitution ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-65-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-65-is-pattern substitution-app substitution-disjoint notation-cache-181 notation-cache-182 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-183 $p #Notation ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsXor-'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-65-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-65-is-pattern IMP-symbol-65-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-65-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-65-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-65-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-65-is-pattern application-context-app-right application-context-app-left notation-cache-183 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-65-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-65-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-65-is-symbol symbol-is-pattern IMP-symbol-65-is-pattern application-context-app-right notation-cache-183 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-65-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsXor-'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt(SortStmt{}, SortStmt{}): SortStmt{} $)
$c \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol $.
IMP-symbol-66-is-symbol $a #Symbol \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol $.
IMP-symbol-66-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) $.
IMP-symbol-66-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn0 ) ptn1 ) $.
notation-cache-184 $p #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-66-is-symbol symbol-is-pattern IMP-symbol-66-is-pattern IMP-symbol-66-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-185 $p #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-66-is-symbol symbol-is-pattern IMP-symbol-66-is-pattern IMP-symbol-66-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-66-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-66-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-66-substitution $p #Substitution ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-66-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-66-is-pattern substitution-app substitution-disjoint notation-cache-184 notation-cache-185 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-186 $p #Notation ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-66-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-66-is-pattern IMP-symbol-66-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-66-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-66-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) $= ( IMP-symbol-66-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-66-is-pattern application-context-app-right application-context-app-left notation-cache-186 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-66-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-66-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-66-is-symbol symbol-is-pattern IMP-symbol-66-is-pattern application-context-app-right notation-cache-186 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-66-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortStmt ) ( \in-sort ptn1 \kore-sort-SortStmt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt ptn0 ptn1 ) \kore-sort-SortStmt ) ) $.

$( symbol Lbl'Unds'andBool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'andBool'Unds' \kore-symbol-Lbl'Unds'andBool'Unds'-symbol $.
IMP-symbol-67-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'andBool'Unds'-symbol $.
IMP-symbol-67-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-67-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-187 $p #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-67-is-symbol symbol-is-pattern IMP-symbol-67-is-pattern IMP-symbol-67-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-188 $p #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-67-is-symbol symbol-is-pattern IMP-symbol-67-is-pattern IMP-symbol-67-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-67-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-67-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-67-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-67-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-67-is-pattern substitution-app substitution-disjoint notation-cache-187 notation-cache-188 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-189 $p #Notation ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-67-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-67-is-pattern IMP-symbol-67-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-67-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-67-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-67-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-67-is-pattern application-context-app-right application-context-app-left notation-cache-189 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-67-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-67-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-67-is-symbol symbol-is-pattern IMP-symbol-67-is-pattern application-context-app-right notation-cache-189 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-67-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'andBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'andThenBool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'andThenBool'Unds' \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol $.
IMP-symbol-68-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol $.
IMP-symbol-68-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-68-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-190 $p #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-68-is-symbol symbol-is-pattern IMP-symbol-68-is-pattern IMP-symbol-68-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-191 $p #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-68-is-symbol symbol-is-pattern IMP-symbol-68-is-pattern IMP-symbol-68-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-68-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-68-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-68-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-68-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-68-is-pattern substitution-app substitution-disjoint notation-cache-190 notation-cache-191 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-192 $p #Notation ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'andThenBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-68-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-68-is-pattern IMP-symbol-68-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-68-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-68-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-68-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-68-is-pattern application-context-app-right application-context-app-left notation-cache-192 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-68-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-68-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-68-is-symbol symbol-is-pattern IMP-symbol-68-is-pattern application-context-app-right notation-cache-192 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-68-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'andThenBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'divInt'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'Unds'divInt'Unds' \kore-symbol-Lbl'Unds'divInt'Unds'-symbol $.
IMP-symbol-69-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'divInt'Unds'-symbol $.
IMP-symbol-69-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) $.
IMP-symbol-69-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-193 $p #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-69-is-symbol symbol-is-pattern IMP-symbol-69-is-pattern IMP-symbol-69-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-194 $p #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-69-is-symbol symbol-is-pattern IMP-symbol-69-is-pattern IMP-symbol-69-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-69-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-69-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-69-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-69-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-69-is-pattern substitution-app substitution-disjoint notation-cache-193 notation-cache-194 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-195 $p #Notation ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'divInt'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-69-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-69-is-pattern IMP-symbol-69-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-69-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-69-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) $= ( IMP-symbol-69-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-69-is-pattern application-context-app-right application-context-app-left notation-cache-195 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-69-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-69-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-69-is-symbol symbol-is-pattern IMP-symbol-69-is-pattern application-context-app-right notation-cache-195 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-69-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'divInt'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int(SortInt{}, SortInt{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol $.
IMP-symbol-70-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol $.
IMP-symbol-70-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-70-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
notation-cache-196 $p #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-70-is-symbol symbol-is-pattern IMP-symbol-70-is-pattern IMP-symbol-70-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-197 $p #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-70-is-symbol symbol-is-pattern IMP-symbol-70-is-pattern IMP-symbol-70-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-70-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-70-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-70-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-70-is-pattern substitution-app substitution-disjoint notation-cache-196 notation-cache-197 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-198 $p #Notation ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-70-is-pattern IMP-symbol-70-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-70-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-70-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-70-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-70-is-pattern application-context-app-right application-context-app-left notation-cache-198 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-70-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-70-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-70-is-symbol symbol-is-pattern IMP-symbol-70-is-pattern application-context-app-right notation-cache-198 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-70-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'impliesBool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'impliesBool'Unds' \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol $.
IMP-symbol-71-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol $.
IMP-symbol-71-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-71-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-199 $p #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-71-is-symbol symbol-is-pattern IMP-symbol-71-is-pattern IMP-symbol-71-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-200 $p #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-71-is-symbol symbol-is-pattern IMP-symbol-71-is-pattern IMP-symbol-71-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-71-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-71-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-71-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-71-is-pattern substitution-app substitution-disjoint notation-cache-199 notation-cache-200 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-201 $p #Notation ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'impliesBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-71-is-pattern IMP-symbol-71-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-71-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-71-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-71-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-71-is-pattern application-context-app-right application-context-app-left notation-cache-201 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-71-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-71-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-71-is-symbol symbol-is-pattern IMP-symbol-71-is-pattern application-context-app-right notation-cache-201 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-71-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'impliesBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List(SortKItem{}, SortList{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol $.
IMP-symbol-72-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol $.
IMP-symbol-72-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) $.
IMP-symbol-72-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn0 ) ptn1 ) $.
notation-cache-202 $p #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-72-is-symbol symbol-is-pattern IMP-symbol-72-is-pattern IMP-symbol-72-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-203 $p #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-72-is-symbol symbol-is-pattern IMP-symbol-72-is-pattern IMP-symbol-72-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-72-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-72-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-72-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-72-is-pattern substitution-app substitution-disjoint notation-cache-202 notation-cache-203 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-204 $p #Notation ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-72-is-pattern IMP-symbol-72-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-72-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-72-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) $= ( IMP-symbol-72-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-72-is-pattern application-context-app-right application-context-app-left notation-cache-204 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-72-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-72-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-72-is-symbol symbol-is-pattern IMP-symbol-72-is-pattern application-context-app-right notation-cache-204 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-72-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortList ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map(SortKItem{}, SortMap{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-73-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-73-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-73-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn0 ) ptn1 ) $.
notation-cache-205 $p #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-73-is-symbol symbol-is-pattern IMP-symbol-73-is-pattern IMP-symbol-73-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-206 $p #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-73-is-symbol symbol-is-pattern IMP-symbol-73-is-pattern IMP-symbol-73-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-73-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-73-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-73-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-73-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-73-is-pattern substitution-app substitution-disjoint notation-cache-205 notation-cache-206 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-207 $p #Notation ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-73-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-73-is-pattern IMP-symbol-73-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-73-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-73-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-73-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-73-is-pattern application-context-app-right application-context-app-left notation-cache-207 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-73-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-73-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-73-is-symbol symbol-is-pattern IMP-symbol-73-is-pattern application-context-app-right notation-cache-207 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-73-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'modInt'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'Unds'modInt'Unds' \kore-symbol-Lbl'Unds'modInt'Unds'-symbol $.
IMP-symbol-74-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'modInt'Unds'-symbol $.
IMP-symbol-74-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) $.
IMP-symbol-74-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-208 $p #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-74-is-symbol symbol-is-pattern IMP-symbol-74-is-pattern IMP-symbol-74-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-209 $p #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-74-is-symbol symbol-is-pattern IMP-symbol-74-is-pattern IMP-symbol-74-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-74-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-74-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-74-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-74-is-pattern substitution-app substitution-disjoint notation-cache-208 notation-cache-209 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-210 $p #Notation ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'modInt'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-74-is-pattern IMP-symbol-74-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-74-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-74-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) $= ( IMP-symbol-74-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-74-is-pattern application-context-app-right application-context-app-left notation-cache-210 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-74-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-74-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-74-is-symbol symbol-is-pattern IMP-symbol-74-is-pattern application-context-app-right notation-cache-210 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-74-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'modInt'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'Unds'orBool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'orBool'Unds' \kore-symbol-Lbl'Unds'orBool'Unds'-symbol $.
IMP-symbol-75-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'orBool'Unds'-symbol $.
IMP-symbol-75-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-75-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-211 $p #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-75-is-symbol symbol-is-pattern IMP-symbol-75-is-pattern IMP-symbol-75-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-212 $p #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-75-is-symbol symbol-is-pattern IMP-symbol-75-is-pattern IMP-symbol-75-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-75-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-75-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-75-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-75-is-pattern substitution-app substitution-disjoint notation-cache-211 notation-cache-212 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-213 $p #Notation ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-75-is-pattern IMP-symbol-75-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-75-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-75-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-75-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-75-is-pattern application-context-app-right application-context-app-left notation-cache-213 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-75-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-75-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-75-is-symbol symbol-is-pattern IMP-symbol-75-is-pattern application-context-app-right notation-cache-213 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-75-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'orBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'orElseBool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'orElseBool'Unds' \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol $.
IMP-symbol-76-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol $.
IMP-symbol-76-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-76-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-214 $p #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-76-is-symbol symbol-is-pattern IMP-symbol-76-is-pattern IMP-symbol-76-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-215 $p #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-76-is-symbol symbol-is-pattern IMP-symbol-76-is-pattern IMP-symbol-76-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-76-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-76-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-76-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-76-is-pattern substitution-app substitution-disjoint notation-cache-214 notation-cache-215 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-216 $p #Notation ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'orElseBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-76-is-pattern IMP-symbol-76-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-76-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-76-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-76-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-76-is-pattern application-context-app-right application-context-app-left notation-cache-216 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-76-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-76-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-76-is-symbol symbol-is-pattern IMP-symbol-76-is-pattern application-context-app-right notation-cache-216 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-76-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'orElseBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'xorBool'Unds'(SortBool{}, SortBool{}): SortBool{} $)
$c \kore-symbol-Lbl'Unds'xorBool'Unds' \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol $.
IMP-symbol-77-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol $.
IMP-symbol-77-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) $.
IMP-symbol-77-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-217 $p #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-77-is-symbol symbol-is-pattern IMP-symbol-77-is-pattern IMP-symbol-77-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-218 $p #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-77-is-symbol symbol-is-pattern IMP-symbol-77-is-pattern IMP-symbol-77-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-77-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-77-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-77-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-77-is-pattern substitution-app substitution-disjoint notation-cache-217 notation-cache-218 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-219 $p #Notation ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorBool'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-77-is-pattern IMP-symbol-77-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-77-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-77-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) $= ( IMP-symbol-77-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-77-is-pattern application-context-app-right application-context-app-left notation-cache-219 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-77-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-77-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-77-is-symbol symbol-is-pattern IMP-symbol-77-is-pattern application-context-app-right notation-cache-219 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-77-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ptn1 \kore-sort-SortBool ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'xorBool'Unds' ptn0 ptn1 ) \kore-sort-SortBool ) ) $.

$( symbol Lbl'Unds'xorInt'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'Unds'xorInt'Unds' \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol $.
IMP-symbol-78-is-symbol $a #Symbol \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol $.
IMP-symbol-78-is-pattern $a #Pattern ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) $.
IMP-symbol-78-is-sugar $a #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-220 $p #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-78-is-symbol symbol-is-pattern IMP-symbol-78-is-pattern IMP-symbol-78-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-221 $p #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-78-is-symbol symbol-is-pattern IMP-symbol-78-is-pattern IMP-symbol-78-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-78-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-78-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-78-substitution $p #Substitution ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-78-is-pattern substitution-app substitution-disjoint notation-cache-220 notation-cache-221 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-222 $p #Notation ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'Unds'xorInt'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-78-is-pattern IMP-symbol-78-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-78-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-78-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) $= ( IMP-symbol-78-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-78-is-pattern application-context-app-right application-context-app-left notation-cache-222 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-78-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-78-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-78-is-symbol symbol-is-pattern IMP-symbol-78-is-pattern application-context-app-right notation-cache-222 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-78-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'xorInt'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsPipe'-'-GT-Unds'(SortKItem{}, SortKItem{}): SortMap{} $)
$c \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol $.
IMP-symbol-79-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol $.
IMP-symbol-79-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) $.
IMP-symbol-79-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-223 $p #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-79-is-symbol symbol-is-pattern IMP-symbol-79-is-pattern IMP-symbol-79-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-224 $p #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-79-is-symbol symbol-is-pattern IMP-symbol-79-is-pattern IMP-symbol-79-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-79-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-79-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-79-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-79-is-pattern substitution-app substitution-disjoint notation-cache-223 notation-cache-224 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-225 $p #Notation ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'-'-GT-Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-79-is-pattern IMP-symbol-79-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-79-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-79-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) $= ( IMP-symbol-79-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-79-is-pattern application-context-app-right application-context-app-left notation-cache-225 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-79-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-79-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-79-is-symbol symbol-is-pattern IMP-symbol-79-is-pattern application-context-app-right notation-cache-225 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-79-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortKItem ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$( symbol Lbl'UndsPipe'Int'Unds'(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'UndsPipe'Int'Unds' \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol $.
IMP-symbol-80-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol $.
IMP-symbol-80-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) $.
IMP-symbol-80-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn0 ) ptn1 ) $.
notation-cache-226 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-80-is-symbol symbol-is-pattern IMP-symbol-80-is-pattern IMP-symbol-80-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-227 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-80-is-symbol symbol-is-pattern IMP-symbol-80-is-pattern IMP-symbol-80-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-80-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-80-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-80-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-80-is-pattern substitution-app substitution-disjoint notation-cache-226 notation-cache-227 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-228 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Int'Unds'-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-80-is-pattern IMP-symbol-80-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-80-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-80-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) $= ( IMP-symbol-80-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-80-is-pattern application-context-app-right application-context-app-left notation-cache-228 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-80-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-80-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-80-is-symbol symbol-is-pattern IMP-symbol-80-is-pattern application-context-app-right notation-cache-228 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-80-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'Int'Unds' ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set(SortSet{}, SortSet{}): SortSet{} $)
$c \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-81-is-symbol $a #Symbol \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-81-is-pattern $a #Pattern ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-81-is-sugar $a #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $.
notation-cache-229 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-81-is-symbol symbol-is-pattern IMP-symbol-81-is-pattern IMP-symbol-81-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-230 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-81-is-symbol symbol-is-pattern IMP-symbol-81-is-pattern IMP-symbol-81-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-81-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-81-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-81-substitution $p #Substitution ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-81-is-pattern substitution-app substitution-disjoint notation-cache-229 notation-cache-230 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-231 $p #Notation ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-81-is-pattern IMP-symbol-81-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-81-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-81-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-81-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-81-is-pattern application-context-app-right application-context-app-left notation-cache-231 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-81-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-81-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-81-is-symbol symbol-is-pattern IMP-symbol-81-is-pattern application-context-app-right notation-cache-231 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-81-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$( symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int(SortInt{}): SortInt{} $)
$c \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-82-is-symbol $a #Symbol \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-82-is-pattern $a #Pattern ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-82-is-sugar $a #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $.
notation-cache-232 $p #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern IMP-symbol-82-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-233 $p #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern IMP-symbol-82-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-82-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-82-substitution $p #Substitution ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern substitution-disjoint substitution-app notation-cache-232 notation-cache-233 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-234 $p #Notation ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-82-is-pattern IMP-symbol-82-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-82-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-82-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-82-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-82-is-pattern application-context-app-right notation-cache-234 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-82-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol Lblb'Unds'IMP-SYNTAX'Unds'Id2(): SortId2{} $)
$c \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
IMP-symbol-83-is-symbol $a #Symbol \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
IMP-symbol-83-is-pattern $a #Pattern \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 $.
IMP-symbol-83-is-sugar $a #Notation \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
${ IMP-symbol-83-substitution $p #Substitution \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ptn0 xX0 $= ( IMP-symbol-83-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-83-sorting $a |- ( \in-sort \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) $.

$( symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int(SortInt{}, SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-84-is-symbol $a #Symbol \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-84-is-pattern $a #Pattern ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-84-is-sugar $a #Notation ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-84-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-84-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-84-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-84-substitution $p #Substitution ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern IMP-symbol-84-is-pattern substitution-app notation-reflexivity IMP-symbol-84-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-235 $p #Notation ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-84-is-pattern IMP-symbol-84-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-84-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-84-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-84-is-pattern application-context-app-right notation-cache-235 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-84-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-84-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern IMP-symbol-84-is-pattern application-context-app-right application-context-app-left notation-cache-235 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-84-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-84-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-84-is-symbol symbol-is-pattern IMP-symbol-84-is-pattern application-context-app-right notation-cache-235 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-84-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$( symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map(SortMap{}): SortKItem{} $)
$c \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-85-is-symbol $a #Symbol \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol $.
IMP-symbol-85-is-pattern $a #Pattern ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) $.
IMP-symbol-85-is-sugar $a #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn0 ) $.
notation-cache-236 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn1 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern IMP-symbol-85-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-237 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn2 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern IMP-symbol-85-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-85-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-85-substitution $p #Substitution ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn1 ) ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern substitution-disjoint substitution-app notation-cache-236 notation-cache-237 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-238 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-85-is-pattern IMP-symbol-85-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-85-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-85-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) $= ( IMP-symbol-85-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-85-is-pattern application-context-app-right notation-cache-238 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-85-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set(SortSet{}): SortKItem{} $)
$c \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol $.
IMP-symbol-86-is-symbol $a #Symbol \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol $.
IMP-symbol-86-is-pattern $a #Pattern ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) $.
IMP-symbol-86-is-sugar $a #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn0 ) $.
notation-cache-239 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn1 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn1 ) $= ( IMP-symbol-86-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-86-is-pattern IMP-symbol-86-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-240 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn2 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn2 ) $= ( IMP-symbol-86-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-86-is-pattern IMP-symbol-86-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-86-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-86-substitution $p #Substitution ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn1 ) ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn2 ) ptn0 xX0 $= ( IMP-symbol-86-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-86-is-pattern substitution-disjoint substitution-app notation-cache-239 notation-cache-240 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-241 $p #Notation ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) ( \app \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set-symbol ptn0 ) $= ( IMP-symbol-86-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-86-is-pattern IMP-symbol-86-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-86-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-86-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) $= ( IMP-symbol-86-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-86-is-pattern application-context-app-right notation-cache-241 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-86-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ( \kore-symbol-Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem(SortList{}, SortInt{}, SortInt{}, SortKItem{}): SortList{} $)
$c \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-87-is-symbol $a #Symbol \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-87-is-pattern $a #Pattern ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $.
IMP-symbol-87-is-sugar $a #Notation ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $.
${ IMP-symbol-87-substitution.0 $e #Substitution ptn1 ptn5 ptn0 xX0 $.
   IMP-symbol-87-substitution.1 $e #Substitution ptn2 ptn6 ptn0 xX0 $.
   IMP-symbol-87-substitution.2 $e #Substitution ptn3 ptn7 ptn0 xX0 $.
   IMP-symbol-87-substitution.3 $e #Substitution ptn4 ptn8 ptn0 xX0 $.
   IMP-symbol-87-substitution $p #Substitution ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn1 ptn2 ptn3 ptn4 ) ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn5 ptn6 ptn7 ptn8 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern IMP-symbol-87-is-pattern substitution-app notation-reflexivity IMP-symbol-87-is-sugar notation-transitivity substitution-disjoint notation-substitution ) PQCODOEOFOPQGOHOIOJOBCDEFRGHIJRBABPQCODOEOFPQGOHOIOJABPQCODOEPQGOHOIABPQCODPQGOHABPQCPQGAPQBAUCKSLSMSNSCDEFRPQCODOEOFOPQCODOEOFOCDEFUAPQCODOEOFOTUBGHIJRPQGOHOIOJOPQGOHOIOJOGHIJUAPQGOHOIOJOTUBBTUD $. $}
notation-cache-242 $p #Notation ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) ( \app ( \app ( \app ( \app \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) ptn2 ) ptn3 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-87-is-pattern IMP-symbol-87-is-sugar notation-transitivity ) ABCDJFGAEBECEDEFGAEBECEDEABCDKFGAEBECEDFGAEBECEDFGAEBECFGAEBECFGAEBFGAEBFGAFGAFGHAHIBHICHIDHIL $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-87-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-87-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-87-is-pattern application-context-app-right notation-cache-242 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAHIBAFLJJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   $d xX0 ptn3 $.
   IMP-symbol-87-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-87-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-87-is-pattern application-context-app-right notation-cache-242 notation-application-context ) HIBGCGDGEGBCDEKAHIBGCGDGEAHIBGCGDAHIBGCAFLJJBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn3 $.
   IMP-symbol-87-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-87-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern IMP-symbol-87-is-pattern application-context-app-right application-context-app-left notation-cache-242 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAHIBGCGDAFKLBCDEMN $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-87-application-context-3.0 $e #ApplicationContext xX0 ptn3 $.
   IMP-symbol-87-application-context-3 $p #ApplicationContext xX0 ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) $= ( app-is-pattern IMP-symbol-87-is-symbol symbol-is-pattern IMP-symbol-87-is-pattern application-context-app-right notation-cache-242 notation-application-context ) HIBGCGDGEGBCDEJAHIBGCGDGEAFKBCDELM $. $}
IMP-symbol-87-sorting $a |- ( \imp ( \and ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ptn3 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem ptn0 ptn1 ptn2 ptn3 ) \kore-sort-SortList ) ) $.

$( symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int(SortInt{}): SortInt{} $)
$c \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-88-is-symbol $a #Symbol \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-88-is-pattern $a #Pattern ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-88-is-sugar $a #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $.
notation-cache-243 $p #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-88-is-pattern IMP-symbol-88-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-244 $p #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-88-is-pattern IMP-symbol-88-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-88-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-88-substitution $p #Substitution ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-88-is-pattern substitution-disjoint substitution-app notation-cache-243 notation-cache-244 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-245 $p #Notation ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-88-is-pattern IMP-symbol-88-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-88-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-88-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-88-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-88-is-pattern application-context-app-right notation-cache-245 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-88-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol LblgetGeneratedCounterCell(SortGeneratedTopCell{}): SortGeneratedCounterCell{} $)
$c \kore-symbol-LblgetGeneratedCounterCell \kore-symbol-LblgetGeneratedCounterCell-symbol $.
IMP-symbol-89-is-symbol $a #Symbol \kore-symbol-LblgetGeneratedCounterCell-symbol $.
IMP-symbol-89-is-pattern $a #Pattern ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) $.
IMP-symbol-89-is-sugar $a #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn0 ) $.
notation-cache-246 $p #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn1 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn1 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern IMP-symbol-89-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-247 $p #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn2 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn2 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern IMP-symbol-89-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-89-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-89-substitution $p #Substitution ( \kore-symbol-LblgetGeneratedCounterCell ptn1 ) ( \kore-symbol-LblgetGeneratedCounterCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern substitution-disjoint substitution-app notation-cache-246 notation-cache-247 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-248 $p #Notation ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblgetGeneratedCounterCell-symbol ptn0 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-89-is-pattern IMP-symbol-89-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-89-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-89-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) $= ( IMP-symbol-89-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-89-is-pattern application-context-app-right notation-cache-248 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-89-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortGeneratedTopCell ) ( \in-sort ( \kore-symbol-LblgetGeneratedCounterCell ptn0 ) \kore-sort-SortGeneratedCounterCell ) ) $.

$( symbol LblinitBCell(): SortBCell{} $)
$c \kore-symbol-LblinitBCell \kore-symbol-LblinitBCell-symbol $.
IMP-symbol-90-is-symbol $a #Symbol \kore-symbol-LblinitBCell-symbol $.
IMP-symbol-90-is-pattern $a #Pattern \kore-symbol-LblinitBCell $.
IMP-symbol-90-is-sugar $a #Notation \kore-symbol-LblinitBCell \kore-symbol-LblinitBCell-symbol $.
${ IMP-symbol-90-substitution $p #Substitution \kore-symbol-LblinitBCell \kore-symbol-LblinitBCell ptn0 xX0 $= ( IMP-symbol-90-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-90-sorting $a |- ( \in-sort \kore-symbol-LblinitBCell \kore-sort-SortBCell ) $.

$( symbol LblinitGeneratedCounterCell(): SortGeneratedCounterCell{} $)
$c \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell-symbol $.
IMP-symbol-91-is-symbol $a #Symbol \kore-symbol-LblinitGeneratedCounterCell-symbol $.
IMP-symbol-91-is-pattern $a #Pattern \kore-symbol-LblinitGeneratedCounterCell $.
IMP-symbol-91-is-sugar $a #Notation \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell-symbol $.
${ IMP-symbol-91-substitution $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell ptn0 xX0 $= ( IMP-symbol-91-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-91-sorting $a |- ( \in-sort \kore-symbol-LblinitGeneratedCounterCell \kore-sort-SortGeneratedCounterCell ) $.

$( symbol LblinitGeneratedTopCell(SortMap{}): SortGeneratedTopCell{} $)
$c \kore-symbol-LblinitGeneratedTopCell \kore-symbol-LblinitGeneratedTopCell-symbol $.
IMP-symbol-92-is-symbol $a #Symbol \kore-symbol-LblinitGeneratedTopCell-symbol $.
IMP-symbol-92-is-pattern $a #Pattern ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) $.
IMP-symbol-92-is-sugar $a #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn0 ) $.
notation-cache-249 $p #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn1 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn1 ) $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-92-is-pattern IMP-symbol-92-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-250 $p #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn2 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn2 ) $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-92-is-pattern IMP-symbol-92-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-92-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-92-substitution $p #Substitution ( \kore-symbol-LblinitGeneratedTopCell ptn1 ) ( \kore-symbol-LblinitGeneratedTopCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-92-is-pattern substitution-disjoint substitution-app notation-cache-249 notation-cache-250 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-251 $p #Notation ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblinitGeneratedTopCell-symbol ptn0 ) $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-92-is-pattern IMP-symbol-92-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-92-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-92-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) $= ( IMP-symbol-92-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-92-is-pattern application-context-app-right notation-cache-251 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-92-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-LblinitGeneratedTopCell ptn0 ) \kore-sort-SortGeneratedTopCell ) ) $.

$( symbol LblinitKCell(SortMap{}): SortKCell{} $)
$c \kore-symbol-LblinitKCell \kore-symbol-LblinitKCell-symbol $.
IMP-symbol-93-is-symbol $a #Symbol \kore-symbol-LblinitKCell-symbol $.
IMP-symbol-93-is-pattern $a #Pattern ( \kore-symbol-LblinitKCell ptn0 ) $.
IMP-symbol-93-is-sugar $a #Notation ( \kore-symbol-LblinitKCell ptn0 ) ( \app \kore-symbol-LblinitKCell-symbol ptn0 ) $.
notation-cache-252 $p #Notation ( \kore-symbol-LblinitKCell ptn1 ) ( \app \kore-symbol-LblinitKCell-symbol ptn1 ) $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-93-is-pattern IMP-symbol-93-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-253 $p #Notation ( \kore-symbol-LblinitKCell ptn2 ) ( \app \kore-symbol-LblinitKCell-symbol ptn2 ) $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-93-is-pattern IMP-symbol-93-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-93-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-93-substitution $p #Substitution ( \kore-symbol-LblinitKCell ptn1 ) ( \kore-symbol-LblinitKCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-93-is-pattern substitution-disjoint substitution-app notation-cache-252 notation-cache-253 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-254 $p #Notation ( \kore-symbol-LblinitKCell ptn0 ) ( \app \kore-symbol-LblinitKCell-symbol ptn0 ) $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-93-is-pattern IMP-symbol-93-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-93-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-93-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblinitKCell ptn0 ) $= ( IMP-symbol-93-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-93-is-pattern application-context-app-right notation-cache-254 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-93-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-LblinitKCell ptn0 ) \kore-sort-SortKCell ) ) $.

$( symbol LblinitTCell(SortMap{}): SortTCell{} $)
$c \kore-symbol-LblinitTCell \kore-symbol-LblinitTCell-symbol $.
IMP-symbol-94-is-symbol $a #Symbol \kore-symbol-LblinitTCell-symbol $.
IMP-symbol-94-is-pattern $a #Pattern ( \kore-symbol-LblinitTCell ptn0 ) $.
IMP-symbol-94-is-sugar $a #Notation ( \kore-symbol-LblinitTCell ptn0 ) ( \app \kore-symbol-LblinitTCell-symbol ptn0 ) $.
notation-cache-255 $p #Notation ( \kore-symbol-LblinitTCell ptn1 ) ( \app \kore-symbol-LblinitTCell-symbol ptn1 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern IMP-symbol-94-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-256 $p #Notation ( \kore-symbol-LblinitTCell ptn2 ) ( \app \kore-symbol-LblinitTCell-symbol ptn2 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern IMP-symbol-94-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-94-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-94-substitution $p #Substitution ( \kore-symbol-LblinitTCell ptn1 ) ( \kore-symbol-LblinitTCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern substitution-disjoint substitution-app notation-cache-255 notation-cache-256 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-257 $p #Notation ( \kore-symbol-LblinitTCell ptn0 ) ( \app \kore-symbol-LblinitTCell-symbol ptn0 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-94-is-pattern IMP-symbol-94-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-94-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-94-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblinitTCell ptn0 ) $= ( IMP-symbol-94-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-94-is-pattern application-context-app-right notation-cache-257 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-94-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-LblinitTCell ptn0 ) \kore-sort-SortTCell ) ) $.

$( symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set(SortSet{}, SortSet{}): SortSet{} $)
$c \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-95-is-symbol $a #Symbol \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol $.
IMP-symbol-95-is-pattern $a #Pattern ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-95-is-sugar $a #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $.
notation-cache-258 $p #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-95-is-symbol symbol-is-pattern IMP-symbol-95-is-pattern IMP-symbol-95-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-259 $p #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-95-is-symbol symbol-is-pattern IMP-symbol-95-is-pattern IMP-symbol-95-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-95-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-95-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-95-substitution $p #Substitution ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn1 ptn2 ) ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-95-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-95-is-pattern substitution-app substitution-disjoint notation-cache-258 notation-cache-259 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-260 $p #Notation ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-95-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-95-is-pattern IMP-symbol-95-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-95-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-95-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-95-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-95-is-pattern application-context-app-right application-context-app-left notation-cache-260 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-95-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-95-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-95-is-symbol symbol-is-pattern IMP-symbol-95-is-pattern application-context-app-right notation-cache-260 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-95-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set ptn0 ptn1 ) \kore-sort-SortSet ) ) $.

$( symbol LblisAExp(SortK{}): SortBool{} $)
$c \kore-symbol-LblisAExp \kore-symbol-LblisAExp-symbol $.
IMP-symbol-96-is-symbol $a #Symbol \kore-symbol-LblisAExp-symbol $.
IMP-symbol-96-is-pattern $a #Pattern ( \kore-symbol-LblisAExp ptn0 ) $.
IMP-symbol-96-is-sugar $a #Notation ( \kore-symbol-LblisAExp ptn0 ) ( \app \kore-symbol-LblisAExp-symbol ptn0 ) $.
notation-cache-261 $p #Notation ( \kore-symbol-LblisAExp ptn1 ) ( \app \kore-symbol-LblisAExp-symbol ptn1 ) $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-96-is-pattern IMP-symbol-96-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-262 $p #Notation ( \kore-symbol-LblisAExp ptn2 ) ( \app \kore-symbol-LblisAExp-symbol ptn2 ) $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-96-is-pattern IMP-symbol-96-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-96-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-96-substitution $p #Substitution ( \kore-symbol-LblisAExp ptn1 ) ( \kore-symbol-LblisAExp ptn2 ) ptn0 xX0 $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-96-is-pattern substitution-disjoint substitution-app notation-cache-261 notation-cache-262 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-263 $p #Notation ( \kore-symbol-LblisAExp ptn0 ) ( \app \kore-symbol-LblisAExp-symbol ptn0 ) $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-96-is-pattern IMP-symbol-96-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-96-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-96-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisAExp ptn0 ) $= ( IMP-symbol-96-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-96-is-pattern application-context-app-right notation-cache-263 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-96-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisAExp ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisBCell(SortK{}): SortBool{} $)
$c \kore-symbol-LblisBCell \kore-symbol-LblisBCell-symbol $.
IMP-symbol-97-is-symbol $a #Symbol \kore-symbol-LblisBCell-symbol $.
IMP-symbol-97-is-pattern $a #Pattern ( \kore-symbol-LblisBCell ptn0 ) $.
IMP-symbol-97-is-sugar $a #Notation ( \kore-symbol-LblisBCell ptn0 ) ( \app \kore-symbol-LblisBCell-symbol ptn0 ) $.
notation-cache-264 $p #Notation ( \kore-symbol-LblisBCell ptn1 ) ( \app \kore-symbol-LblisBCell-symbol ptn1 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern IMP-symbol-97-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-265 $p #Notation ( \kore-symbol-LblisBCell ptn2 ) ( \app \kore-symbol-LblisBCell-symbol ptn2 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern IMP-symbol-97-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-97-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-97-substitution $p #Substitution ( \kore-symbol-LblisBCell ptn1 ) ( \kore-symbol-LblisBCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern substitution-disjoint substitution-app notation-cache-264 notation-cache-265 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-266 $p #Notation ( \kore-symbol-LblisBCell ptn0 ) ( \app \kore-symbol-LblisBCell-symbol ptn0 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-97-is-pattern IMP-symbol-97-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-97-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-97-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisBCell ptn0 ) $= ( IMP-symbol-97-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-97-is-pattern application-context-app-right notation-cache-266 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-97-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisBCell ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisBCellOpt(SortK{}): SortBool{} $)
$c \kore-symbol-LblisBCellOpt \kore-symbol-LblisBCellOpt-symbol $.
IMP-symbol-98-is-symbol $a #Symbol \kore-symbol-LblisBCellOpt-symbol $.
IMP-symbol-98-is-pattern $a #Pattern ( \kore-symbol-LblisBCellOpt ptn0 ) $.
IMP-symbol-98-is-sugar $a #Notation ( \kore-symbol-LblisBCellOpt ptn0 ) ( \app \kore-symbol-LblisBCellOpt-symbol ptn0 ) $.
notation-cache-267 $p #Notation ( \kore-symbol-LblisBCellOpt ptn1 ) ( \app \kore-symbol-LblisBCellOpt-symbol ptn1 ) $= ( IMP-symbol-98-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-98-is-pattern IMP-symbol-98-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-268 $p #Notation ( \kore-symbol-LblisBCellOpt ptn2 ) ( \app \kore-symbol-LblisBCellOpt-symbol ptn2 ) $= ( IMP-symbol-98-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-98-is-pattern IMP-symbol-98-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-98-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-98-substitution $p #Substitution ( \kore-symbol-LblisBCellOpt ptn1 ) ( \kore-symbol-LblisBCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-98-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-98-is-pattern substitution-disjoint substitution-app notation-cache-267 notation-cache-268 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-269 $p #Notation ( \kore-symbol-LblisBCellOpt ptn0 ) ( \app \kore-symbol-LblisBCellOpt-symbol ptn0 ) $= ( IMP-symbol-98-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-98-is-pattern IMP-symbol-98-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-98-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-98-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisBCellOpt ptn0 ) $= ( IMP-symbol-98-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-98-is-pattern application-context-app-right notation-cache-269 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-98-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisBCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisBlock(SortK{}): SortBool{} $)
$c \kore-symbol-LblisBlock \kore-symbol-LblisBlock-symbol $.
IMP-symbol-99-is-symbol $a #Symbol \kore-symbol-LblisBlock-symbol $.
IMP-symbol-99-is-pattern $a #Pattern ( \kore-symbol-LblisBlock ptn0 ) $.
IMP-symbol-99-is-sugar $a #Notation ( \kore-symbol-LblisBlock ptn0 ) ( \app \kore-symbol-LblisBlock-symbol ptn0 ) $.
notation-cache-270 $p #Notation ( \kore-symbol-LblisBlock ptn1 ) ( \app \kore-symbol-LblisBlock-symbol ptn1 ) $= ( IMP-symbol-99-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-99-is-pattern IMP-symbol-99-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-271 $p #Notation ( \kore-symbol-LblisBlock ptn2 ) ( \app \kore-symbol-LblisBlock-symbol ptn2 ) $= ( IMP-symbol-99-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-99-is-pattern IMP-symbol-99-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-99-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-99-substitution $p #Substitution ( \kore-symbol-LblisBlock ptn1 ) ( \kore-symbol-LblisBlock ptn2 ) ptn0 xX0 $= ( IMP-symbol-99-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-99-is-pattern substitution-disjoint substitution-app notation-cache-270 notation-cache-271 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-272 $p #Notation ( \kore-symbol-LblisBlock ptn0 ) ( \app \kore-symbol-LblisBlock-symbol ptn0 ) $= ( IMP-symbol-99-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-99-is-pattern IMP-symbol-99-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-99-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-99-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisBlock ptn0 ) $= ( IMP-symbol-99-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-99-is-pattern application-context-app-right notation-cache-272 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-99-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisBlock ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisBool(SortK{}): SortBool{} $)
$c \kore-symbol-LblisBool \kore-symbol-LblisBool-symbol $.
IMP-symbol-100-is-symbol $a #Symbol \kore-symbol-LblisBool-symbol $.
IMP-symbol-100-is-pattern $a #Pattern ( \kore-symbol-LblisBool ptn0 ) $.
IMP-symbol-100-is-sugar $a #Notation ( \kore-symbol-LblisBool ptn0 ) ( \app \kore-symbol-LblisBool-symbol ptn0 ) $.
notation-cache-273 $p #Notation ( \kore-symbol-LblisBool ptn1 ) ( \app \kore-symbol-LblisBool-symbol ptn1 ) $= ( IMP-symbol-100-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-100-is-pattern IMP-symbol-100-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-274 $p #Notation ( \kore-symbol-LblisBool ptn2 ) ( \app \kore-symbol-LblisBool-symbol ptn2 ) $= ( IMP-symbol-100-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-100-is-pattern IMP-symbol-100-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-100-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-100-substitution $p #Substitution ( \kore-symbol-LblisBool ptn1 ) ( \kore-symbol-LblisBool ptn2 ) ptn0 xX0 $= ( IMP-symbol-100-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-100-is-pattern substitution-disjoint substitution-app notation-cache-273 notation-cache-274 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-275 $p #Notation ( \kore-symbol-LblisBool ptn0 ) ( \app \kore-symbol-LblisBool-symbol ptn0 ) $= ( IMP-symbol-100-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-100-is-pattern IMP-symbol-100-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-100-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-100-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisBool ptn0 ) $= ( IMP-symbol-100-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-100-is-pattern application-context-app-right notation-cache-275 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-100-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisBool ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisGeneratedCounterCell(SortK{}): SortBool{} $)
$c \kore-symbol-LblisGeneratedCounterCell \kore-symbol-LblisGeneratedCounterCell-symbol $.
IMP-symbol-101-is-symbol $a #Symbol \kore-symbol-LblisGeneratedCounterCell-symbol $.
IMP-symbol-101-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) $.
IMP-symbol-101-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn0 ) $.
notation-cache-276 $p #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn1 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn1 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern IMP-symbol-101-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-277 $p #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn2 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn2 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern IMP-symbol-101-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-101-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-101-substitution $p #Substitution ( \kore-symbol-LblisGeneratedCounterCell ptn1 ) ( \kore-symbol-LblisGeneratedCounterCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern substitution-disjoint substitution-app notation-cache-276 notation-cache-277 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-278 $p #Notation ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCell-symbol ptn0 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-101-is-pattern IMP-symbol-101-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-101-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-101-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) $= ( IMP-symbol-101-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-101-is-pattern application-context-app-right notation-cache-278 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-101-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedCounterCell ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisGeneratedCounterCellOpt(SortK{}): SortBool{} $)
$c \kore-symbol-LblisGeneratedCounterCellOpt \kore-symbol-LblisGeneratedCounterCellOpt-symbol $.
IMP-symbol-102-is-symbol $a #Symbol \kore-symbol-LblisGeneratedCounterCellOpt-symbol $.
IMP-symbol-102-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) $.
IMP-symbol-102-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn0 ) $.
notation-cache-279 $p #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn1 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn1 ) $= ( IMP-symbol-102-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-102-is-pattern IMP-symbol-102-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-280 $p #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn2 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn2 ) $= ( IMP-symbol-102-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-102-is-pattern IMP-symbol-102-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-102-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-102-substitution $p #Substitution ( \kore-symbol-LblisGeneratedCounterCellOpt ptn1 ) ( \kore-symbol-LblisGeneratedCounterCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-102-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-102-is-pattern substitution-disjoint substitution-app notation-cache-279 notation-cache-280 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-281 $p #Notation ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-LblisGeneratedCounterCellOpt-symbol ptn0 ) $= ( IMP-symbol-102-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-102-is-pattern IMP-symbol-102-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-102-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-102-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) $= ( IMP-symbol-102-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-102-is-pattern application-context-app-right notation-cache-281 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-102-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedCounterCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisGeneratedTopCell(SortK{}): SortBool{} $)
$c \kore-symbol-LblisGeneratedTopCell \kore-symbol-LblisGeneratedTopCell-symbol $.
IMP-symbol-103-is-symbol $a #Symbol \kore-symbol-LblisGeneratedTopCell-symbol $.
IMP-symbol-103-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedTopCell ptn0 ) $.
IMP-symbol-103-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn0 ) $.
notation-cache-282 $p #Notation ( \kore-symbol-LblisGeneratedTopCell ptn1 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn1 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern IMP-symbol-103-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-283 $p #Notation ( \kore-symbol-LblisGeneratedTopCell ptn2 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn2 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern IMP-symbol-103-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-103-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-103-substitution $p #Substitution ( \kore-symbol-LblisGeneratedTopCell ptn1 ) ( \kore-symbol-LblisGeneratedTopCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern substitution-disjoint substitution-app notation-cache-282 notation-cache-283 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-284 $p #Notation ( \kore-symbol-LblisGeneratedTopCell ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCell-symbol ptn0 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-103-is-pattern IMP-symbol-103-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-103-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-103-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedTopCell ptn0 ) $= ( IMP-symbol-103-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-103-is-pattern application-context-app-right notation-cache-284 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-103-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedTopCell ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisGeneratedTopCellFragment(SortK{}): SortBool{} $)
$c \kore-symbol-LblisGeneratedTopCellFragment \kore-symbol-LblisGeneratedTopCellFragment-symbol $.
IMP-symbol-104-is-symbol $a #Symbol \kore-symbol-LblisGeneratedTopCellFragment-symbol $.
IMP-symbol-104-is-pattern $a #Pattern ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) $.
IMP-symbol-104-is-sugar $a #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn0 ) $.
notation-cache-285 $p #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn1 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn1 ) $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-104-is-pattern IMP-symbol-104-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-286 $p #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn2 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn2 ) $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-104-is-pattern IMP-symbol-104-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-104-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-104-substitution $p #Substitution ( \kore-symbol-LblisGeneratedTopCellFragment ptn1 ) ( \kore-symbol-LblisGeneratedTopCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-104-is-pattern substitution-disjoint substitution-app notation-cache-285 notation-cache-286 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-287 $p #Notation ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-LblisGeneratedTopCellFragment-symbol ptn0 ) $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-104-is-pattern IMP-symbol-104-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-104-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-104-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) $= ( IMP-symbol-104-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-104-is-pattern application-context-app-right notation-cache-287 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-104-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisGeneratedTopCellFragment ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisId2(SortK{}): SortBool{} $)
$c \kore-symbol-LblisId2 \kore-symbol-LblisId2-symbol $.
IMP-symbol-105-is-symbol $a #Symbol \kore-symbol-LblisId2-symbol $.
IMP-symbol-105-is-pattern $a #Pattern ( \kore-symbol-LblisId2 ptn0 ) $.
IMP-symbol-105-is-sugar $a #Notation ( \kore-symbol-LblisId2 ptn0 ) ( \app \kore-symbol-LblisId2-symbol ptn0 ) $.
notation-cache-288 $p #Notation ( \kore-symbol-LblisId2 ptn1 ) ( \app \kore-symbol-LblisId2-symbol ptn1 ) $= ( IMP-symbol-105-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-105-is-pattern IMP-symbol-105-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-289 $p #Notation ( \kore-symbol-LblisId2 ptn2 ) ( \app \kore-symbol-LblisId2-symbol ptn2 ) $= ( IMP-symbol-105-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-105-is-pattern IMP-symbol-105-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-105-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-105-substitution $p #Substitution ( \kore-symbol-LblisId2 ptn1 ) ( \kore-symbol-LblisId2 ptn2 ) ptn0 xX0 $= ( IMP-symbol-105-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-105-is-pattern substitution-disjoint substitution-app notation-cache-288 notation-cache-289 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-290 $p #Notation ( \kore-symbol-LblisId2 ptn0 ) ( \app \kore-symbol-LblisId2-symbol ptn0 ) $= ( IMP-symbol-105-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-105-is-pattern IMP-symbol-105-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-105-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-105-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisId2 ptn0 ) $= ( IMP-symbol-105-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-105-is-pattern application-context-app-right notation-cache-290 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-105-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisId2 ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisInt(SortK{}): SortBool{} $)
$c \kore-symbol-LblisInt \kore-symbol-LblisInt-symbol $.
IMP-symbol-106-is-symbol $a #Symbol \kore-symbol-LblisInt-symbol $.
IMP-symbol-106-is-pattern $a #Pattern ( \kore-symbol-LblisInt ptn0 ) $.
IMP-symbol-106-is-sugar $a #Notation ( \kore-symbol-LblisInt ptn0 ) ( \app \kore-symbol-LblisInt-symbol ptn0 ) $.
notation-cache-291 $p #Notation ( \kore-symbol-LblisInt ptn1 ) ( \app \kore-symbol-LblisInt-symbol ptn1 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern IMP-symbol-106-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-292 $p #Notation ( \kore-symbol-LblisInt ptn2 ) ( \app \kore-symbol-LblisInt-symbol ptn2 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern IMP-symbol-106-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-106-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-106-substitution $p #Substitution ( \kore-symbol-LblisInt ptn1 ) ( \kore-symbol-LblisInt ptn2 ) ptn0 xX0 $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern substitution-disjoint substitution-app notation-cache-291 notation-cache-292 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-293 $p #Notation ( \kore-symbol-LblisInt ptn0 ) ( \app \kore-symbol-LblisInt-symbol ptn0 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-106-is-pattern IMP-symbol-106-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-106-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-106-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisInt ptn0 ) $= ( IMP-symbol-106-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-106-is-pattern application-context-app-right notation-cache-293 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-106-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisInt ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisK(SortK{}): SortBool{} $)
$c \kore-symbol-LblisK \kore-symbol-LblisK-symbol $.
IMP-symbol-107-is-symbol $a #Symbol \kore-symbol-LblisK-symbol $.
IMP-symbol-107-is-pattern $a #Pattern ( \kore-symbol-LblisK ptn0 ) $.
IMP-symbol-107-is-sugar $a #Notation ( \kore-symbol-LblisK ptn0 ) ( \app \kore-symbol-LblisK-symbol ptn0 ) $.
notation-cache-294 $p #Notation ( \kore-symbol-LblisK ptn1 ) ( \app \kore-symbol-LblisK-symbol ptn1 ) $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-107-is-pattern IMP-symbol-107-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-295 $p #Notation ( \kore-symbol-LblisK ptn2 ) ( \app \kore-symbol-LblisK-symbol ptn2 ) $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-107-is-pattern IMP-symbol-107-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-107-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-107-substitution $p #Substitution ( \kore-symbol-LblisK ptn1 ) ( \kore-symbol-LblisK ptn2 ) ptn0 xX0 $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-107-is-pattern substitution-disjoint substitution-app notation-cache-294 notation-cache-295 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-296 $p #Notation ( \kore-symbol-LblisK ptn0 ) ( \app \kore-symbol-LblisK-symbol ptn0 ) $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-107-is-pattern IMP-symbol-107-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-107-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-107-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisK ptn0 ) $= ( IMP-symbol-107-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-107-is-pattern application-context-app-right notation-cache-296 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-107-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisK ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisKCell(SortK{}): SortBool{} $)
$c \kore-symbol-LblisKCell \kore-symbol-LblisKCell-symbol $.
IMP-symbol-108-is-symbol $a #Symbol \kore-symbol-LblisKCell-symbol $.
IMP-symbol-108-is-pattern $a #Pattern ( \kore-symbol-LblisKCell ptn0 ) $.
IMP-symbol-108-is-sugar $a #Notation ( \kore-symbol-LblisKCell ptn0 ) ( \app \kore-symbol-LblisKCell-symbol ptn0 ) $.
notation-cache-297 $p #Notation ( \kore-symbol-LblisKCell ptn1 ) ( \app \kore-symbol-LblisKCell-symbol ptn1 ) $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-108-is-pattern IMP-symbol-108-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-298 $p #Notation ( \kore-symbol-LblisKCell ptn2 ) ( \app \kore-symbol-LblisKCell-symbol ptn2 ) $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-108-is-pattern IMP-symbol-108-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-108-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-108-substitution $p #Substitution ( \kore-symbol-LblisKCell ptn1 ) ( \kore-symbol-LblisKCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-108-is-pattern substitution-disjoint substitution-app notation-cache-297 notation-cache-298 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-299 $p #Notation ( \kore-symbol-LblisKCell ptn0 ) ( \app \kore-symbol-LblisKCell-symbol ptn0 ) $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-108-is-pattern IMP-symbol-108-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-108-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-108-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKCell ptn0 ) $= ( IMP-symbol-108-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-108-is-pattern application-context-app-right notation-cache-299 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-108-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKCell ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisKCellOpt(SortK{}): SortBool{} $)
$c \kore-symbol-LblisKCellOpt \kore-symbol-LblisKCellOpt-symbol $.
IMP-symbol-109-is-symbol $a #Symbol \kore-symbol-LblisKCellOpt-symbol $.
IMP-symbol-109-is-pattern $a #Pattern ( \kore-symbol-LblisKCellOpt ptn0 ) $.
IMP-symbol-109-is-sugar $a #Notation ( \kore-symbol-LblisKCellOpt ptn0 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn0 ) $.
notation-cache-300 $p #Notation ( \kore-symbol-LblisKCellOpt ptn1 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn1 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern IMP-symbol-109-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-301 $p #Notation ( \kore-symbol-LblisKCellOpt ptn2 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn2 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern IMP-symbol-109-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-109-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-109-substitution $p #Substitution ( \kore-symbol-LblisKCellOpt ptn1 ) ( \kore-symbol-LblisKCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern substitution-disjoint substitution-app notation-cache-300 notation-cache-301 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-302 $p #Notation ( \kore-symbol-LblisKCellOpt ptn0 ) ( \app \kore-symbol-LblisKCellOpt-symbol ptn0 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-109-is-pattern IMP-symbol-109-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-109-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-109-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKCellOpt ptn0 ) $= ( IMP-symbol-109-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-109-is-pattern application-context-app-right notation-cache-302 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-109-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisKConfigVar(SortK{}): SortBool{} $)
$c \kore-symbol-LblisKConfigVar \kore-symbol-LblisKConfigVar-symbol $.
IMP-symbol-110-is-symbol $a #Symbol \kore-symbol-LblisKConfigVar-symbol $.
IMP-symbol-110-is-pattern $a #Pattern ( \kore-symbol-LblisKConfigVar ptn0 ) $.
IMP-symbol-110-is-sugar $a #Notation ( \kore-symbol-LblisKConfigVar ptn0 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn0 ) $.
notation-cache-303 $p #Notation ( \kore-symbol-LblisKConfigVar ptn1 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn1 ) $= ( IMP-symbol-110-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-110-is-pattern IMP-symbol-110-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-304 $p #Notation ( \kore-symbol-LblisKConfigVar ptn2 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn2 ) $= ( IMP-symbol-110-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-110-is-pattern IMP-symbol-110-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-110-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-110-substitution $p #Substitution ( \kore-symbol-LblisKConfigVar ptn1 ) ( \kore-symbol-LblisKConfigVar ptn2 ) ptn0 xX0 $= ( IMP-symbol-110-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-110-is-pattern substitution-disjoint substitution-app notation-cache-303 notation-cache-304 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-305 $p #Notation ( \kore-symbol-LblisKConfigVar ptn0 ) ( \app \kore-symbol-LblisKConfigVar-symbol ptn0 ) $= ( IMP-symbol-110-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-110-is-pattern IMP-symbol-110-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-110-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-110-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKConfigVar ptn0 ) $= ( IMP-symbol-110-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-110-is-pattern application-context-app-right notation-cache-305 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-110-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKConfigVar ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisKItem(SortK{}): SortBool{} $)
$c \kore-symbol-LblisKItem \kore-symbol-LblisKItem-symbol $.
IMP-symbol-111-is-symbol $a #Symbol \kore-symbol-LblisKItem-symbol $.
IMP-symbol-111-is-pattern $a #Pattern ( \kore-symbol-LblisKItem ptn0 ) $.
IMP-symbol-111-is-sugar $a #Notation ( \kore-symbol-LblisKItem ptn0 ) ( \app \kore-symbol-LblisKItem-symbol ptn0 ) $.
notation-cache-306 $p #Notation ( \kore-symbol-LblisKItem ptn1 ) ( \app \kore-symbol-LblisKItem-symbol ptn1 ) $= ( IMP-symbol-111-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-111-is-pattern IMP-symbol-111-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-307 $p #Notation ( \kore-symbol-LblisKItem ptn2 ) ( \app \kore-symbol-LblisKItem-symbol ptn2 ) $= ( IMP-symbol-111-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-111-is-pattern IMP-symbol-111-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-111-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-111-substitution $p #Substitution ( \kore-symbol-LblisKItem ptn1 ) ( \kore-symbol-LblisKItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-111-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-111-is-pattern substitution-disjoint substitution-app notation-cache-306 notation-cache-307 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-308 $p #Notation ( \kore-symbol-LblisKItem ptn0 ) ( \app \kore-symbol-LblisKItem-symbol ptn0 ) $= ( IMP-symbol-111-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-111-is-pattern IMP-symbol-111-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-111-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-111-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKItem ptn0 ) $= ( IMP-symbol-111-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-111-is-pattern application-context-app-right notation-cache-308 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-111-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKItem ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisKResult(SortK{}): SortBool{} $)
$c \kore-symbol-LblisKResult \kore-symbol-LblisKResult-symbol $.
IMP-symbol-112-is-symbol $a #Symbol \kore-symbol-LblisKResult-symbol $.
IMP-symbol-112-is-pattern $a #Pattern ( \kore-symbol-LblisKResult ptn0 ) $.
IMP-symbol-112-is-sugar $a #Notation ( \kore-symbol-LblisKResult ptn0 ) ( \app \kore-symbol-LblisKResult-symbol ptn0 ) $.
notation-cache-309 $p #Notation ( \kore-symbol-LblisKResult ptn1 ) ( \app \kore-symbol-LblisKResult-symbol ptn1 ) $= ( IMP-symbol-112-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-112-is-pattern IMP-symbol-112-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-310 $p #Notation ( \kore-symbol-LblisKResult ptn2 ) ( \app \kore-symbol-LblisKResult-symbol ptn2 ) $= ( IMP-symbol-112-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-112-is-pattern IMP-symbol-112-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-112-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-112-substitution $p #Substitution ( \kore-symbol-LblisKResult ptn1 ) ( \kore-symbol-LblisKResult ptn2 ) ptn0 xX0 $= ( IMP-symbol-112-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-112-is-pattern substitution-disjoint substitution-app notation-cache-309 notation-cache-310 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-311 $p #Notation ( \kore-symbol-LblisKResult ptn0 ) ( \app \kore-symbol-LblisKResult-symbol ptn0 ) $= ( IMP-symbol-112-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-112-is-pattern IMP-symbol-112-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-112-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-112-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisKResult ptn0 ) $= ( IMP-symbol-112-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-112-is-pattern application-context-app-right notation-cache-311 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-112-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisKResult ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisList(SortK{}): SortBool{} $)
$c \kore-symbol-LblisList \kore-symbol-LblisList-symbol $.
IMP-symbol-113-is-symbol $a #Symbol \kore-symbol-LblisList-symbol $.
IMP-symbol-113-is-pattern $a #Pattern ( \kore-symbol-LblisList ptn0 ) $.
IMP-symbol-113-is-sugar $a #Notation ( \kore-symbol-LblisList ptn0 ) ( \app \kore-symbol-LblisList-symbol ptn0 ) $.
notation-cache-312 $p #Notation ( \kore-symbol-LblisList ptn1 ) ( \app \kore-symbol-LblisList-symbol ptn1 ) $= ( IMP-symbol-113-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-113-is-pattern IMP-symbol-113-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-313 $p #Notation ( \kore-symbol-LblisList ptn2 ) ( \app \kore-symbol-LblisList-symbol ptn2 ) $= ( IMP-symbol-113-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-113-is-pattern IMP-symbol-113-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-113-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-113-substitution $p #Substitution ( \kore-symbol-LblisList ptn1 ) ( \kore-symbol-LblisList ptn2 ) ptn0 xX0 $= ( IMP-symbol-113-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-113-is-pattern substitution-disjoint substitution-app notation-cache-312 notation-cache-313 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-314 $p #Notation ( \kore-symbol-LblisList ptn0 ) ( \app \kore-symbol-LblisList-symbol ptn0 ) $= ( IMP-symbol-113-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-113-is-pattern IMP-symbol-113-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-113-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-113-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisList ptn0 ) $= ( IMP-symbol-113-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-113-is-pattern application-context-app-right notation-cache-314 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-113-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisList ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisMap(SortK{}): SortBool{} $)
$c \kore-symbol-LblisMap \kore-symbol-LblisMap-symbol $.
IMP-symbol-114-is-symbol $a #Symbol \kore-symbol-LblisMap-symbol $.
IMP-symbol-114-is-pattern $a #Pattern ( \kore-symbol-LblisMap ptn0 ) $.
IMP-symbol-114-is-sugar $a #Notation ( \kore-symbol-LblisMap ptn0 ) ( \app \kore-symbol-LblisMap-symbol ptn0 ) $.
notation-cache-315 $p #Notation ( \kore-symbol-LblisMap ptn1 ) ( \app \kore-symbol-LblisMap-symbol ptn1 ) $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-114-is-pattern IMP-symbol-114-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-316 $p #Notation ( \kore-symbol-LblisMap ptn2 ) ( \app \kore-symbol-LblisMap-symbol ptn2 ) $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-114-is-pattern IMP-symbol-114-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-114-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-114-substitution $p #Substitution ( \kore-symbol-LblisMap ptn1 ) ( \kore-symbol-LblisMap ptn2 ) ptn0 xX0 $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-114-is-pattern substitution-disjoint substitution-app notation-cache-315 notation-cache-316 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-317 $p #Notation ( \kore-symbol-LblisMap ptn0 ) ( \app \kore-symbol-LblisMap-symbol ptn0 ) $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-114-is-pattern IMP-symbol-114-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-114-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-114-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisMap ptn0 ) $= ( IMP-symbol-114-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-114-is-pattern application-context-app-right notation-cache-317 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-114-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisMap ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisPgm(SortK{}): SortBool{} $)
$c \kore-symbol-LblisPgm \kore-symbol-LblisPgm-symbol $.
IMP-symbol-115-is-symbol $a #Symbol \kore-symbol-LblisPgm-symbol $.
IMP-symbol-115-is-pattern $a #Pattern ( \kore-symbol-LblisPgm ptn0 ) $.
IMP-symbol-115-is-sugar $a #Notation ( \kore-symbol-LblisPgm ptn0 ) ( \app \kore-symbol-LblisPgm-symbol ptn0 ) $.
notation-cache-318 $p #Notation ( \kore-symbol-LblisPgm ptn1 ) ( \app \kore-symbol-LblisPgm-symbol ptn1 ) $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-115-is-pattern IMP-symbol-115-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-319 $p #Notation ( \kore-symbol-LblisPgm ptn2 ) ( \app \kore-symbol-LblisPgm-symbol ptn2 ) $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-115-is-pattern IMP-symbol-115-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-115-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-115-substitution $p #Substitution ( \kore-symbol-LblisPgm ptn1 ) ( \kore-symbol-LblisPgm ptn2 ) ptn0 xX0 $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-115-is-pattern substitution-disjoint substitution-app notation-cache-318 notation-cache-319 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-320 $p #Notation ( \kore-symbol-LblisPgm ptn0 ) ( \app \kore-symbol-LblisPgm-symbol ptn0 ) $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-115-is-pattern IMP-symbol-115-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-115-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-115-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisPgm ptn0 ) $= ( IMP-symbol-115-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-115-is-pattern application-context-app-right notation-cache-320 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-115-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisPgm ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisSet(SortK{}): SortBool{} $)
$c \kore-symbol-LblisSet \kore-symbol-LblisSet-symbol $.
IMP-symbol-116-is-symbol $a #Symbol \kore-symbol-LblisSet-symbol $.
IMP-symbol-116-is-pattern $a #Pattern ( \kore-symbol-LblisSet ptn0 ) $.
IMP-symbol-116-is-sugar $a #Notation ( \kore-symbol-LblisSet ptn0 ) ( \app \kore-symbol-LblisSet-symbol ptn0 ) $.
notation-cache-321 $p #Notation ( \kore-symbol-LblisSet ptn1 ) ( \app \kore-symbol-LblisSet-symbol ptn1 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern IMP-symbol-116-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-322 $p #Notation ( \kore-symbol-LblisSet ptn2 ) ( \app \kore-symbol-LblisSet-symbol ptn2 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern IMP-symbol-116-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-116-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-116-substitution $p #Substitution ( \kore-symbol-LblisSet ptn1 ) ( \kore-symbol-LblisSet ptn2 ) ptn0 xX0 $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern substitution-disjoint substitution-app notation-cache-321 notation-cache-322 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-323 $p #Notation ( \kore-symbol-LblisSet ptn0 ) ( \app \kore-symbol-LblisSet-symbol ptn0 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-116-is-pattern IMP-symbol-116-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-116-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-116-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisSet ptn0 ) $= ( IMP-symbol-116-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-116-is-pattern application-context-app-right notation-cache-323 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-116-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisSet ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisStmt(SortK{}): SortBool{} $)
$c \kore-symbol-LblisStmt \kore-symbol-LblisStmt-symbol $.
IMP-symbol-117-is-symbol $a #Symbol \kore-symbol-LblisStmt-symbol $.
IMP-symbol-117-is-pattern $a #Pattern ( \kore-symbol-LblisStmt ptn0 ) $.
IMP-symbol-117-is-sugar $a #Notation ( \kore-symbol-LblisStmt ptn0 ) ( \app \kore-symbol-LblisStmt-symbol ptn0 ) $.
notation-cache-324 $p #Notation ( \kore-symbol-LblisStmt ptn1 ) ( \app \kore-symbol-LblisStmt-symbol ptn1 ) $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-117-is-pattern IMP-symbol-117-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-325 $p #Notation ( \kore-symbol-LblisStmt ptn2 ) ( \app \kore-symbol-LblisStmt-symbol ptn2 ) $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-117-is-pattern IMP-symbol-117-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-117-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-117-substitution $p #Substitution ( \kore-symbol-LblisStmt ptn1 ) ( \kore-symbol-LblisStmt ptn2 ) ptn0 xX0 $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-117-is-pattern substitution-disjoint substitution-app notation-cache-324 notation-cache-325 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-326 $p #Notation ( \kore-symbol-LblisStmt ptn0 ) ( \app \kore-symbol-LblisStmt-symbol ptn0 ) $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-117-is-pattern IMP-symbol-117-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-117-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-117-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisStmt ptn0 ) $= ( IMP-symbol-117-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-117-is-pattern application-context-app-right notation-cache-326 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-117-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisStmt ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisTCell(SortK{}): SortBool{} $)
$c \kore-symbol-LblisTCell \kore-symbol-LblisTCell-symbol $.
IMP-symbol-118-is-symbol $a #Symbol \kore-symbol-LblisTCell-symbol $.
IMP-symbol-118-is-pattern $a #Pattern ( \kore-symbol-LblisTCell ptn0 ) $.
IMP-symbol-118-is-sugar $a #Notation ( \kore-symbol-LblisTCell ptn0 ) ( \app \kore-symbol-LblisTCell-symbol ptn0 ) $.
notation-cache-327 $p #Notation ( \kore-symbol-LblisTCell ptn1 ) ( \app \kore-symbol-LblisTCell-symbol ptn1 ) $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-118-is-pattern IMP-symbol-118-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-328 $p #Notation ( \kore-symbol-LblisTCell ptn2 ) ( \app \kore-symbol-LblisTCell-symbol ptn2 ) $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-118-is-pattern IMP-symbol-118-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-118-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-118-substitution $p #Substitution ( \kore-symbol-LblisTCell ptn1 ) ( \kore-symbol-LblisTCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-118-is-pattern substitution-disjoint substitution-app notation-cache-327 notation-cache-328 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-329 $p #Notation ( \kore-symbol-LblisTCell ptn0 ) ( \app \kore-symbol-LblisTCell-symbol ptn0 ) $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-118-is-pattern IMP-symbol-118-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-118-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-118-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisTCell ptn0 ) $= ( IMP-symbol-118-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-118-is-pattern application-context-app-right notation-cache-329 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-118-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisTCell ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisTCellFragment(SortK{}): SortBool{} $)
$c \kore-symbol-LblisTCellFragment \kore-symbol-LblisTCellFragment-symbol $.
IMP-symbol-119-is-symbol $a #Symbol \kore-symbol-LblisTCellFragment-symbol $.
IMP-symbol-119-is-pattern $a #Pattern ( \kore-symbol-LblisTCellFragment ptn0 ) $.
IMP-symbol-119-is-sugar $a #Notation ( \kore-symbol-LblisTCellFragment ptn0 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn0 ) $.
notation-cache-330 $p #Notation ( \kore-symbol-LblisTCellFragment ptn1 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn1 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern IMP-symbol-119-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-331 $p #Notation ( \kore-symbol-LblisTCellFragment ptn2 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn2 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern IMP-symbol-119-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-119-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-119-substitution $p #Substitution ( \kore-symbol-LblisTCellFragment ptn1 ) ( \kore-symbol-LblisTCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern substitution-disjoint substitution-app notation-cache-330 notation-cache-331 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-332 $p #Notation ( \kore-symbol-LblisTCellFragment ptn0 ) ( \app \kore-symbol-LblisTCellFragment-symbol ptn0 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-119-is-pattern IMP-symbol-119-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-119-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-119-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisTCellFragment ptn0 ) $= ( IMP-symbol-119-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-119-is-pattern application-context-app-right notation-cache-332 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-119-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisTCellFragment ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol LblisTCellOpt(SortK{}): SortBool{} $)
$c \kore-symbol-LblisTCellOpt \kore-symbol-LblisTCellOpt-symbol $.
IMP-symbol-120-is-symbol $a #Symbol \kore-symbol-LblisTCellOpt-symbol $.
IMP-symbol-120-is-pattern $a #Pattern ( \kore-symbol-LblisTCellOpt ptn0 ) $.
IMP-symbol-120-is-sugar $a #Notation ( \kore-symbol-LblisTCellOpt ptn0 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn0 ) $.
notation-cache-333 $p #Notation ( \kore-symbol-LblisTCellOpt ptn1 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn1 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern IMP-symbol-120-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-334 $p #Notation ( \kore-symbol-LblisTCellOpt ptn2 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn2 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern IMP-symbol-120-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-120-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-120-substitution $p #Substitution ( \kore-symbol-LblisTCellOpt ptn1 ) ( \kore-symbol-LblisTCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern substitution-disjoint substitution-app notation-cache-333 notation-cache-334 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-335 $p #Notation ( \kore-symbol-LblisTCellOpt ptn0 ) ( \app \kore-symbol-LblisTCellOpt-symbol ptn0 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-120-is-pattern IMP-symbol-120-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-120-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-120-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblisTCellOpt ptn0 ) $= ( IMP-symbol-120-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-120-is-pattern application-context-app-right notation-cache-335 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-120-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-LblisTCellOpt ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map(SortMap{}): SortSet{} $)
$c \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol $.
IMP-symbol-121-is-symbol $a #Symbol \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol $.
IMP-symbol-121-is-pattern $a #Pattern ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) $.
IMP-symbol-121-is-sugar $a #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn0 ) $.
notation-cache-336 $p #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn1 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-121-is-pattern IMP-symbol-121-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-337 $p #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn2 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-121-is-pattern IMP-symbol-121-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-121-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-121-substitution $p #Substitution ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn1 ) ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-121-is-pattern substitution-disjoint substitution-app notation-cache-336 notation-cache-337 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-338 $p #Notation ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-121-is-pattern IMP-symbol-121-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-121-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-121-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) $= ( IMP-symbol-121-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-121-is-pattern application-context-app-right notation-cache-338 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-121-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map ptn0 ) \kore-sort-SortSet ) ) $.

$( symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map(SortMap{}): SortList{} $)
$c \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-122-is-symbol $a #Symbol \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-122-is-pattern $a #Pattern ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $.
IMP-symbol-122-is-sugar $a #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $.
notation-cache-339 $p #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern IMP-symbol-122-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-340 $p #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern IMP-symbol-122-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-122-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-122-substitution $p #Substitution ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern substitution-disjoint substitution-app notation-cache-339 notation-cache-340 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-341 $p #Notation ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-122-is-pattern IMP-symbol-122-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-122-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-122-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $= ( IMP-symbol-122-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-122-is-pattern application-context-app-right notation-cache-341 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-122-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) \kore-sort-SortList ) ) $.

$( symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int(SortInt{}): SortInt{} $)
$c \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-123-is-symbol $a #Symbol \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol $.
IMP-symbol-123-is-pattern $a #Pattern ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-123-is-sugar $a #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $.
notation-cache-342 $p #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern IMP-symbol-123-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-343 $p #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern IMP-symbol-123-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-123-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-123-substitution $p #Substitution ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern substitution-disjoint substitution-app notation-cache-342 notation-cache-343 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-344 $p #Notation ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-123-is-pattern IMP-symbol-123-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-123-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-123-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-123-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-123-is-pattern application-context-app-right notation-cache-344 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-123-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem(SortInt{}, SortKItem{}): SortList{} $)
$c \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-124-is-symbol $a #Symbol \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol $.
IMP-symbol-124-is-pattern $a #Pattern ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) $.
IMP-symbol-124-is-sugar $a #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) $.
notation-cache-345 $p #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-124-is-symbol symbol-is-pattern IMP-symbol-124-is-pattern IMP-symbol-124-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-346 $p #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-124-is-symbol symbol-is-pattern IMP-symbol-124-is-pattern IMP-symbol-124-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-124-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-124-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-124-substitution $p #Substitution ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn1 ptn2 ) ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-124-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-124-is-pattern substitution-app substitution-disjoint notation-cache-345 notation-cache-346 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-347 $p #Notation ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-124-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-124-is-pattern IMP-symbol-124-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-124-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-124-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) $= ( IMP-symbol-124-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-124-is-pattern application-context-app-right application-context-app-left notation-cache-347 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-124-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-124-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-124-is-symbol symbol-is-pattern IMP-symbol-124-is-pattern application-context-app-right notation-cache-347 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-124-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem ptn0 ptn1 ) \kore-sort-SortList ) ) $.

$( symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-125-is-symbol $a #Symbol \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-125-is-pattern $a #Pattern ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-125-is-sugar $a #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
notation-cache-348 $p #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-125-is-symbol symbol-is-pattern IMP-symbol-125-is-pattern IMP-symbol-125-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-349 $p #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-125-is-symbol symbol-is-pattern IMP-symbol-125-is-pattern IMP-symbol-125-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-125-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-125-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-125-substitution $p #Substitution ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-125-is-pattern substitution-app substitution-disjoint notation-cache-348 notation-cache-349 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-350 $p #Notation ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-125-is-pattern IMP-symbol-125-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-125-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-125-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-125-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-125-is-pattern application-context-app-right application-context-app-left notation-cache-350 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-125-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-125-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-125-is-symbol symbol-is-pattern IMP-symbol-125-is-pattern application-context-app-right notation-cache-350 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-125-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int(SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-126-is-symbol $a #Symbol \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-126-is-pattern $a #Pattern ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $.
IMP-symbol-126-is-sugar $a #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $.
notation-cache-351 $p #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-126-is-symbol symbol-is-pattern IMP-symbol-126-is-pattern IMP-symbol-126-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-352 $p #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-126-is-symbol symbol-is-pattern IMP-symbol-126-is-pattern IMP-symbol-126-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-126-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-126-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-126-substitution $p #Substitution ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ) ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-126-is-pattern substitution-app substitution-disjoint notation-cache-351 notation-cache-352 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-353 $p #Notation ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-126-is-pattern IMP-symbol-126-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-126-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-126-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( IMP-symbol-126-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-126-is-pattern application-context-app-right application-context-app-left notation-cache-353 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-126-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-126-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-126-is-symbol symbol-is-pattern IMP-symbol-126-is-pattern application-context-app-right notation-cache-353 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-126-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ) \kore-sort-SortInt ) ) $.

$( symbol LblnoBCell(): SortBCellOpt{} $)
$c \kore-symbol-LblnoBCell \kore-symbol-LblnoBCell-symbol $.
IMP-symbol-127-is-symbol $a #Symbol \kore-symbol-LblnoBCell-symbol $.
IMP-symbol-127-is-pattern $a #Pattern \kore-symbol-LblnoBCell $.
IMP-symbol-127-is-sugar $a #Notation \kore-symbol-LblnoBCell \kore-symbol-LblnoBCell-symbol $.
${ IMP-symbol-127-substitution $p #Substitution \kore-symbol-LblnoBCell \kore-symbol-LblnoBCell ptn0 xX0 $= ( IMP-symbol-127-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-127-sorting $a |- ( \in-sort \kore-symbol-LblnoBCell \kore-sort-SortBCellOpt ) $.

$( symbol LblnoGeneratedCounterCell(): SortGeneratedCounterCellOpt{} $)
$c \kore-symbol-LblnoGeneratedCounterCell \kore-symbol-LblnoGeneratedCounterCell-symbol $.
IMP-symbol-128-is-symbol $a #Symbol \kore-symbol-LblnoGeneratedCounterCell-symbol $.
IMP-symbol-128-is-pattern $a #Pattern \kore-symbol-LblnoGeneratedCounterCell $.
IMP-symbol-128-is-sugar $a #Notation \kore-symbol-LblnoGeneratedCounterCell \kore-symbol-LblnoGeneratedCounterCell-symbol $.
${ IMP-symbol-128-substitution $p #Substitution \kore-symbol-LblnoGeneratedCounterCell \kore-symbol-LblnoGeneratedCounterCell ptn0 xX0 $= ( IMP-symbol-128-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-128-sorting $a |- ( \in-sort \kore-symbol-LblnoGeneratedCounterCell \kore-sort-SortGeneratedCounterCellOpt ) $.

$( symbol LblnoKCell(): SortKCellOpt{} $)
$c \kore-symbol-LblnoKCell \kore-symbol-LblnoKCell-symbol $.
IMP-symbol-129-is-symbol $a #Symbol \kore-symbol-LblnoKCell-symbol $.
IMP-symbol-129-is-pattern $a #Pattern \kore-symbol-LblnoKCell $.
IMP-symbol-129-is-sugar $a #Notation \kore-symbol-LblnoKCell \kore-symbol-LblnoKCell-symbol $.
${ IMP-symbol-129-substitution $p #Substitution \kore-symbol-LblnoKCell \kore-symbol-LblnoKCell ptn0 xX0 $= ( IMP-symbol-129-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-129-sorting $a |- ( \in-sort \kore-symbol-LblnoKCell \kore-sort-SortKCellOpt ) $.

$( symbol LblnoTCell(): SortTCellOpt{} $)
$c \kore-symbol-LblnoTCell \kore-symbol-LblnoTCell-symbol $.
IMP-symbol-130-is-symbol $a #Symbol \kore-symbol-LblnoTCell-symbol $.
IMP-symbol-130-is-pattern $a #Pattern \kore-symbol-LblnoTCell $.
IMP-symbol-130-is-sugar $a #Notation \kore-symbol-LblnoTCell \kore-symbol-LblnoTCell-symbol $.
${ IMP-symbol-130-substitution $p #Substitution \kore-symbol-LblnoTCell \kore-symbol-LblnoTCell ptn0 xX0 $= ( IMP-symbol-130-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-130-sorting $a |- ( \in-sort \kore-symbol-LblnoTCell \kore-sort-SortTCellOpt ) $.

$( symbol LblnotBool'Unds'(SortBool{}): SortBool{} $)
$c \kore-symbol-LblnotBool'Unds' \kore-symbol-LblnotBool'Unds'-symbol $.
IMP-symbol-131-is-symbol $a #Symbol \kore-symbol-LblnotBool'Unds'-symbol $.
IMP-symbol-131-is-pattern $a #Pattern ( \kore-symbol-LblnotBool'Unds' ptn0 ) $.
IMP-symbol-131-is-sugar $a #Notation ( \kore-symbol-LblnotBool'Unds' ptn0 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn0 ) $.
notation-cache-354 $p #Notation ( \kore-symbol-LblnotBool'Unds' ptn1 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn1 ) $= ( IMP-symbol-131-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-131-is-pattern IMP-symbol-131-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-355 $p #Notation ( \kore-symbol-LblnotBool'Unds' ptn2 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn2 ) $= ( IMP-symbol-131-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-131-is-pattern IMP-symbol-131-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-131-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-131-substitution $p #Substitution ( \kore-symbol-LblnotBool'Unds' ptn1 ) ( \kore-symbol-LblnotBool'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-131-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-131-is-pattern substitution-disjoint substitution-app notation-cache-354 notation-cache-355 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-356 $p #Notation ( \kore-symbol-LblnotBool'Unds' ptn0 ) ( \app \kore-symbol-LblnotBool'Unds'-symbol ptn0 ) $= ( IMP-symbol-131-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-131-is-pattern IMP-symbol-131-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-131-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-131-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblnotBool'Unds' ptn0 ) $= ( IMP-symbol-131-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-131-is-pattern application-context-app-right notation-cache-356 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-131-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortBool ) ( \in-sort ( \kore-symbol-LblnotBool'Unds' ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol Lblproject'Coln'AExp(SortK{}): SortAExp{} $)
$c \kore-symbol-Lblproject'Coln'AExp \kore-symbol-Lblproject'Coln'AExp-symbol $.
IMP-symbol-132-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'AExp-symbol $.
IMP-symbol-132-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) $.
IMP-symbol-132-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn0 ) $.
notation-cache-357 $p #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn1 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn1 ) $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-132-is-pattern IMP-symbol-132-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-358 $p #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn2 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn2 ) $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-132-is-pattern IMP-symbol-132-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-132-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-132-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'AExp ptn1 ) ( \kore-symbol-Lblproject'Coln'AExp ptn2 ) ptn0 xX0 $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-132-is-pattern substitution-disjoint substitution-app notation-cache-357 notation-cache-358 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-359 $p #Notation ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) ( \app \kore-symbol-Lblproject'Coln'AExp-symbol ptn0 ) $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-132-is-pattern IMP-symbol-132-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-132-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-132-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) $= ( IMP-symbol-132-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-132-is-pattern application-context-app-right notation-cache-359 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-132-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'AExp ptn0 ) \kore-sort-SortAExp ) ) $.

$( symbol Lblproject'Coln'BCell(SortK{}): SortBCell{} $)
$c \kore-symbol-Lblproject'Coln'BCell \kore-symbol-Lblproject'Coln'BCell-symbol $.
IMP-symbol-133-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'BCell-symbol $.
IMP-symbol-133-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'BCell ptn0 ) $.
IMP-symbol-133-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'BCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'BCell-symbol ptn0 ) $.
notation-cache-360 $p #Notation ( \kore-symbol-Lblproject'Coln'BCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'BCell-symbol ptn1 ) $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-133-is-pattern IMP-symbol-133-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-361 $p #Notation ( \kore-symbol-Lblproject'Coln'BCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'BCell-symbol ptn2 ) $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-133-is-pattern IMP-symbol-133-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-133-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-133-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'BCell ptn1 ) ( \kore-symbol-Lblproject'Coln'BCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-133-is-pattern substitution-disjoint substitution-app notation-cache-360 notation-cache-361 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-362 $p #Notation ( \kore-symbol-Lblproject'Coln'BCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'BCell-symbol ptn0 ) $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-133-is-pattern IMP-symbol-133-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-133-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-133-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'BCell ptn0 ) $= ( IMP-symbol-133-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-133-is-pattern application-context-app-right notation-cache-362 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-133-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'BCell ptn0 ) \kore-sort-SortBCell ) ) $.

$( symbol Lblproject'Coln'BCellOpt(SortK{}): SortBCellOpt{} $)
$c \kore-symbol-Lblproject'Coln'BCellOpt \kore-symbol-Lblproject'Coln'BCellOpt-symbol $.
IMP-symbol-134-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'BCellOpt-symbol $.
IMP-symbol-134-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'BCellOpt ptn0 ) $.
IMP-symbol-134-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'BCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'BCellOpt-symbol ptn0 ) $.
notation-cache-363 $p #Notation ( \kore-symbol-Lblproject'Coln'BCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'BCellOpt-symbol ptn1 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern IMP-symbol-134-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-364 $p #Notation ( \kore-symbol-Lblproject'Coln'BCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'BCellOpt-symbol ptn2 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern IMP-symbol-134-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-134-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-134-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'BCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'BCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern substitution-disjoint substitution-app notation-cache-363 notation-cache-364 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-365 $p #Notation ( \kore-symbol-Lblproject'Coln'BCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'BCellOpt-symbol ptn0 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-134-is-pattern IMP-symbol-134-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-134-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-134-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'BCellOpt ptn0 ) $= ( IMP-symbol-134-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-134-is-pattern application-context-app-right notation-cache-365 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-134-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'BCellOpt ptn0 ) \kore-sort-SortBCellOpt ) ) $.

$( symbol Lblproject'Coln'Block(SortK{}): SortBlock{} $)
$c \kore-symbol-Lblproject'Coln'Block \kore-symbol-Lblproject'Coln'Block-symbol $.
IMP-symbol-135-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Block-symbol $.
IMP-symbol-135-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Block ptn0 ) $.
IMP-symbol-135-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Block ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn0 ) $.
notation-cache-366 $p #Notation ( \kore-symbol-Lblproject'Coln'Block ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn1 ) $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-135-is-pattern IMP-symbol-135-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-367 $p #Notation ( \kore-symbol-Lblproject'Coln'Block ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn2 ) $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-135-is-pattern IMP-symbol-135-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-135-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-135-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Block ptn1 ) ( \kore-symbol-Lblproject'Coln'Block ptn2 ) ptn0 xX0 $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-135-is-pattern substitution-disjoint substitution-app notation-cache-366 notation-cache-367 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-368 $p #Notation ( \kore-symbol-Lblproject'Coln'Block ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Block-symbol ptn0 ) $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-135-is-pattern IMP-symbol-135-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-135-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-135-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Block ptn0 ) $= ( IMP-symbol-135-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-135-is-pattern application-context-app-right notation-cache-368 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-135-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Block ptn0 ) \kore-sort-SortBlock ) ) $.

$( symbol Lblproject'Coln'Bool(SortK{}): SortBool{} $)
$c \kore-symbol-Lblproject'Coln'Bool \kore-symbol-Lblproject'Coln'Bool-symbol $.
IMP-symbol-136-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Bool-symbol $.
IMP-symbol-136-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) $.
IMP-symbol-136-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn0 ) $.
notation-cache-369 $p #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn1 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern IMP-symbol-136-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-370 $p #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn2 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern IMP-symbol-136-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-136-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-136-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Bool ptn1 ) ( \kore-symbol-Lblproject'Coln'Bool ptn2 ) ptn0 xX0 $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern substitution-disjoint substitution-app notation-cache-369 notation-cache-370 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-371 $p #Notation ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Bool-symbol ptn0 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-136-is-pattern IMP-symbol-136-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-136-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-136-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) $= ( IMP-symbol-136-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-136-is-pattern application-context-app-right notation-cache-371 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-136-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Bool ptn0 ) \kore-sort-SortBool ) ) $.

$( symbol Lblproject'Coln'GeneratedCounterCell(SortK{}): SortGeneratedCounterCell{} $)
$c \kore-symbol-Lblproject'Coln'GeneratedCounterCell \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol $.
IMP-symbol-137-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol $.
IMP-symbol-137-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) $.
IMP-symbol-137-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn0 ) $.
notation-cache-372 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn1 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern IMP-symbol-137-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-373 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn2 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern IMP-symbol-137-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-137-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-137-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern substitution-disjoint substitution-app notation-cache-372 notation-cache-373 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-374 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCell-symbol ptn0 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-137-is-pattern IMP-symbol-137-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-137-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-137-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) $= ( IMP-symbol-137-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-137-is-pattern application-context-app-right notation-cache-374 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-137-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell ptn0 ) \kore-sort-SortGeneratedCounterCell ) ) $.

$( symbol Lblproject'Coln'GeneratedCounterCellOpt(SortK{}): SortGeneratedCounterCellOpt{} $)
$c \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol $.
IMP-symbol-138-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol $.
IMP-symbol-138-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) $.
IMP-symbol-138-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn0 ) $.
notation-cache-375 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn1 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern IMP-symbol-138-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-376 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn2 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern IMP-symbol-138-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-138-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-138-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern substitution-disjoint substitution-app notation-cache-375 notation-cache-376 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-377 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt-symbol ptn0 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-138-is-pattern IMP-symbol-138-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-138-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-138-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) $= ( IMP-symbol-138-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-138-is-pattern application-context-app-right notation-cache-377 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-138-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt ptn0 ) \kore-sort-SortGeneratedCounterCellOpt ) ) $.

$( symbol Lblproject'Coln'GeneratedTopCell(SortK{}): SortGeneratedTopCell{} $)
$c \kore-symbol-Lblproject'Coln'GeneratedTopCell \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol $.
IMP-symbol-139-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol $.
IMP-symbol-139-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) $.
IMP-symbol-139-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn0 ) $.
notation-cache-378 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn1 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern IMP-symbol-139-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-379 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn2 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern IMP-symbol-139-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-139-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-139-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern substitution-disjoint substitution-app notation-cache-378 notation-cache-379 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-380 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCell-symbol ptn0 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-139-is-pattern IMP-symbol-139-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-139-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-139-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) $= ( IMP-symbol-139-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-139-is-pattern application-context-app-right notation-cache-380 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-139-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedTopCell ptn0 ) \kore-sort-SortGeneratedTopCell ) ) $.

$( symbol Lblproject'Coln'GeneratedTopCellFragment(SortK{}): SortGeneratedTopCellFragment{} $)
$c \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol $.
IMP-symbol-140-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol $.
IMP-symbol-140-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) $.
IMP-symbol-140-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn0 ) $.
notation-cache-381 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn1 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn1 ) $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-140-is-pattern IMP-symbol-140-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-382 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn2 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn2 ) $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-140-is-pattern IMP-symbol-140-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-140-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-140-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn1 ) ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-140-is-pattern substitution-disjoint substitution-app notation-cache-381 notation-cache-382 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-383 $p #Notation ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment-symbol ptn0 ) $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-140-is-pattern IMP-symbol-140-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-140-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-140-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) $= ( IMP-symbol-140-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-140-is-pattern application-context-app-right notation-cache-383 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-140-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment ptn0 ) \kore-sort-SortGeneratedTopCellFragment ) ) $.

$( symbol Lblproject'Coln'Id2(SortK{}): SortId2{} $)
$c \kore-symbol-Lblproject'Coln'Id2 \kore-symbol-Lblproject'Coln'Id2-symbol $.
IMP-symbol-141-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Id2-symbol $.
IMP-symbol-141-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Id2 ptn0 ) $.
IMP-symbol-141-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Id2 ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Id2-symbol ptn0 ) $.
notation-cache-384 $p #Notation ( \kore-symbol-Lblproject'Coln'Id2 ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Id2-symbol ptn1 ) $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-141-is-pattern IMP-symbol-141-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-385 $p #Notation ( \kore-symbol-Lblproject'Coln'Id2 ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Id2-symbol ptn2 ) $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-141-is-pattern IMP-symbol-141-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-141-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-141-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Id2 ptn1 ) ( \kore-symbol-Lblproject'Coln'Id2 ptn2 ) ptn0 xX0 $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-141-is-pattern substitution-disjoint substitution-app notation-cache-384 notation-cache-385 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-386 $p #Notation ( \kore-symbol-Lblproject'Coln'Id2 ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Id2-symbol ptn0 ) $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-141-is-pattern IMP-symbol-141-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-141-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-141-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Id2 ptn0 ) $= ( IMP-symbol-141-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-141-is-pattern application-context-app-right notation-cache-386 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-141-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Id2 ptn0 ) \kore-sort-SortId2 ) ) $.

$( symbol Lblproject'Coln'Int(SortK{}): SortInt{} $)
$c \kore-symbol-Lblproject'Coln'Int \kore-symbol-Lblproject'Coln'Int-symbol $.
IMP-symbol-142-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Int-symbol $.
IMP-symbol-142-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Int ptn0 ) $.
IMP-symbol-142-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Int ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn0 ) $.
notation-cache-387 $p #Notation ( \kore-symbol-Lblproject'Coln'Int ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn1 ) $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-142-is-pattern IMP-symbol-142-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-388 $p #Notation ( \kore-symbol-Lblproject'Coln'Int ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn2 ) $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-142-is-pattern IMP-symbol-142-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-142-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-142-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Int ptn1 ) ( \kore-symbol-Lblproject'Coln'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-142-is-pattern substitution-disjoint substitution-app notation-cache-387 notation-cache-388 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-389 $p #Notation ( \kore-symbol-Lblproject'Coln'Int ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Int-symbol ptn0 ) $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-142-is-pattern IMP-symbol-142-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-142-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-142-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Int ptn0 ) $= ( IMP-symbol-142-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-142-is-pattern application-context-app-right notation-cache-389 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-142-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Int ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol Lblproject'Coln'K(SortK{}): SortK{} $)
$c \kore-symbol-Lblproject'Coln'K \kore-symbol-Lblproject'Coln'K-symbol $.
IMP-symbol-143-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'K-symbol $.
IMP-symbol-143-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'K ptn0 ) $.
IMP-symbol-143-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'K ptn0 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn0 ) $.
notation-cache-390 $p #Notation ( \kore-symbol-Lblproject'Coln'K ptn1 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn1 ) $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-143-is-pattern IMP-symbol-143-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-391 $p #Notation ( \kore-symbol-Lblproject'Coln'K ptn2 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn2 ) $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-143-is-pattern IMP-symbol-143-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-143-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-143-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'K ptn1 ) ( \kore-symbol-Lblproject'Coln'K ptn2 ) ptn0 xX0 $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-143-is-pattern substitution-disjoint substitution-app notation-cache-390 notation-cache-391 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-392 $p #Notation ( \kore-symbol-Lblproject'Coln'K ptn0 ) ( \app \kore-symbol-Lblproject'Coln'K-symbol ptn0 ) $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-143-is-pattern IMP-symbol-143-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-143-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-143-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'K ptn0 ) $= ( IMP-symbol-143-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-143-is-pattern application-context-app-right notation-cache-392 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-143-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'K ptn0 ) \kore-sort-SortK ) ) $.

$( symbol Lblproject'Coln'KCell(SortK{}): SortKCell{} $)
$c \kore-symbol-Lblproject'Coln'KCell \kore-symbol-Lblproject'Coln'KCell-symbol $.
IMP-symbol-144-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KCell-symbol $.
IMP-symbol-144-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) $.
IMP-symbol-144-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn0 ) $.
notation-cache-393 $p #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn1 ) $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-144-is-pattern IMP-symbol-144-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-394 $p #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn2 ) $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-144-is-pattern IMP-symbol-144-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-144-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-144-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KCell ptn1 ) ( \kore-symbol-Lblproject'Coln'KCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-144-is-pattern substitution-disjoint substitution-app notation-cache-393 notation-cache-394 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-395 $p #Notation ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCell-symbol ptn0 ) $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-144-is-pattern IMP-symbol-144-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-144-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-144-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) $= ( IMP-symbol-144-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-144-is-pattern application-context-app-right notation-cache-395 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-144-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KCell ptn0 ) \kore-sort-SortKCell ) ) $.

$( symbol Lblproject'Coln'KCellOpt(SortK{}): SortKCellOpt{} $)
$c \kore-symbol-Lblproject'Coln'KCellOpt \kore-symbol-Lblproject'Coln'KCellOpt-symbol $.
IMP-symbol-145-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KCellOpt-symbol $.
IMP-symbol-145-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) $.
IMP-symbol-145-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn0 ) $.
notation-cache-396 $p #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn1 ) $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-145-is-pattern IMP-symbol-145-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-397 $p #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn2 ) $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-145-is-pattern IMP-symbol-145-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-145-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-145-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'KCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-145-is-pattern substitution-disjoint substitution-app notation-cache-396 notation-cache-397 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-398 $p #Notation ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KCellOpt-symbol ptn0 ) $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-145-is-pattern IMP-symbol-145-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-145-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-145-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) $= ( IMP-symbol-145-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-145-is-pattern application-context-app-right notation-cache-398 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-145-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KCellOpt ptn0 ) \kore-sort-SortKCellOpt ) ) $.

$( symbol Lblproject'Coln'KItem(SortK{}): SortKItem{} $)
$c \kore-symbol-Lblproject'Coln'KItem \kore-symbol-Lblproject'Coln'KItem-symbol $.
IMP-symbol-146-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KItem-symbol $.
IMP-symbol-146-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) $.
IMP-symbol-146-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn0 ) $.
notation-cache-399 $p #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn1 ) $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-146-is-pattern IMP-symbol-146-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-400 $p #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn2 ) $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-146-is-pattern IMP-symbol-146-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-146-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-146-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KItem ptn1 ) ( \kore-symbol-Lblproject'Coln'KItem ptn2 ) ptn0 xX0 $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-146-is-pattern substitution-disjoint substitution-app notation-cache-399 notation-cache-400 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-401 $p #Notation ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KItem-symbol ptn0 ) $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-146-is-pattern IMP-symbol-146-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-146-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-146-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) $= ( IMP-symbol-146-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-146-is-pattern application-context-app-right notation-cache-401 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-146-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KItem ptn0 ) \kore-sort-SortKItem ) ) $.

$( symbol Lblproject'Coln'KResult(SortK{}): SortKResult{} $)
$c \kore-symbol-Lblproject'Coln'KResult \kore-symbol-Lblproject'Coln'KResult-symbol $.
IMP-symbol-147-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'KResult-symbol $.
IMP-symbol-147-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) $.
IMP-symbol-147-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn0 ) $.
notation-cache-402 $p #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn1 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn1 ) $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-147-is-pattern IMP-symbol-147-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-403 $p #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn2 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn2 ) $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-147-is-pattern IMP-symbol-147-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-147-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-147-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'KResult ptn1 ) ( \kore-symbol-Lblproject'Coln'KResult ptn2 ) ptn0 xX0 $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-147-is-pattern substitution-disjoint substitution-app notation-cache-402 notation-cache-403 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-404 $p #Notation ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) ( \app \kore-symbol-Lblproject'Coln'KResult-symbol ptn0 ) $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-147-is-pattern IMP-symbol-147-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-147-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-147-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) $= ( IMP-symbol-147-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-147-is-pattern application-context-app-right notation-cache-404 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-147-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'KResult ptn0 ) \kore-sort-SortKResult ) ) $.

$( symbol Lblproject'Coln'List(SortK{}): SortList{} $)
$c \kore-symbol-Lblproject'Coln'List \kore-symbol-Lblproject'Coln'List-symbol $.
IMP-symbol-148-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'List-symbol $.
IMP-symbol-148-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'List ptn0 ) $.
IMP-symbol-148-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'List ptn0 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn0 ) $.
notation-cache-405 $p #Notation ( \kore-symbol-Lblproject'Coln'List ptn1 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn1 ) $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-148-is-pattern IMP-symbol-148-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-406 $p #Notation ( \kore-symbol-Lblproject'Coln'List ptn2 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn2 ) $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-148-is-pattern IMP-symbol-148-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-148-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-148-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'List ptn1 ) ( \kore-symbol-Lblproject'Coln'List ptn2 ) ptn0 xX0 $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-148-is-pattern substitution-disjoint substitution-app notation-cache-405 notation-cache-406 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-407 $p #Notation ( \kore-symbol-Lblproject'Coln'List ptn0 ) ( \app \kore-symbol-Lblproject'Coln'List-symbol ptn0 ) $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-148-is-pattern IMP-symbol-148-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-148-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-148-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'List ptn0 ) $= ( IMP-symbol-148-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-148-is-pattern application-context-app-right notation-cache-407 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-148-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'List ptn0 ) \kore-sort-SortList ) ) $.

$( symbol Lblproject'Coln'Map(SortK{}): SortMap{} $)
$c \kore-symbol-Lblproject'Coln'Map \kore-symbol-Lblproject'Coln'Map-symbol $.
IMP-symbol-149-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Map-symbol $.
IMP-symbol-149-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Map ptn0 ) $.
IMP-symbol-149-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Map ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn0 ) $.
notation-cache-408 $p #Notation ( \kore-symbol-Lblproject'Coln'Map ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn1 ) $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-149-is-pattern IMP-symbol-149-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-409 $p #Notation ( \kore-symbol-Lblproject'Coln'Map ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn2 ) $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-149-is-pattern IMP-symbol-149-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-149-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-149-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Map ptn1 ) ( \kore-symbol-Lblproject'Coln'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-149-is-pattern substitution-disjoint substitution-app notation-cache-408 notation-cache-409 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-410 $p #Notation ( \kore-symbol-Lblproject'Coln'Map ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Map-symbol ptn0 ) $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-149-is-pattern IMP-symbol-149-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-149-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-149-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Map ptn0 ) $= ( IMP-symbol-149-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-149-is-pattern application-context-app-right notation-cache-410 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-149-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Map ptn0 ) \kore-sort-SortMap ) ) $.

$( symbol Lblproject'Coln'Pgm(SortK{}): SortPgm{} $)
$c \kore-symbol-Lblproject'Coln'Pgm \kore-symbol-Lblproject'Coln'Pgm-symbol $.
IMP-symbol-150-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Pgm-symbol $.
IMP-symbol-150-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) $.
IMP-symbol-150-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn0 ) $.
notation-cache-411 $p #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn1 ) $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-150-is-pattern IMP-symbol-150-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-412 $p #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn2 ) $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-150-is-pattern IMP-symbol-150-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-150-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-150-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Pgm ptn1 ) ( \kore-symbol-Lblproject'Coln'Pgm ptn2 ) ptn0 xX0 $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-150-is-pattern substitution-disjoint substitution-app notation-cache-411 notation-cache-412 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-413 $p #Notation ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Pgm-symbol ptn0 ) $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-150-is-pattern IMP-symbol-150-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-150-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-150-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) $= ( IMP-symbol-150-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-150-is-pattern application-context-app-right notation-cache-413 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-150-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Pgm ptn0 ) \kore-sort-SortPgm ) ) $.

$( symbol Lblproject'Coln'Set(SortK{}): SortSet{} $)
$c \kore-symbol-Lblproject'Coln'Set \kore-symbol-Lblproject'Coln'Set-symbol $.
IMP-symbol-151-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Set-symbol $.
IMP-symbol-151-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Set ptn0 ) $.
IMP-symbol-151-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Set ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn0 ) $.
notation-cache-414 $p #Notation ( \kore-symbol-Lblproject'Coln'Set ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn1 ) $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-151-is-pattern IMP-symbol-151-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-415 $p #Notation ( \kore-symbol-Lblproject'Coln'Set ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn2 ) $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-151-is-pattern IMP-symbol-151-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-151-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-151-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Set ptn1 ) ( \kore-symbol-Lblproject'Coln'Set ptn2 ) ptn0 xX0 $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-151-is-pattern substitution-disjoint substitution-app notation-cache-414 notation-cache-415 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-416 $p #Notation ( \kore-symbol-Lblproject'Coln'Set ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Set-symbol ptn0 ) $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-151-is-pattern IMP-symbol-151-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-151-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-151-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Set ptn0 ) $= ( IMP-symbol-151-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-151-is-pattern application-context-app-right notation-cache-416 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-151-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Set ptn0 ) \kore-sort-SortSet ) ) $.

$( symbol Lblproject'Coln'Stmt(SortK{}): SortStmt{} $)
$c \kore-symbol-Lblproject'Coln'Stmt \kore-symbol-Lblproject'Coln'Stmt-symbol $.
IMP-symbol-152-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'Stmt-symbol $.
IMP-symbol-152-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) $.
IMP-symbol-152-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn0 ) $.
notation-cache-417 $p #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn1 ) $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-152-is-pattern IMP-symbol-152-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-418 $p #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn2 ) $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-152-is-pattern IMP-symbol-152-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-152-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-152-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'Stmt ptn1 ) ( \kore-symbol-Lblproject'Coln'Stmt ptn2 ) ptn0 xX0 $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-152-is-pattern substitution-disjoint substitution-app notation-cache-417 notation-cache-418 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-419 $p #Notation ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'Stmt-symbol ptn0 ) $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-152-is-pattern IMP-symbol-152-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-152-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-152-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) $= ( IMP-symbol-152-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-152-is-pattern application-context-app-right notation-cache-419 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-152-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'Stmt ptn0 ) \kore-sort-SortStmt ) ) $.

$( symbol Lblproject'Coln'TCell(SortK{}): SortTCell{} $)
$c \kore-symbol-Lblproject'Coln'TCell \kore-symbol-Lblproject'Coln'TCell-symbol $.
IMP-symbol-153-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'TCell-symbol $.
IMP-symbol-153-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) $.
IMP-symbol-153-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn0 ) $.
notation-cache-420 $p #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn1 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn1 ) $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-153-is-pattern IMP-symbol-153-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-421 $p #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn2 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn2 ) $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-153-is-pattern IMP-symbol-153-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-153-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-153-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'TCell ptn1 ) ( \kore-symbol-Lblproject'Coln'TCell ptn2 ) ptn0 xX0 $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-153-is-pattern substitution-disjoint substitution-app notation-cache-420 notation-cache-421 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-422 $p #Notation ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCell-symbol ptn0 ) $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-153-is-pattern IMP-symbol-153-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-153-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-153-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) $= ( IMP-symbol-153-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-153-is-pattern application-context-app-right notation-cache-422 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-153-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'TCell ptn0 ) \kore-sort-SortTCell ) ) $.

$( symbol Lblproject'Coln'TCellFragment(SortK{}): SortTCellFragment{} $)
$c \kore-symbol-Lblproject'Coln'TCellFragment \kore-symbol-Lblproject'Coln'TCellFragment-symbol $.
IMP-symbol-154-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'TCellFragment-symbol $.
IMP-symbol-154-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) $.
IMP-symbol-154-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn0 ) $.
notation-cache-423 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn1 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn1 ) $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-154-is-pattern IMP-symbol-154-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-424 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn2 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn2 ) $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-154-is-pattern IMP-symbol-154-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-154-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-154-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'TCellFragment ptn1 ) ( \kore-symbol-Lblproject'Coln'TCellFragment ptn2 ) ptn0 xX0 $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-154-is-pattern substitution-disjoint substitution-app notation-cache-423 notation-cache-424 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-425 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellFragment-symbol ptn0 ) $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-154-is-pattern IMP-symbol-154-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-154-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-154-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) $= ( IMP-symbol-154-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-154-is-pattern application-context-app-right notation-cache-425 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-154-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'TCellFragment ptn0 ) \kore-sort-SortTCellFragment ) ) $.

$( symbol Lblproject'Coln'TCellOpt(SortK{}): SortTCellOpt{} $)
$c \kore-symbol-Lblproject'Coln'TCellOpt \kore-symbol-Lblproject'Coln'TCellOpt-symbol $.
IMP-symbol-155-is-symbol $a #Symbol \kore-symbol-Lblproject'Coln'TCellOpt-symbol $.
IMP-symbol-155-is-pattern $a #Pattern ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) $.
IMP-symbol-155-is-sugar $a #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn0 ) $.
notation-cache-426 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn1 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn1 ) $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-155-is-pattern IMP-symbol-155-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-427 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn2 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn2 ) $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-155-is-pattern IMP-symbol-155-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-155-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-155-substitution $p #Substitution ( \kore-symbol-Lblproject'Coln'TCellOpt ptn1 ) ( \kore-symbol-Lblproject'Coln'TCellOpt ptn2 ) ptn0 xX0 $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-155-is-pattern substitution-disjoint substitution-app notation-cache-426 notation-cache-427 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-428 $p #Notation ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) ( \app \kore-symbol-Lblproject'Coln'TCellOpt-symbol ptn0 ) $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-155-is-pattern IMP-symbol-155-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-155-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-155-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) $= ( IMP-symbol-155-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-155-is-pattern application-context-app-right notation-cache-428 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-155-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortK ) ( \in-sort ( \kore-symbol-Lblproject'Coln'TCellOpt ptn0 ) \kore-sort-SortTCellOpt ) ) $.

$( symbol LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int(SortInt{}): SortInt{} $)
$c \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-156-is-symbol $a #Symbol \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol $.
IMP-symbol-156-is-pattern $a #Pattern ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $.
IMP-symbol-156-is-sugar $a #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $.
notation-cache-429 $p #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-156-is-pattern IMP-symbol-156-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-430 $p #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-156-is-pattern IMP-symbol-156-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-156-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-156-substitution $p #Substitution ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn1 ) ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-156-is-pattern substitution-disjoint substitution-app notation-cache-429 notation-cache-430 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-431 $p #Notation ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) ( \app \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-156-is-pattern IMP-symbol-156-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-156-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-156-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) $= ( IMP-symbol-156-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-156-is-pattern application-context-app-right notation-cache-431 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-156-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set(SortMap{}, SortSet{}): SortMap{} $)
$c \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol $.
IMP-symbol-157-is-symbol $a #Symbol \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol $.
IMP-symbol-157-is-pattern $a #Pattern ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) $.
IMP-symbol-157-is-sugar $a #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn0 ) ptn1 ) $.
notation-cache-432 $p #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-157-is-symbol symbol-is-pattern IMP-symbol-157-is-pattern IMP-symbol-157-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-433 $p #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-157-is-symbol symbol-is-pattern IMP-symbol-157-is-pattern IMP-symbol-157-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-157-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-157-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-157-substitution $p #Substitution ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn1 ptn2 ) ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-157-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-157-is-pattern substitution-app substitution-disjoint notation-cache-432 notation-cache-433 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-434 $p #Notation ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-157-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-157-is-pattern IMP-symbol-157-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-157-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-157-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) $= ( IMP-symbol-157-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-157-is-pattern application-context-app-right application-context-app-left notation-cache-434 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-157-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-157-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-157-is-symbol symbol-is-pattern IMP-symbol-157-is-pattern application-context-app-right notation-cache-434 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-157-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortSet ) ) ( \in-sort ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$( symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int(SortInt{}, SortInt{}, SortInt{}): SortInt{} $)
$c \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-158-is-symbol $a #Symbol \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol $.
IMP-symbol-158-is-pattern $a #Pattern ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $.
IMP-symbol-158-is-sugar $a #Notation ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-158-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-158-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-158-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-158-substitution $p #Substitution ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn1 ptn2 ptn3 ) ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern IMP-symbol-158-is-pattern substitution-app notation-reflexivity IMP-symbol-158-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-435 $p #Notation ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-158-is-pattern IMP-symbol-158-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-158-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-158-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-158-is-pattern application-context-app-right notation-cache-435 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-158-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-158-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern IMP-symbol-158-is-pattern application-context-app-right application-context-app-left notation-cache-435 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-158-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-158-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-158-is-symbol symbol-is-pattern IMP-symbol-158-is-pattern application-context-app-right notation-cache-435 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-158-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortInt ) ) ( \in-sort ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int ptn0 ptn1 ptn2 ) \kore-sort-SortInt ) ) $.

$( symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List(SortList{}): SortInt{} $)
$c \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol $.
IMP-symbol-159-is-symbol $a #Symbol \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol $.
IMP-symbol-159-is-pattern $a #Pattern ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) $.
IMP-symbol-159-is-sugar $a #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn0 ) $.
notation-cache-436 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn1 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn1 ) $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-159-is-pattern IMP-symbol-159-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-437 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn2 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn2 ) $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-159-is-pattern IMP-symbol-159-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-159-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-159-substitution $p #Substitution ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn1 ) ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn2 ) ptn0 xX0 $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-159-is-pattern substitution-disjoint substitution-app notation-cache-436 notation-cache-437 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-438 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List-symbol ptn0 ) $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-159-is-pattern IMP-symbol-159-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-159-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-159-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) $= ( IMP-symbol-159-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-159-is-pattern application-context-app-right notation-cache-438 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-159-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map(SortMap{}): SortInt{} $)
$c \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol $.
IMP-symbol-160-is-symbol $a #Symbol \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol $.
IMP-symbol-160-is-pattern $a #Pattern ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) $.
IMP-symbol-160-is-sugar $a #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn0 ) $.
notation-cache-439 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn1 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-160-is-pattern IMP-symbol-160-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-440 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn2 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-160-is-pattern IMP-symbol-160-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-160-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-160-substitution $p #Substitution ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn1 ) ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-160-is-pattern substitution-disjoint substitution-app notation-cache-439 notation-cache-440 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-441 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-160-is-pattern IMP-symbol-160-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-160-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-160-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) $= ( IMP-symbol-160-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-160-is-pattern application-context-app-right notation-cache-441 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-160-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set(SortSet{}): SortInt{} $)
$c \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol $.
IMP-symbol-161-is-symbol $a #Symbol \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol $.
IMP-symbol-161-is-pattern $a #Pattern ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) $.
IMP-symbol-161-is-sugar $a #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn0 ) $.
notation-cache-442 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn1 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn1 ) $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-161-is-pattern IMP-symbol-161-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-443 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn2 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn2 ) $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-161-is-pattern IMP-symbol-161-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-161-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-161-substitution $p #Substitution ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn1 ) ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn2 ) ptn0 xX0 $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-161-is-pattern substitution-disjoint substitution-app notation-cache-442 notation-cache-443 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-444 $p #Notation ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) ( \app \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set-symbol ptn0 ) $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-161-is-pattern IMP-symbol-161-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-161-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-161-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) $= ( IMP-symbol-161-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-161-is-pattern application-context-app-right notation-cache-444 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-161-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortSet ) ( \in-sort ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set ptn0 ) \kore-sort-SortInt ) ) $.

$( symbol LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int(SortInt{}): SortK{} $)
$c \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol $.
IMP-symbol-162-is-symbol $a #Symbol \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol $.
IMP-symbol-162-is-pattern $a #Pattern ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) $.
IMP-symbol-162-is-sugar $a #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn0 ) $.
notation-cache-445 $p #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn1 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn1 ) $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-162-is-pattern IMP-symbol-162-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-446 $p #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn2 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn2 ) $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-162-is-pattern IMP-symbol-162-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-162-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-162-substitution $p #Substitution ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn1 ) ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn2 ) ptn0 xX0 $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-162-is-pattern substitution-disjoint substitution-app notation-cache-445 notation-cache-446 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-447 $p #Notation ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) ( \app \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int-symbol ptn0 ) $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-162-is-pattern IMP-symbol-162-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-162-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-162-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) $= ( IMP-symbol-162-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-162-is-pattern application-context-app-right notation-cache-447 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-162-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int ptn0 ) \kore-sort-SortK ) ) $.

$( symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List(SortList{}, SortInt{}, SortList{}): SortList{} $)
$c \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol $.
IMP-symbol-163-is-symbol $a #Symbol \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol $.
IMP-symbol-163-is-pattern $a #Pattern ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $.
IMP-symbol-163-is-sugar $a #Notation ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol ptn0 ) ptn1 ) ptn2 ) $.
${ IMP-symbol-163-substitution.0 $e #Substitution ptn1 ptn4 ptn0 xX0 $.
   IMP-symbol-163-substitution.1 $e #Substitution ptn2 ptn5 ptn0 xX0 $.
   IMP-symbol-163-substitution.2 $e #Substitution ptn3 ptn6 ptn0 xX0 $.
   IMP-symbol-163-substitution $p #Substitution ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn1 ptn2 ptn3 ) ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn4 ptn5 ptn6 ) ptn0 xX0 $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern IMP-symbol-163-is-pattern substitution-app notation-reflexivity IMP-symbol-163-is-sugar notation-transitivity substitution-disjoint notation-substitution ) MNCLDLELMNFLGLHLBCDEOFGHOBABMNCLDLEMNFLGLHABMNCLDMNFLGABMNCMNFAMNBATIPJPKPCDEOMNCLDLELMNCLDLELCDERMNCLDLELQSFGHOMNFLGLHLMNFLGLHLFGHRMNFLGLHLQSBQUA $. $}
notation-cache-448 $p #Notation ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) ( \app ( \app ( \app \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List-symbol ptn0 ) ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern notation-reflexivity notation-app IMP-symbol-163-is-pattern IMP-symbol-163-is-sugar notation-transitivity ) ABCIEFADBDCDEFADBDCDABCJEFADBDCEFADBDCEFADBEFADBEFAEFAEFGAGHBGHCGHK $.
${ $d xX0 ptn1 $.
   $d xX0 ptn2 $.
   IMP-symbol-163-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-163-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern application-context-app-left IMP-symbol-163-is-pattern application-context-app-right notation-cache-448 notation-application-context ) GHBFCFDFBCDJAGHBFCFDAGHBFCAGHBAEKIIBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn2 $.
   IMP-symbol-163-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-163-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern IMP-symbol-163-is-pattern application-context-app-right application-context-app-left notation-cache-448 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAGHBFCAEJKBCDLM $. $}
${ $d xX0 ptn0 $.
   $d xX0 ptn1 $.
   IMP-symbol-163-application-context-2.0 $e #ApplicationContext xX0 ptn2 $.
   IMP-symbol-163-application-context-2 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) $= ( app-is-pattern IMP-symbol-163-is-symbol symbol-is-pattern IMP-symbol-163-is-pattern application-context-app-right notation-cache-448 notation-application-context ) GHBFCFDFBCDIAGHBFCFDAEJBCDKL $. $}
IMP-symbol-163-sorting $a |- ( \imp ( \and ( \and ( \in-sort ptn0 \kore-sort-SortList ) ( \in-sort ptn1 \kore-sort-SortInt ) ) ( \in-sort ptn2 \kore-sort-SortList ) ) ( \in-sort ( \kore-symbol-LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List ptn0 ptn1 ptn2 ) \kore-sort-SortList ) ) $.

$( symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map(SortMap{}, SortMap{}): SortMap{} $)
$c \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-164-is-symbol $a #Symbol \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol $.
IMP-symbol-164-is-pattern $a #Pattern ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $.
IMP-symbol-164-is-sugar $a #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $.
notation-cache-449 $p #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn1 ) ptn2 ) $= ( app-is-pattern IMP-symbol-164-is-symbol symbol-is-pattern IMP-symbol-164-is-pattern IMP-symbol-164-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
notation-cache-450 $p #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn3 ) ptn4 ) $= ( app-is-pattern IMP-symbol-164-is-symbol symbol-is-pattern IMP-symbol-164-is-pattern IMP-symbol-164-is-sugar notation-reflexivity notation-transitivity ) ABFDEACBCDEACBCABGDEACBCHI $.
${ IMP-symbol-164-substitution.0 $e #Substitution ptn1 ptn3 ptn0 xX0 $.
   IMP-symbol-164-substitution.1 $e #Substitution ptn2 ptn4 ptn0 xX0 $.
   IMP-symbol-164-substitution $p #Substitution ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn1 ptn2 ) ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn3 ptn4 ) ptn0 xX0 $= ( IMP-symbol-164-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-164-is-pattern substitution-app substitution-disjoint notation-cache-449 notation-cache-450 notation-reflexivity notation-substitution ) IJCKDKIJEKFKBCDLEFLBABIJCKDIJEKFABIJCIJEAIJBANGMHMCDOEFPBQR $. $}
notation-cache-451 $p #Notation ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) ( \app ( \app \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map-symbol ptn0 ) ptn1 ) $= ( IMP-symbol-164-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity notation-app IMP-symbol-164-is-pattern IMP-symbol-164-is-sugar notation-transitivity ) ABHCDAEBECDAEBEABICDAEBCDAEBCDACDACDFAFGBFGJ $.
${ $d xX0 ptn1 $.
   IMP-symbol-164-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-164-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( IMP-symbol-164-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-164-is-pattern application-context-app-right application-context-app-left notation-cache-451 notation-application-context ) EFBGCGBCHAEFBGCAEFBADIJBCKL $. $}
${ $d xX0 ptn0 $.
   IMP-symbol-164-application-context-1.0 $e #ApplicationContext xX0 ptn1 $.
   IMP-symbol-164-application-context-1 $p #ApplicationContext xX0 ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) $= ( app-is-pattern IMP-symbol-164-is-symbol symbol-is-pattern IMP-symbol-164-is-pattern application-context-app-right notation-cache-451 notation-application-context ) FGBECEBCHAFGBECADIBCJK $. $}
IMP-symbol-164-sorting $a |- ( \imp ( \and ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ptn1 \kore-sort-SortMap ) ) ( \in-sort ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map ptn0 ptn1 ) \kore-sort-SortMap ) ) $.

$( symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map(SortMap{}): SortList{} $)
$c \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-165-is-symbol $a #Symbol \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol $.
IMP-symbol-165-is-pattern $a #Pattern ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $.
IMP-symbol-165-is-sugar $a #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $.
notation-cache-452 $p #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn1 ) $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-165-is-pattern IMP-symbol-165-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-453 $p #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn2 ) $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-165-is-pattern IMP-symbol-165-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-165-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-165-substitution $p #Substitution ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn1 ) ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn2 ) ptn0 xX0 $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-165-is-pattern substitution-disjoint substitution-app notation-cache-452 notation-cache-453 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-454 $p #Notation ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) ( \app \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map-symbol ptn0 ) $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-165-is-pattern IMP-symbol-165-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-165-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-165-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) $= ( IMP-symbol-165-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-165-is-pattern application-context-app-right notation-cache-454 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-165-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortMap ) ( \in-sort ( \kore-symbol-Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map ptn0 ) \kore-sort-SortList ) ) $.

$( symbol Lblw1'Unds'IMP-SYNTAX'Unds'Id2(): SortId2{} $)
$c \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
IMP-symbol-166-is-symbol $a #Symbol \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
IMP-symbol-166-is-pattern $a #Pattern \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 $.
IMP-symbol-166-is-sugar $a #Notation \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
${ IMP-symbol-166-substitution $p #Substitution \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 ptn0 xX0 $= ( IMP-symbol-166-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-166-sorting $a |- ( \in-sort \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) $.

$( symbol Lblx1'Unds'IMP-SYNTAX'Unds'Id2(): SortId2{} $)
$c \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
IMP-symbol-167-is-symbol $a #Symbol \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
IMP-symbol-167-is-pattern $a #Pattern \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 $.
IMP-symbol-167-is-sugar $a #Notation \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2-symbol $.
${ IMP-symbol-167-substitution $p #Substitution \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 ptn0 xX0 $= ( IMP-symbol-167-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-167-sorting $a |- ( \in-sort \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) $.

$( symbol Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt(SortStmt{}): SortBlock{} $)
$c \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol $.
IMP-symbol-168-is-symbol $a #Symbol \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol $.
IMP-symbol-168-is-pattern $a #Pattern ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) $.
IMP-symbol-168-is-sugar $a #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn0 ) $.
notation-cache-455 $p #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn1 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn1 ) $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-168-is-pattern IMP-symbol-168-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-456 $p #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn2 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn2 ) $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-168-is-pattern IMP-symbol-168-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-168-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-168-substitution $p #Substitution ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn1 ) ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn2 ) ptn0 xX0 $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-168-is-pattern substitution-disjoint substitution-app notation-cache-455 notation-cache-456 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-457 $p #Notation ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) ( \app \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt-symbol ptn0 ) $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-168-is-pattern IMP-symbol-168-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-168-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-168-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) $= ( IMP-symbol-168-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-168-is-pattern application-context-app-right notation-cache-457 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-168-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortStmt ) ( \in-sort ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt ptn0 ) \kore-sort-SortBlock ) ) $.

$( symbol Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block(): SortBlock{} $)
$c \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block-symbol $.
IMP-symbol-169-is-symbol $a #Symbol \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block-symbol $.
IMP-symbol-169-is-pattern $a #Pattern \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block $.
IMP-symbol-169-is-sugar $a #Notation \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block-symbol $.
${ IMP-symbol-169-substitution $p #Substitution \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ptn0 xX0 $= ( IMP-symbol-169-is-pattern substitution-disjoint ) CBAD $. $}
IMP-symbol-169-sorting $a |- ( \in-sort \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block \kore-sort-SortBlock ) $.

$( symbol Lbl'Tild'Int'Unds'(SortInt{}): SortInt{} $)
$c \kore-symbol-Lbl'Tild'Int'Unds' \kore-symbol-Lbl'Tild'Int'Unds'-symbol $.
IMP-symbol-170-is-symbol $a #Symbol \kore-symbol-Lbl'Tild'Int'Unds'-symbol $.
IMP-symbol-170-is-pattern $a #Pattern ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) $.
IMP-symbol-170-is-sugar $a #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn0 ) $.
notation-cache-458 $p #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn1 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn1 ) $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-170-is-pattern IMP-symbol-170-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
notation-cache-459 $p #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn2 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn2 ) $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-170-is-pattern IMP-symbol-170-is-sugar notation-reflexivity notation-transitivity ) AEBCADBCADAFBCADGH $.
${ IMP-symbol-170-substitution.0 $e #Substitution ptn1 ptn2 ptn0 xX0 $.
   IMP-symbol-170-substitution $p #Substitution ( \kore-symbol-Lbl'Tild'Int'Unds' ptn1 ) ( \kore-symbol-Lbl'Tild'Int'Unds' ptn2 ) ptn0 xX0 $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-170-is-pattern substitution-disjoint substitution-app notation-cache-458 notation-cache-459 notation-reflexivity notation-substitution ) FGCHFGDHBCIDIBABFGCFGDAFGBAJEKCLDMBNO $. $}
notation-cache-460 $p #Notation ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) ( \app \kore-symbol-Lbl'Tild'Int'Unds'-symbol ptn0 ) $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern notation-reflexivity IMP-symbol-170-is-pattern IMP-symbol-170-is-sugar notation-app notation-transitivity ) AFBCADBCADAGBCABCABCEAEHI $.
${ IMP-symbol-170-application-context-0.0 $e #ApplicationContext xX0 ptn0 $.
   IMP-symbol-170-application-context-0 $p #ApplicationContext xX0 ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) $= ( IMP-symbol-170-is-symbol symbol-is-pattern app-is-pattern IMP-symbol-170-is-pattern application-context-app-right notation-cache-460 notation-application-context ) DEBFBGADEBACHBIJ $. $}
IMP-symbol-170-sorting $a |- ( \imp ( \in-sort ptn0 \kore-sort-SortInt ) ( \in-sort ( \kore-symbol-Lbl'Tild'Int'Unds' ptn0 ) \kore-sort-SortInt ) ) $.

$( adding 2 new metavariable(s) $)
$v kore-element-var-Val kore-element-var-From $.
kore-element-var-Val-elementvariable $f #ElementVariable kore-element-var-Val $.
kore-element-var-From-elementvariable $f #ElementVariable kore-element-var-From $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From $.

$( axiom {R} \exists{R}(Val:SortKResult{}, \equals{SortKResult{}, R}(Val:SortKResult{}, inj{SortInt{}, SortKResult{}}(From:SortInt{}))) $)
IMP-axiom-0 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKResult kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKResult kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKResult kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortBCellOpt{}, SortKItem{}}(From:SortBCellOpt{}))) $)
IMP-axiom-1 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortAExp{}, SortKItem{}}(From:SortAExp{}))) $)
IMP-axiom-2 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortAExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortBCell{}, SortKItem{}}(From:SortBCell{}))) $)
IMP-axiom-3 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortTCell{}, SortKItem{}}(From:SortTCell{}))) $)
IMP-axiom-4 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}}(From:SortKCellOpt{}))) $)
IMP-axiom-5 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(From:SortGeneratedCounterCellOpt{}))) $)
IMP-axiom-6 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortKResult{}, SortKItem{}}(From:SortKResult{}))) $)
IMP-axiom-7 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKResult ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R}(Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}(From:SortGeneratedCounterCell{}))) $)
IMP-axiom-8 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCellOpt kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortKCell{}, SortKItem{}}(From:SortKCell{}))) $)
IMP-axiom-9 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}}(From:SortTCellOpt{}))) $)
IMP-axiom-10 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCellOpt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortId2{}, SortKItem{}}(From:SortId2{}))) $)
IMP-axiom-11 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId2 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId2 \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R}(Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}}(From:SortKCell{}))) $)
IMP-axiom-12 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKCellOpt kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortSet{}, SortKItem{}}(From:SortSet{}))) $)
IMP-axiom-13 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortSet ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortBlock{}, SortKItem{}}(From:SortBlock{}))) $)
IMP-axiom-14 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBlock ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}}(From:SortGeneratedCounterCell{}))) $)
IMP-axiom-15 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R}(Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}}(From:SortTCell{}))) $)
IMP-axiom-16 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCell \kore-sort-SortTCellOpt kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}}(From:SortTCellFragment{}))) $)
IMP-axiom-17 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortTCellFragment ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBCellOpt{}, \equals{SortBCellOpt{}, R}(Val:SortBCellOpt{}, inj{SortBCell{}, SortBCellOpt{}}(From:SortBCell{}))) $)
IMP-axiom-18 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBCellOpt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBCell \kore-sort-SortBCellOpt kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}}(From:SortGeneratedTopCell{}))) $)
IMP-axiom-19 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedTopCell ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, inj{SortInt{}, SortAExp{}}(From:SortInt{}))) $)
IMP-axiom-20 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortList{}, SortKItem{}}(From:SortList{}))) $)
IMP-axiom-21 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortList ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortStmt{}, \equals{SortStmt{}, R}(Val:SortStmt{}, inj{SortBlock{}, SortStmt{}}(From:SortBlock{}))) $)
IMP-axiom-22 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBlock ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBlock \kore-sort-SortStmt kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortBool{}, SortKItem{}}(From:SortBool{}))) $)
IMP-axiom-23 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortInt{}, SortKItem{}}(From:SortInt{}))) $)
IMP-axiom-24 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}}(From:SortGeneratedTopCellFragment{}))) $)
IMP-axiom-25 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortGeneratedTopCellFragment ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortPgm{}, SortKItem{}}(From:SortPgm{}))) $)
IMP-axiom-26 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortPgm ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, inj{SortId2{}, SortAExp{}}(From:SortId2{}))) $)
IMP-axiom-27 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortId2 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortId2 \kore-sort-SortAExp kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortStmt{}, SortKItem{}}(From:SortStmt{}))) $)
IMP-axiom-28 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortMap{}, SortKItem{}}(From:SortMap{}))) $)
IMP-axiom-29 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortPgm{}, \equals{SortPgm{}, R}(Val:SortPgm{}, inj{SortStmt{}, SortPgm{}}(From:SortStmt{}))) $)
IMP-axiom-30 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-From ) ) ) ) ) $.

$( adding 1 new metavariable(s) $)
$v kore-element-var-K0 $.
kore-element-var-K0-elementvariable $f #ElementVariable kore-element-var-K0 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) $)
IMP-axiom-31 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) $)
IMP-axiom-43 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) $)
IMP-axiom-54 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) $)
IMP-axiom-64 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) $)
IMP-axiom-73 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) $)
IMP-axiom-81 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) $)
IMP-axiom-88 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) $)
IMP-axiom-94 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) $)
IMP-axiom-99 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) $)
IMP-axiom-103 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'{}(K0:SortK{}))) $)
IMP-axiom-106 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( adding 2 new metavariable(s) $)
$v kore-element-var-K1 kore-element-var-K2 $.
kore-element-var-K1-elementvariable $f #ElementVariable kore-element-var-K1 $.
kore-element-var-K2-elementvariable $f #ElementVariable kore-element-var-K2 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 $.

$( axiom {R, SortSort} \exists{R}(Val:SortSort, \equals{SortSort, R}(Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) $)
IMP-axiom-108 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-SortSort ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 kore-sort-var-SortSort ) ( \and ( \in-sort kore-element-var-K2 kore-sort-var-SortSort ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists kore-sort-var-SortSort kore-sort-var-R kore-element-var-Val ( \kore-equals kore-sort-var-SortSort kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort kore-sort-var-SortSort kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int{}(K0:SortInt{}))) $)
IMP-axiom-109 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortList{}, \equals{SortList{}, R}(Val:SortList{}, Lbl'Stop'List{}())) $)
IMP-axiom-116 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'List ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'Stop'Map{}())) $)
IMP-axiom-117 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lbl'Stop'Set{}())) $)
IMP-axiom-118 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Set ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortTCell{}, \equals{SortTCell{}, R}(Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortKCell{}, K1:SortBCell{}))) $)
IMP-axiom-119 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKCell ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'T'-GT-' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R}(Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortBCellOpt{}))) $)
IMP-axiom-121 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKCellOpt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCellFragment kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCellFragment kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBCell{}, \equals{SortBCell{}, R}(Val:SortBCell{}, Lbl'-LT-'b'-GT-'{}(K0:SortInt{}))) $)
IMP-axiom-123 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R}(Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) $)
IMP-axiom-125 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R}(Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) $)
IMP-axiom-127 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortTCell ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R}(Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) $)
IMP-axiom-129 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortTCellOpt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKCell{}, \equals{SortKCell{}, R}(Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) $)
IMP-axiom-131 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortList{}, \equals{SortList{}, R}(Val:SortList{}, LblListItem{}(K0:SortKItem{}))) $)
IMP-axiom-133 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblListItem kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) $)
IMP-axiom-134 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortKItem ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblMap'Coln'update kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) $)
IMP-axiom-135 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSet'Coln'difference kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) $)
IMP-axiom-136 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSet'Coln'in kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) $)
IMP-axiom-137 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblSetItem kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) $)
IMP-axiom-138 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-144 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-145 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsStar'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) $)
IMP-axiom-146 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-151 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) $)
IMP-axiom-152 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-156 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) $)
IMP-axiom-157 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) $)
IMP-axiom-158 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortAExp{}, \equals{SortAExp{}, R}(Val:SortAExp{}, Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) $)
IMP-axiom-161 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-163 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) $)
IMP-axiom-164 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) $)
IMP-axiom-165 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-166 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-167 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-168 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) $)
IMP-axiom-169 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-170 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-171 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) $)
IMP-axiom-172 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortStmt{}, \equals{SortStmt{}, R}(Val:SortStmt{}, Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp{}(K0:SortId2{}, K1:SortAExp{}))) $)
IMP-axiom-173 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-176 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-177 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds-GT-'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortList{}, \equals{SortList{}, R}(Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) $)
IMP-axiom-181 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortList ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortList kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'List'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( adding 1 new metavariable(s) $)
$v kore-element-var-K3 $.
kore-element-var-K3-elementvariable $f #ElementVariable kore-element-var-K3 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 $.

$( axiom {R} \equals{SortMap{}, R}(Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{}, K2:SortMap{}), K3:SortMap{}), Lbl'Unds'Map'Unds'{}(K1:SortMap{}, Lbl'Unds'Map'Unds'{}(K2:SortMap{}, K3:SortMap{}))) $)
IMP-axiom-182 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K3 \kore-sort-SortMap ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) kore-element-var-K3 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K3 ) ) ) ) ) $.

$( axiom {R} \equals{SortMap{}, R}(Lbl'Unds'Map'Unds'{}(K1:SortMap{}, K2:SortMap{}), Lbl'Unds'Map'Unds'{}(K2:SortMap{}, K1:SortMap{})) $)
IMP-axiom-183 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K1 kore-element-var-K2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K2 kore-element-var-K1 ) ) ) ) $.

$( adding 1 new metavariable(s) $)
$v kore-element-var-K $.
kore-element-var-K-elementvariable $f #ElementVariable kore-element-var-K $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K $.

$( axiom {R} \equals{SortMap{}, R}(Lbl'Unds'Map'Unds'{}(K:SortMap{}, Lbl'Stop'Map{}()), K:SortMap{}) $)
IMP-axiom-184 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-K \kore-symbol-Lbl'Stop'Map ) kore-element-var-K ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) $)
IMP-axiom-191 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'Set'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) $)
IMP-axiom-192 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsLSqBUnds-LT-'-undef'RSqB' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) $)
IMP-axiom-193 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K2 \kore-sort-SortKItem ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortStmt{}, \equals{SortStmt{}, R}(Val:SortStmt{}, Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) $)
IMP-axiom-194 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-196 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-197 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-198 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) $)
IMP-axiom-199 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) $)
IMP-axiom-200 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-201 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-202 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) $)
IMP-axiom-203 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-204 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Unds'xorInt'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) $)
IMP-axiom-205 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-206 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'Int'Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) $)
IMP-axiom-207 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) $)
IMP-axiom-208 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortId2{}, \equals{SortId2{}, R}(Val:SortId2{}, Lblb'Unds'IMP-SYNTAX'Unds'Id2{}())) $)
IMP-axiom-209 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) $)
IMP-axiom-212 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) $)
IMP-axiom-213 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortSet{}, \equals{SortSet{}, R}(Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) $)
IMP-axiom-214 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortSet kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-215 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) $)
IMP-axiom-216 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBCellOpt{}, \equals{SortBCellOpt{}, R}(Val:SortBCellOpt{}, LblnoBCell{}())) $)
IMP-axiom-217 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoBCell ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R}(Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) $)
IMP-axiom-218 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoGeneratedCounterCell ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R}(Val:SortKCellOpt{}, LblnoKCell{}())) $)
IMP-axiom-219 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoKCell ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R}(Val:SortTCellOpt{}, LblnoTCell{}())) $)
IMP-axiom-220 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-Val \kore-symbol-LblnoTCell ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBool{}, \equals{SortBool{}, R}(Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) $)
IMP-axiom-221 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblnotBool'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) $)
IMP-axiom-222 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) $)
IMP-axiom-223 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortList ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) $)
IMP-axiom-224 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) $)
IMP-axiom-225 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortSet ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortMap{}, \equals{SortMap{}, R}(Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) $)
IMP-axiom-226 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortId2{}, \equals{SortId2{}, R}(Val:SortId2{}, Lblw1'Unds'IMP-SYNTAX'Unds'Id2{}())) $)
IMP-axiom-227 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortId2{}, \equals{SortId2{}, R}(Val:SortId2{}, Lblx1'Unds'IMP-SYNTAX'Unds'Id2{}())) $)
IMP-axiom-229 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBlock{}, \equals{SortBlock{}, R}(Val:SortBlock{}, Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt{}(K0:SortStmt{}))) $)
IMP-axiom-230 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt kore-element-var-K0 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortBlock{}, \equals{SortBlock{}, R}(Val:SortBlock{}, Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block{}())) $)
IMP-axiom-233 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortBlock kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortInt{}, \equals{SortInt{}, R}(Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) $)
IMP-axiom-234 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'Tild'Int'Unds' kore-element-var-K0 ) ) ) ) ) $.

$( adding 3 new metavariable(s) $)
$v kore-sort-var-Q0 kore-element-var-VS0 kore-element-var-VS1 $.
kore-sort-var-Q0-elementvariable $f #ElementVariable kore-sort-var-Q0 $.
kore-element-var-VS0-setvariable $f #SetVariable kore-element-var-VS0 $.
kore-element-var-VS1-setvariable $f #SetVariable kore-element-var-VS1 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 $.

$( string literal "0" $)
$c "0" "0"-symbol $.
string-literal-0-is-symbol $a #Symbol "0"-symbol $.
string-literal-0-is-pattern $a #Pattern "0" $.
string-literal-0-is-sugar $a #Notation "0" "0"-symbol $.
${ string-literal-0-substitution $p #Substitution "0" "0" ptn0 xX0 $= ( string-literal-0-is-pattern substitution-disjoint ) CBAD $. $}

$( adding 2 new metavariable(s) $)
$v kore-sort-var-x0 kore-element-var-x1 $.
kore-sort-var-x0-elementvariable $f #ElementVariable kore-sort-var-x0 $.
kore-element-var-x1-elementvariable $f #ElementVariable kore-element-var-x1 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 $.

$( axiom {x0} \exists{x0}(x1:SortInt{}, \equals{SortInt{}, x0}(x1:SortInt{}, \dv{SortInt{}}("0"))) $)
domain-value-0-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $.

$( string literal "true" $)
$c "true" "true"-symbol $.
string-literal-1-is-symbol $a #Symbol "true"-symbol $.
string-literal-1-is-pattern $a #Pattern "true" $.
string-literal-1-is-sugar $a #Notation "true" "true"-symbol $.
${ string-literal-1-substitution $p #Substitution "true" "true" ptn0 xX0 $= ( string-literal-1-is-pattern substitution-disjoint ) CBAD $. $}

$( axiom {x0} \exists{x0}(x1:SortBool{}, \equals{SortBool{}, x0}(x1:SortBool{}, \dv{SortBool{}}("true"))) $)
domain-value-1-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortBool "true" ) ) ) ) ) $.

$( axiom {R, Q0} \implies{R}(\top{R}(), \and{R}(\equals{Q0, R}(\ceil{SortInt{}, Q0}(Lbl'UndsPerc'Int'Unds'{}(VS0:SortInt{}, VS1:SortInt{})), \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VS1:SortInt{}, \dv{SortInt{}}("0")), \dv{SortBool{}}("true")), \ceil{SortInt{}, Q0}(VS0:SortInt{})), \ceil{SortInt{}, Q0}(VS1:SortInt{}))), \top{R}())) $)
IMP-axiom-260 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VS0 kore-element-var-VS1 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VS1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R, Q0} \implies{R}(\top{R}(), \and{R}(\equals{Q0, R}(\ceil{SortInt{}, Q0}(Lbl'UndsSlsh'Int'Unds'{}(VS0:SortInt{}, VS1:SortInt{})), \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VS1:SortInt{}, \dv{SortInt{}}("0")), \dv{SortBool{}}("true")), \ceil{SortInt{}, Q0}(VS0:SortInt{})), \ceil{SortInt{}, Q0}(VS1:SortInt{}))), \top{R}())) $)
IMP-axiom-261 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' kore-element-var-VS0 kore-element-var-VS1 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VS1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R, Q0} \implies{R}(\top{R}(), \and{R}(\equals{Q0, R}(\ceil{SortInt{}, Q0}(Lbl'Unds-LT--LT-'Int'Unds'{}(VS0:SortInt{}, VS1:SortInt{})), \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VS1:SortInt{}, \dv{SortInt{}}("0")), \dv{SortBool{}}("true")), \ceil{SortInt{}, Q0}(VS0:SortInt{})), \ceil{SortInt{}, Q0}(VS1:SortInt{}))), \top{R}())) $)
IMP-axiom-262 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' kore-element-var-VS0 kore-element-var-VS1 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-VS1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R, Q0} \implies{R}(\top{R}(), \and{R}(\equals{Q0, R}(\ceil{SortInt{}, Q0}(Lbl'Unds-GT--GT-'Int'Unds'{}(VS0:SortInt{}, VS1:SortInt{})), \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VS1:SortInt{}, \dv{SortInt{}}("0")), \dv{SortBool{}}("true")), \ceil{SortInt{}, Q0}(VS0:SortInt{})), \ceil{SortInt{}, Q0}(VS1:SortInt{}))), \top{R}())) $)
IMP-axiom-263 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' kore-element-var-VS0 kore-element-var-VS1 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-VS1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R, Q0} \implies{R}(\top{R}(), \and{R}(\equals{Q0, R}(\ceil{SortInt{}, Q0}(Lbl'Unds'modInt'Unds'{}(VS0:SortInt{}, VS1:SortInt{})), \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VS1:SortInt{}, \dv{SortInt{}}("0")), \dv{SortBool{}}("true")), \ceil{SortInt{}, Q0}(VS0:SortInt{})), \ceil{SortInt{}, Q0}(VS1:SortInt{}))), \top{R}())) $)
IMP-axiom-264 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VS0 kore-element-var-VS1 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VS1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS0 ) ) ( \kore-ceil \kore-sort-SortInt kore-sort-var-Q0 kore-element-var-VS1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( adding 1 new metavariable(s) $)
$v kore-element-var-VE5 $.
kore-element-var-VE5-elementvariable $f #ElementVariable kore-element-var-VE5 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 $.

$( axiom {R} \implies{R}(\and{R}(\equals{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\in{SortBool{}, R}(VE4:SortBool{}, VE0:SortBool{}), \and{R}(\in{SortK{}, R}(VE2:SortK{}, VE1:SortK{}), \and{R}(\in{SortK{}, R}(VE5:SortK{}, VE3:SortK{}), \top{R}())))), \and{R}(\equals{SortK{}, R}(Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VE4:SortBool{}, VE2:SortK{}, VE5:SortK{}), VE1:SortK{}), \top{R}())) $)
IMP-axiom-265 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortK ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE4 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE5 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortK kore-element-var-VE4 kore-element-var-VE2 kore-element-var-VE5 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\equals{SortBool{}, R}(LblnotBool'Unds'{}(VE0:SortBool{}), \dv{SortBool{}}("true")), \and{R}(\in{SortBool{}, R}(VE4:SortBool{}, VE0:SortBool{}), \and{R}(\in{SortK{}, R}(VE2:SortK{}, VE3:SortK{}), \and{R}(\in{SortK{}, R}(VE5:SortK{}, VE1:SortK{}), \top{R}())))), \and{R}(\equals{SortK{}, R}(Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VE4:SortBool{}, VE2:SortK{}, VE5:SortK{}), VE1:SortK{}), \top{R}())) $)
IMP-axiom-266 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortK ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE4 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE5 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort \kore-sort-SortK kore-element-var-VE4 kore-element-var-VE2 kore-element-var-VE5 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), dotk{}())), VE1:SortK{}))), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE3:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-267 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE3 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())), VE1:SortK{}))), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-268 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), dotk{}())), VE1:SortK{}))), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE3:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-269 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE3 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())), VE1:SortK{}))), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-270 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), dotk{}())), VE1:SortK{}))), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE3:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-271 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE3 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())), VE1:SortK{}))), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-272 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), dotk{}())), VE1:SortK{}))), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE3:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-273 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE3 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())), VE1:SortK{}))), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-274 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), dotk{}())), VE1:SortK{}))), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE3:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE2:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-275 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE3 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE2 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())), VE1:SortK{}))), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE4:SortAExp{})), VE1:SortK{})), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-276 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblisKResult{}(kseq{}(VE0:SortKItem{}, dotk{}()))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VE4:SortAExp{}), VE0:SortKItem{}), kseq{}(Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'{}(kseq{}(inj{SortId2{}, SortKItem{}}(VE2:SortId2{}), dotk{}())), VE1:SortK{}))), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp{}(VE2:SortId2{}, VE4:SortAExp{})), VE1:SortK{})), VE3:SortBCell{}), VE5:SortGeneratedCounterCell{}))) $)
IMP-axiom-277 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortId2 ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblisKResult ( \kore-symbol-kseq kore-element-var-VE0 \kore-symbol-dotk ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-and \kore-sort-SortKItem ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE4 ) kore-element-var-VE0 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId2 \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-VE2 kore-element-var-VE4 ) ) kore-element-var-VE1 ) ) kore-element-var-VE3 ) kore-element-var-VE5 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())), VE0:SortK{}))), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-278 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), \dv{SortBool{}}("true")), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE1:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), VE0:SortK{}))), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-279 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())), VE0:SortK{}))), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-280 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), \dv{SortBool{}}("true")), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE1:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), VE0:SortK{}))), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-281 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())), VE0:SortK{}))), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-282 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), \dv{SortBool{}}("true")), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE1:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), VE0:SortK{}))), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-283 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())), VE0:SortK{}))), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-284 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), \dv{SortBool{}}("true")), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE1:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), VE0:SortK{}))), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-285 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE2:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())), VE0:SortK{}))), VE1:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-286 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE2 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE1 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), \dv{SortBool{}}("true")), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp{}(VE1:SortAExp{}, VE3:SortAExp{})), VE0:SortK{})), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), VE0:SortK{}))), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-287 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\equals{SortBool{}, SortGeneratedTopCell{}}(Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"), LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), dotk{}())))), \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp{}(VE1:SortId2{}, VE3:SortAExp{})), VE0:SortK{})), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VE3:SortAExp{}), kseq{}(Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds'{}(kseq{}(inj{SortId2{}, SortKItem{}}(VE1:SortId2{}), dotk{}())), VE0:SortK{}))), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-288 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId2 ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-equals \kore-sort-SortBool \kore-sort-SortGeneratedTopCell ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-dv \kore-sort-SortBool "true" ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-LblisKResult ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-VE1 kore-element-var-VE3 ) ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId2 \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-VE0 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp{}(Lblb'Unds'IMP-SYNTAX'Unds'Id2{}(), inj{SortInt{}, SortAExp{}}(VE1:SortInt{}))), VE2:SortK{})), Lbl'-LT-'b'-GT-'{}(VE0:SortInt{})), VE3:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VE2:SortK{}), Lbl'-LT-'b'-GT-'{}(VE1:SortInt{})), VE3:SortGeneratedCounterCell{}))) $)
IMP-axiom-289 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE0 ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VE3:SortStmt{}, VE0:SortStmt{})), VE1:SortK{})), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VE3:SortStmt{}), kseq{}(inj{SortStmt{}, SortKItem{}}(VE0:SortStmt{}), VE1:SortK{}))), VE2:SortBCell{}), VE4:SortGeneratedCounterCell{}))) $)
IMP-axiom-290 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt kore-element-var-VE3 kore-element-var-VE0 ) ) kore-element-var-VE1 ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE3 ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE0 ) kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) kore-element-var-VE4 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId2{}, SortKItem{}}(Lblb'Unds'IMP-SYNTAX'Unds'Id2{}()), VE2:SortK{})), \and{SortBCell{}}(Lbl'-LT-'b'-GT-'{}(VE3:SortInt{}), VE1:SortBCell{})), VE0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VE3:SortInt{}), VE2:SortK{})), VE1:SortBCell{}), VE0:SortGeneratedCounterCell{}))) $)
IMP-axiom-291 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId2 \kore-sort-SortKItem \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE3 ) kore-element-var-VE1 ) ) kore-element-var-VE0 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE3 ) kore-element-var-VE2 ) ) kore-element-var-VE1 ) kore-element-var-VE0 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt{}(VE1:SortStmt{})), VE0:SortK{})), VE2:SortBCell{}), VE3:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VE1:SortStmt{}), VE0:SortK{})), VE2:SortBCell{}), VE3:SortGeneratedCounterCell{}))) $)
IMP-axiom-292 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt kore-element-var-VE1 ) ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-VE0 ) ) kore-element-var-VE2 ) kore-element-var-VE3 ) ) ) ) ) $.

$( axiom {} \rewrites{SortGeneratedTopCell{}}(\and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block{}()), VE0:SortK{})), VE1:SortBCell{}), VE2:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}}(\top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VE0:SortK{}), VE1:SortBCell{}), VE2:SortGeneratedCounterCell{}))) $)
IMP-axiom-293 $a |- ( \imp ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ) kore-element-var-VE0 ) ) kore-element-var-VE1 ) kore-element-var-VE2 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE0 ) kore-element-var-VE1 ) kore-element-var-VE2 ) ) ) ) ) $.

$( axiom {R} \implies{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"), VE1:SortInt{}), Lbl'Unds-LT-'Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), \dv{SortBool{}}("true")), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPerc'Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{}), VE1:SortInt{}), \top{R}())) $)
IMP-axiom-294 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsAnd-'Int'Unds'{}(VE2:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), Lbl'UndsAnd-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VE2:SortInt{}, VE1:SortInt{}), VE0:SortInt{})), \top{R}())) $)
IMP-axiom-295 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' ( \kore-symbol-Lbl'UndsAnd-'Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPlus'Int'Unds'{}(VE0:SortInt{}, VE1:SortInt{}), Lbl'UndsPlus'Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), \top{R}())) $)
IMP-axiom-296 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPlus'Int'Unds'{}(VE0:SortInt{}, \dv{SortInt{}}("0")), VE0:SortInt{}), \top{R}())) $)
IMP-axiom-297 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPlus'Int'Unds'{}(VE0:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, VE1:SortInt{})), Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(VE0:SortInt{}, VE1:SortInt{}))), \top{R}())) $)
IMP-axiom-298 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, VE1:SortInt{}), VE0:SortInt{})), \top{R}())) $)
IMP-axiom-299 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, Lbl'Unds'-Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), Lbl'Unds'-Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, VE1:SortInt{}), VE0:SortInt{})), \top{R}())) $)
IMP-axiom-300 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, VE0:SortInt{}), VE1:SortInt{}), Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(VE0:SortInt{}, VE1:SortInt{}))), \top{R}())) $)
IMP-axiom-301 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VE0:SortInt{}, VE2:SortInt{}), VE1:SortInt{}), Lbl'Unds'-Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VE0:SortInt{}, VE1:SortInt{}), VE2:SortInt{})), \top{R}())) $)
IMP-axiom-302 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'-Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{}), Lbl'UndsPlus'Int'Unds'{}(VE1:SortInt{}, Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"), VE0:SortInt{}))), \top{R}())) $)
IMP-axiom-303 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'-Int'Unds'{}(VE0:SortInt{}, \dv{SortInt{}}("0")), VE0:SortInt{}), \top{R}())) $)
IMP-axiom-304 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'-Int'Unds'{}(VE0:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(VE2:SortInt{}, VE1:SortInt{})), Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VE0:SortInt{}, VE1:SortInt{}), VE2:SortInt{})), \top{R}())) $)
IMP-axiom-305 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) kore-element-var-VE2 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'-Int'Unds'{}(VE2:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VE2:SortInt{}, VE1:SortInt{}), VE0:SortInt{})), \top{R}())) $)
IMP-axiom-306 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'-Int'Unds'{}(VE2:SortInt{}, Lbl'Unds'-Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VE2:SortInt{}, VE1:SortInt{}), VE0:SortInt{})), \top{R}())) $)
IMP-axiom-307 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 kore-element-var-VE1 ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VE0:SortInt{}, VE1:SortInt{}), VE2:SortInt{}), Lbl'Unds'-Int'Unds'{}(VE0:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(VE1:SortInt{}, VE2:SortInt{}))), \top{R}())) $)
IMP-axiom-308 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 kore-element-var-VE1 ) kore-element-var-VE2 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE0 ( \kore-symbol-Lbl'UndsPlus'Int'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds-LT--LT-'Int'Unds'{}(VE0:SortInt{}, \dv{SortInt{}}("0")), VE0:SortInt{}), \top{R}())) $)
IMP-axiom-309 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("0"), VE0:SortInt{}), \dv{SortInt{}}("0")), \top{R}())) $)
IMP-axiom-310 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE1:SortBool{}), \and{R}(\in{SortBool{}, R}(VE3:SortBool{}, VE2:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(VE0:SortBool{}, VE3:SortBool{}), LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}))), \top{R}())) $)
IMP-axiom-311 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE3 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Bool'Unds' kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortInt{}, R}(VE1:SortInt{}, VE2:SortInt{}), \and{R}(\in{SortInt{}, R}(VE3:SortInt{}, VE0:SortInt{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VE1:SortInt{}, VE3:SortInt{}), LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VE2:SortInt{}, VE0:SortInt{}))), \top{R}())) $)
IMP-axiom-312 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE3:SortK{}), \and{R}(\in{SortK{}, R}(VE2:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(VE0:SortK{}, VE2:SortK{}), LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VE3:SortK{}, VE1:SortK{}))), \top{R}())) $)
IMP-axiom-313 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'K'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-LblnotBool'Unds' ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VE3 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE1:SortK{}, kseq{}(inj{SortInt{}, SortKItem{}}(VE2:SortInt{}), dotk{}())), \and{R}(\in{SortK{}, R}(VE3:SortK{}, kseq{}(inj{SortInt{}, SortKItem{}}(VE0:SortInt{}), dotk{}())), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsEqls'K'Unds'{}(VE1:SortK{}, VE3:SortK{}), Lbl'UndsEqlsEqls'Int'Unds'{}(VE2:SortInt{}, VE0:SortInt{})), \top{R}())) $)
IMP-axiom-314 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortK ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE3 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBool{}, SortKItem{}}(VE3:SortBool{}), dotk{}())), \and{R}(\in{SortK{}, R}(VE2:SortK{}, kseq{}(inj{SortBool{}, SortKItem{}}(VE1:SortBool{}), dotk{}())), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsEqls'K'Unds'{}(VE0:SortK{}, VE2:SortK{}), Lbl'UndsEqlsEqls'Bool'Unds'{}(VE3:SortBool{}, VE1:SortBool{})), \top{R}())) $)
IMP-axiom-315 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE3 ) \kore-symbol-dotk ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE2 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsEqls'K'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Bool'Unds' kore-element-var-VE3 kore-element-var-VE1 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds-GT--GT-'Int'Unds'{}(VE0:SortInt{}, \dv{SortInt{}}("0")), VE0:SortInt{}), \top{R}())) $)
IMP-axiom-316 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\top{R}(), \and{R}(\equals{SortInt{}, R}(Lbl'Unds-GT--GT-'Int'Unds'{}(\dv{SortInt{}}("0"), VE0:SortInt{}), \dv{SortInt{}}("0")), \top{R}())) $)
IMP-axiom-317 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( string literal "false" $)
$c "false" "false"-symbol $.
string-literal-2-is-symbol $a #Symbol "false"-symbol $.
string-literal-2-is-pattern $a #Pattern "false" $.
string-literal-2-is-sugar $a #Notation "false" "false"-symbol $.
${ string-literal-2-substitution $p #Substitution "false" "false" ptn0 xX0 $= ( string-literal-2-is-pattern substitution-disjoint ) CBAD $. $}

$( axiom {x0} \exists{x0}(x1:SortBool{}, \equals{SortBool{}, x0}(x1:SortBool{}, \dv{SortBool{}}("false"))) $)
domain-value-2-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortBool kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortBool "false" ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("false"), VE0:SortBool{})), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE3:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-318 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE0 ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE1:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \dv{SortBool{}}("true")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-319 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, VE3:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("false"), VE0:SortBool{})), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-320 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE1:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-321 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("false"), VE0:SortBool{})), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE3:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-322 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE0 ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, VE0:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \dv{SortBool{}}("true")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-323 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, VE3:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \and{SortBool{}}(\dv{SortBool{}}("false"), VE0:SortBool{})), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-324 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortBool ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-and \kore-sort-SortBool ( \kore-dv \kore-sort-SortBool "false" ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE0:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'andThenBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-325 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andThenBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VE0:SortInt{}, \dv{SortInt{}}("0")), \dv{SortBool{}}("true")), \and{R}(\in{SortInt{}, R}(VE1:SortInt{}, VE2:SortInt{}), \and{R}(\in{SortInt{}, R}(VE3:SortInt{}, VE0:SortInt{}), \top{R}()))), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'divInt'Unds'{}(VE1:SortInt{}, VE3:SortInt{}), Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VE2:SortInt{}, Lbl'Unds'modInt'Unds'{}(VE2:SortInt{}, VE0:SortInt{})), VE0:SortInt{})), \top{R}())) $)
IMP-axiom-326 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'divInt'Unds' kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VE2 kore-element-var-VE0 ) ) kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortInt{}, R}(VE1:SortInt{}, VE2:SortInt{}), \and{R}(\in{SortInt{}, R}(VE3:SortInt{}, VE0:SortInt{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(VE1:SortInt{}, VE3:SortInt{}), Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VE0:SortInt{}, VE2:SortInt{}), \dv{SortInt{}}("0"))), \top{R}())) $)
IMP-axiom-327 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-symbol-Lbl'UndsEqlsEqls'Int'Unds' ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE1:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \dv{SortBool{}}("false")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), LblnotBool'Unds'{}(VE1:SortBool{})), \top{R}())) $)
IMP-axiom-328 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE1 ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE2:SortBool{}), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, \dv{SortBool{}}("true")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(VE0:SortBool{}, VE1:SortBool{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-329 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("false")), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, VE2:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(VE0:SortBool{}, VE1:SortBool{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-330 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE1:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'impliesBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-331 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'impliesBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\equals{SortBool{}, R}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VE0:SortInt{}, \dv{SortInt{}}("0")), \dv{SortBool{}}("true")), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'modInt'Unds'{}(VE1:SortInt{}, VE0:SortInt{}), Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VE1:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VE0:SortInt{})), LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VE0:SortInt{})), LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VE0:SortInt{}))), \top{R}())) $)
IMP-axiom-332 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'UndsEqlsSlshEqls'Int'Unds' kore-element-var-VE0 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-symbol-Lbl'UndsPerc'Int'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-VE1 ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-VE0 ) ) ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-VE0 ) ) ( \kore-symbol-LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int kore-element-var-VE0 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\equals{SortBool{}, R}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"), VE1:SortInt{}), Lbl'Unds-LT-'Int'Unds'{}(VE1:SortInt{}, VE0:SortInt{})), \dv{SortBool{}}("true")), \and{R}(\equals{SortInt{}, R}(Lbl'Unds'modInt'Unds'{}(VE1:SortInt{}, VE0:SortInt{}), VE1:SortInt{}), \top{R}())) $)
IMP-axiom-333 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'andBool'Unds' ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 ) ( \kore-symbol-Lbl'Unds-LT-'Int'Unds' kore-element-var-VE1 kore-element-var-VE0 ) ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lbl'Unds'modInt'Unds' kore-element-var-VE1 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE1:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \dv{SortBool{}}("false")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-334 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE2:SortBool{}), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, \dv{SortBool{}}("true")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'Unds'{}(VE0:SortBool{}, VE1:SortBool{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-335 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("false")), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE1:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-336 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, VE2:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orBool'Unds'{}(VE0:SortBool{}, VE1:SortBool{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-337 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orBool'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, VE0:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \dv{SortBool{}}("false")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-338 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE2:SortBool{}), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, \dv{SortBool{}}("true")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(VE0:SortBool{}, VE1:SortBool{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-339 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, \dv{SortBool{}}("false")), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE0:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(VE1:SortBool{}, VE2:SortBool{}), VE0:SortBool{}), \top{R}())) $)
IMP-axiom-340 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE1 kore-element-var-VE2 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("true")), \and{R}(\in{SortBool{}, R}(VE1:SortBool{}, VE2:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'orElseBool'Unds'{}(VE0:SortBool{}, VE1:SortBool{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-341 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'orElseBool'Unds' kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE1:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE1:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'xorBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-342 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, VE1:SortBool{}), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, \dv{SortBool{}}("false")), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'xorBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-343 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("false")), \and{R}(\in{SortBool{}, R}(VE2:SortBool{}, VE1:SortBool{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(Lbl'Unds'xorBool'Unds'{}(VE0:SortBool{}, VE2:SortBool{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-344 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortBool ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds'xorBool'Unds' kore-element-var-VE0 kore-element-var-VE2 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortSet{}, R}(VE2:SortSet{}, VE1:SortSet{}), \and{R}(\in{SortSet{}, R}(VE3:SortSet{}, VE0:SortSet{}), \top{R}()))), \and{R}(\equals{SortSet{}, R}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(VE2:SortSet{}, VE3:SortSet{}), Lbl'Unds'Set'Unds'{}(VE1:SortSet{}, LblSet'Coln'difference{}(VE0:SortSet{}, VE1:SortSet{}))), \top{R}())) $)
IMP-axiom-345 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortSet ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortSet ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortSet kore-sort-var-R kore-element-var-VE2 kore-element-var-VE1 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortSet kore-sort-var-R kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortSet kore-sort-var-R ( \kore-symbol-Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set kore-element-var-VE2 kore-element-var-VE3 ) ( \kore-symbol-Lbl'Unds'Set'Unds' kore-element-var-VE1 ( \kore-symbol-LblSet'Coln'difference kore-element-var-VE0 kore-element-var-VE1 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( string literal "1" $)
$c "1" "1"-symbol $.
string-literal-3-is-symbol $a #Symbol "1"-symbol $.
string-literal-3-is-pattern $a #Pattern "1" $.
string-literal-3-is-sugar $a #Notation "1" "1"-symbol $.
${ string-literal-3-substitution $p #Substitution "1" "1" ptn0 xX0 $= ( string-literal-3-is-pattern substitution-disjoint ) CBAD $. $}

$( axiom {x0} \exists{x0}(x1:SortInt{}, \equals{SortInt{}, x0}(x1:SortInt{}, \dv{SortInt{}}("1"))) $)
domain-value-3-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "1" ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortInt{}, R}(VE4:SortInt{}, VE0:SortInt{}), \and{R}(\in{SortInt{}, R}(VE1:SortInt{}, VE3:SortInt{}), \and{R}(\in{SortInt{}, R}(VE5:SortInt{}, VE2:SortInt{}), \top{R}())))), \and{R}(\equals{SortInt{}, R}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VE4:SortInt{}, VE1:SortInt{}, VE5:SortInt{}), Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VE0:SortInt{}, VE3:SortInt{}), Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"), VE2:SortInt{}))), \top{R}())) $)
IMP-axiom-346 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortInt ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE4 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE5 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE4 kore-element-var-VE1 kore-element-var-VE5 ) ( \kore-symbol-Lbl'Unds'modInt'Unds' ( \kore-symbol-Lbl'Unds-GT--GT-'Int'Unds' kore-element-var-VE0 kore-element-var-VE3 ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) kore-element-var-VE2 ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortInt{}, R}(VE0:SortInt{}, VE1:SortInt{}), \top{R}())), \and{R}(\equals{SortInt{}, R}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(VE0:SortInt{}), VE1:SortInt{}), \top{R}())) $)
IMP-axiom-347 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortGeneratedTopCell{}, R}(VE1:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(VE2:SortTCell{}, VE0:SortGeneratedCounterCell{})), \top{R}())), \and{R}(\equals{SortGeneratedCounterCell{}, R}(LblgetGeneratedCounterCell{}(VE1:SortGeneratedTopCell{}), VE0:SortGeneratedCounterCell{}), \top{R}())) $)
IMP-axiom-348 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedTopCell ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortTCell ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-VE2 kore-element-var-VE0 ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R ( \kore-symbol-LblgetGeneratedCounterCell kore-element-var-VE1 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \top{R}()), \and{R}(\equals{SortBCell{}, R}(LblinitBCell{}(), Lbl'-LT-'b'-GT-'{}(\dv{SortInt{}}("0"))), \top{R}())) $)
IMP-axiom-349 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBCell kore-sort-var-R \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \top{R}()), \and{R}(\equals{SortGeneratedCounterCell{}, R}(LblinitGeneratedCounterCell{}(), Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))), \top{R}())) $)
IMP-axiom-350 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortMap{}, R}(VE0:SortMap{}, VE1:SortMap{}), \top{R}())), \and{R}(\equals{SortGeneratedTopCell{}, R}(LblinitGeneratedTopCell{}(VE0:SortMap{}), Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VE1:SortMap{}), LblinitGeneratedCounterCell{}())), \top{R}())) $)
IMP-axiom-351 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( string literal "$PGM" $)
$c "%24PGM" "%24PGM"-symbol $.
string-literal-4-is-symbol $a #Symbol "%24PGM"-symbol $.
string-literal-4-is-pattern $a #Pattern "%24PGM" $.
string-literal-4-is-sugar $a #Notation "%24PGM" "%24PGM"-symbol $.
${ string-literal-4-substitution $p #Substitution "%24PGM" "%24PGM" ptn0 xX0 $= ( string-literal-4-is-pattern substitution-disjoint ) CBAD $. $}

$( axiom {x0} \exists{x0}(x1:SortKConfigVar{}, \equals{SortKConfigVar{}, x0}(x1:SortKConfigVar{}, \dv{SortKConfigVar{}}("$PGM"))) $)
domain-value-4-functional $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortMap{}, R}(VE0:SortMap{}, VE1:SortMap{}), \top{R}())), \and{R}(\equals{SortKCell{}, R}(LblinitKCell{}(VE0:SortMap{}), Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(Lblproject'Coln'Pgm{}(kseq{}(LblMap'Coln'lookup{}(VE1:SortMap{}, inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))), dotk{}()))), dotk{}()))), \top{R}())) $)
IMP-axiom-352 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortMap{}, R}(VE0:SortMap{}, VE1:SortMap{}), \top{R}())), \and{R}(\equals{SortTCell{}, R}(LblinitTCell{}(VE0:SortMap{}), Lbl'-LT-'T'-GT-'{}(LblinitKCell{}(VE1:SortMap{}), LblinitBCell{}())), \top{R}())) $)
IMP-axiom-353 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortAExp{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortAExp{}, SortKItem{}}(VE2:SortAExp{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisAExp{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-354 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisAExp kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE1:SortK{}, kseq{}(inj{SortAExp{}, SortKItem{}}(VE0:SortAExp{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisAExp{}(VE1:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-355 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortAExp ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisAExp kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortBCell{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBCell{}, SortKItem{}}(VE2:SortBCell{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisBCell{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-356 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBCell kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBCell \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBCell{}, SortKItem{}}(VE1:SortBCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisBCell{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-357 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortBCellOpt{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBCellOpt{}, SortKItem{}}(VE2:SortBCellOpt{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisBCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-358 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBCellOpt kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBCellOpt \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBCellOpt{}, SortKItem{}}(VE1:SortBCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisBCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-359 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortBlock{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBlock{}, SortKItem{}}(VE2:SortBlock{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisBlock{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-360 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBlock kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBlock kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBlock{}, SortKItem{}}(VE1:SortBlock{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisBlock{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-361 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBlock ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBlock kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortBool{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBool{}, SortKItem{}}(VE2:SortBool{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisBool{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-362 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortBool kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBool kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBool{}, SortKItem{}}(VE1:SortBool{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisBool{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-363 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisBool kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortGeneratedCounterCell{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VE2:SortGeneratedCounterCell{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCell{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-364 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE1:SortK{}, kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VE0:SortGeneratedCounterCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCell{}(VE1:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-365 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortGeneratedCounterCell ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCell kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortGeneratedCounterCellOpt{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VE2:SortGeneratedCounterCellOpt{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-366 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VE1:SortGeneratedCounterCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisGeneratedCounterCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-367 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedCounterCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortGeneratedTopCell{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VE2:SortGeneratedTopCell{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCell{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-368 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCell kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VE1:SortGeneratedTopCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCell{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-369 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedTopCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortGeneratedTopCellFragment{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VE2:SortGeneratedTopCellFragment{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCellFragment{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-370 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCellFragment kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE1:SortK{}, kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VE0:SortGeneratedTopCellFragment{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisGeneratedTopCellFragment{}(VE1:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-371 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortGeneratedTopCellFragment ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisGeneratedTopCellFragment kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortId2{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortId2{}, SortKItem{}}(VE2:SortId2{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisId2{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-372 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortId2 kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId2 \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisId2 kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortId2{}, SortKItem{}}(VE1:SortId2{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisId2{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-373 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId2 ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId2 \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisId2 kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortInt{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortInt{}, SortKItem{}}(VE2:SortInt{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisInt{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-374 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisInt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortInt{}, SortKItem{}}(VE1:SortInt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisInt{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-375 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisInt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisK{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-376 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisK kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortKCell{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKCell{}, SortKItem{}}(VE2:SortKCell{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisKCell{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-377 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKCell kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKCell{}, SortKItem{}}(VE1:SortKCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisKCell{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-378 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortKCellOpt{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VE2:SortKCellOpt{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisKCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-379 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKCellOpt kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VE1:SortKCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisKCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-380 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortKConfigVar{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VE2:SortKConfigVar{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisKConfigVar{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-381 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKConfigVar kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKConfigVar kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VE1:SortKConfigVar{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisKConfigVar{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-382 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKConfigVar ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKConfigVar kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortKItem{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(VE2:SortKItem{}, dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisKItem{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-383 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq kore-element-var-VE2 \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKItem kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(VE1:SortKItem{}, dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisKItem{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-384 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq kore-element-var-VE1 \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKItem kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortKResult{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKResult{}, SortKItem{}}(VE2:SortKResult{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisKResult{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-385 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortKResult kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKResult kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKResult{}, SortKItem{}}(VE1:SortKResult{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisKResult{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-386 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKResult ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisKResult kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortList{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortList{}, SortKItem{}}(VE2:SortList{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisList{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-387 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortList kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisList kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortList{}, SortKItem{}}(VE1:SortList{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisList{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-388 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisList kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortMap{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortMap{}, SortKItem{}}(VE2:SortMap{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisMap{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-389 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisMap kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortMap{}, SortKItem{}}(VE1:SortMap{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisMap{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-390 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisMap kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortPgm{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortPgm{}, SortKItem{}}(VE2:SortPgm{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisPgm{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-391 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisPgm kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortPgm{}, SortKItem{}}(VE1:SortPgm{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisPgm{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-392 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisPgm kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortSet{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortSet{}, SortKItem{}}(VE2:SortSet{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisSet{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-393 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortSet kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisSet kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortSet{}, SortKItem{}}(VE1:SortSet{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisSet{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-394 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisSet kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortStmt{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortStmt{}, SortKItem{}}(VE2:SortStmt{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisStmt{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-395 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStmt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE1:SortK{}, kseq{}(inj{SortStmt{}, SortKItem{}}(VE0:SortStmt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisStmt{}(VE1:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-396 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisStmt kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortTCell{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCell{}, SortKItem{}}(VE2:SortTCell{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisTCell{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-397 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortTCell kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCell{}, SortKItem{}}(VE1:SortTCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisTCell{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-398 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCell kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortTCellFragment{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VE2:SortTCellFragment{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisTCellFragment{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-399 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortTCellFragment kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellFragment kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE1:SortK{}, kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VE0:SortTCellFragment{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisTCellFragment{}(VE1:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-400 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortTCellFragment ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE1 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-VE0 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellFragment kore-element-var-VE1 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\not{R}(\or{R}(\exists{R}(VE2:SortTCellOpt{}, \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VE2:SortTCellOpt{}), dotk{}())), \top{R}()))), \bottom{R}())), \and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}()))), \and{R}(\equals{SortBool{}, R}(LblisTCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-401 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-not kore-sort-var-R ( \kore-or kore-sort-var-R ( \kore-exists \kore-sort-SortTCellOpt kore-sort-var-R kore-element-var-VE2 ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-VE2 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-bottom kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VE1:SortTCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblisTCellOpt{}(VE0:SortK{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-402 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblisTCellOpt kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\equals{SortBool{}, R}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VE2:SortInt{}, VE0:SortInt{}), \dv{SortBool{}}("true")), \and{R}(\in{SortInt{}, R}(VE1:SortInt{}, VE2:SortInt{}), \and{R}(\in{SortInt{}, R}(VE3:SortInt{}, VE0:SortInt{}), \top{R}()))), \and{R}(\equals{SortInt{}, R}(LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VE1:SortInt{}, VE3:SortInt{}), VE2:SortInt{}), \top{R}())) $)
IMP-axiom-403 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-LT-Eqls'Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE1 kore-element-var-VE3 ) kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\equals{SortBool{}, R}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VE2:SortInt{}, VE0:SortInt{}), \dv{SortBool{}}("true")), \and{R}(\in{SortInt{}, R}(VE1:SortInt{}, VE2:SortInt{}), \and{R}(\in{SortInt{}, R}(VE3:SortInt{}, VE0:SortInt{}), \top{R}()))), \and{R}(\equals{SortInt{}, R}(LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VE1:SortInt{}, VE3:SortInt{}), VE0:SortInt{}), \top{R}())) $)
IMP-axiom-404 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lbl'Unds-GT-Eqls'Int'Unds' kore-element-var-VE2 kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE3 kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE1 kore-element-var-VE3 ) kore-element-var-VE0 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("false")), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblnotBool'Unds'{}(VE0:SortBool{}), \dv{SortBool{}}("true")), \top{R}())) $)
IMP-axiom-405 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortBool{}, R}(VE0:SortBool{}, \dv{SortBool{}}("true")), \top{R}())), \and{R}(\equals{SortBool{}, R}(LblnotBool'Unds'{}(VE0:SortBool{}), \dv{SortBool{}}("false")), \top{R}())) $)
IMP-axiom-406 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortBool ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortBool kore-sort-var-R kore-element-var-VE0 ( \kore-dv \kore-sort-SortBool "true" ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-LblnotBool'Unds' kore-element-var-VE0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortAExp{}, SortKItem{}}(VE1:SortAExp{}), dotk{}())), \top{R}())), \and{R}(\equals{SortAExp{}, R}(Lblproject'Coln'AExp{}(VE0:SortK{}), VE1:SortAExp{}), \top{R}())) $)
IMP-axiom-407 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortAExp ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortAExp \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortAExp kore-sort-var-R ( \kore-symbol-Lblproject'Coln'AExp kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBCell{}, SortKItem{}}(VE1:SortBCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBCell{}, R}(Lblproject'Coln'BCell{}(VE0:SortK{}), VE1:SortBCell{}), \top{R}())) $)
IMP-axiom-408 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'BCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBCellOpt{}, SortKItem{}}(VE1:SortBCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBCellOpt{}, R}(Lblproject'Coln'BCellOpt{}(VE0:SortK{}), VE1:SortBCellOpt{}), \top{R}())) $)
IMP-axiom-409 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'BCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBlock{}, SortKItem{}}(VE1:SortBlock{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBlock{}, R}(Lblproject'Coln'Block{}(VE0:SortK{}), VE1:SortBlock{}), \top{R}())) $)
IMP-axiom-410 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBlock ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBlock \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBlock kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Block kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortBool{}, SortKItem{}}(VE1:SortBool{}), dotk{}())), \top{R}())), \and{R}(\equals{SortBool{}, R}(Lblproject'Coln'Bool{}(VE0:SortK{}), VE1:SortBool{}), \top{R}())) $)
IMP-axiom-411 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortBool ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortBool \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBool kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Bool kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VE1:SortGeneratedCounterCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortGeneratedCounterCell{}, R}(Lblproject'Coln'GeneratedCounterCell{}(VE0:SortK{}), VE1:SortGeneratedCounterCell{}), \top{R}())) $)
IMP-axiom-412 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedCounterCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VE1:SortGeneratedCounterCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortGeneratedCounterCellOpt{}, R}(Lblproject'Coln'GeneratedCounterCellOpt{}(VE0:SortK{}), VE1:SortGeneratedCounterCellOpt{}), \top{R}())) $)
IMP-axiom-413 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedCounterCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedCounterCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedCounterCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VE1:SortGeneratedTopCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortGeneratedTopCell{}, R}(Lblproject'Coln'GeneratedTopCell{}(VE0:SortK{}), VE1:SortGeneratedTopCell{}), \top{R}())) $)
IMP-axiom-414 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedTopCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedTopCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VE1:SortGeneratedTopCellFragment{}), dotk{}())), \top{R}())), \and{R}(\equals{SortGeneratedTopCellFragment{}, R}(Lblproject'Coln'GeneratedTopCellFragment{}(VE0:SortK{}), VE1:SortGeneratedTopCellFragment{}), \top{R}())) $)
IMP-axiom-415 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortGeneratedTopCellFragment ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortGeneratedTopCellFragment \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCellFragment kore-sort-var-R ( \kore-symbol-Lblproject'Coln'GeneratedTopCellFragment kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortId2{}, SortKItem{}}(VE1:SortId2{}), dotk{}())), \top{R}())), \and{R}(\equals{SortId2{}, R}(Lblproject'Coln'Id2{}(VE0:SortK{}), VE1:SortId2{}), \top{R}())) $)
IMP-axiom-416 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortId2 ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortId2 \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortId2 kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Id2 kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortInt{}, SortKItem{}}(VE1:SortInt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortInt{}, R}(Lblproject'Coln'Int{}(VE0:SortK{}), VE1:SortInt{}), \top{R}())) $)
IMP-axiom-417 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortInt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Int kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, VE1:SortK{}), \top{R}())), \and{R}(\equals{SortK{}, R}(Lblproject'Coln'K{}(VE0:SortK{}), VE1:SortK{}), \top{R}())) $)
IMP-axiom-418 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortK ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortK kore-sort-var-R ( \kore-symbol-Lblproject'Coln'K kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKCell{}, SortKItem{}}(VE1:SortKCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortKCell{}, R}(Lblproject'Coln'KCell{}(VE0:SortK{}), VE1:SortKCell{}), \top{R}())) $)
IMP-axiom-419 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VE1:SortKCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortKCellOpt{}, R}(Lblproject'Coln'KCellOpt{}(VE0:SortK{}), VE1:SortKCellOpt{}), \top{R}())) $)
IMP-axiom-420 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(VE1:SortKItem{}, dotk{}())), \top{R}())), \and{R}(\equals{SortKItem{}, R}(Lblproject'Coln'KItem{}(VE0:SortK{}), VE1:SortKItem{}), \top{R}())) $)
IMP-axiom-421 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKItem ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq kore-element-var-VE1 \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKItem kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KItem kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortKResult{}, SortKItem{}}(VE1:SortKResult{}), dotk{}())), \top{R}())), \and{R}(\equals{SortKResult{}, R}(Lblproject'Coln'KResult{}(VE0:SortK{}), VE1:SortKResult{}), \top{R}())) $)
IMP-axiom-422 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortKResult ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortKResult \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKResult kore-sort-var-R ( \kore-symbol-Lblproject'Coln'KResult kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortList{}, SortKItem{}}(VE1:SortList{}), dotk{}())), \top{R}())), \and{R}(\equals{SortList{}, R}(Lblproject'Coln'List{}(VE0:SortK{}), VE1:SortList{}), \top{R}())) $)
IMP-axiom-423 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortList ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortList \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortList kore-sort-var-R ( \kore-symbol-Lblproject'Coln'List kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortMap{}, SortKItem{}}(VE1:SortMap{}), dotk{}())), \top{R}())), \and{R}(\equals{SortMap{}, R}(Lblproject'Coln'Map{}(VE0:SortK{}), VE1:SortMap{}), \top{R}())) $)
IMP-axiom-424 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortMap \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Map kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortPgm{}, SortKItem{}}(VE1:SortPgm{}), dotk{}())), \top{R}())), \and{R}(\equals{SortPgm{}, R}(Lblproject'Coln'Pgm{}(VE0:SortK{}), VE1:SortPgm{}), \top{R}())) $)
IMP-axiom-425 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortSet{}, SortKItem{}}(VE1:SortSet{}), dotk{}())), \top{R}())), \and{R}(\equals{SortSet{}, R}(Lblproject'Coln'Set{}(VE0:SortK{}), VE1:SortSet{}), \top{R}())) $)
IMP-axiom-426 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortSet ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortSet \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortSet kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Set kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortStmt{}, SortKItem{}}(VE1:SortStmt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortStmt{}, R}(Lblproject'Coln'Stmt{}(VE0:SortK{}), VE1:SortStmt{}), \top{R}())) $)
IMP-axiom-427 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortStmt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Stmt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCell{}, SortKItem{}}(VE1:SortTCell{}), dotk{}())), \top{R}())), \and{R}(\equals{SortTCell{}, R}(Lblproject'Coln'TCell{}(VE0:SortK{}), VE1:SortTCell{}), \top{R}())) $)
IMP-axiom-428 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCell ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCell \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-Lblproject'Coln'TCell kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VE1:SortTCellFragment{}), dotk{}())), \top{R}())), \and{R}(\equals{SortTCellFragment{}, R}(Lblproject'Coln'TCellFragment{}(VE0:SortK{}), VE1:SortTCellFragment{}), \top{R}())) $)
IMP-axiom-429 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCellFragment ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellFragment \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCellFragment kore-sort-var-R ( \kore-symbol-Lblproject'Coln'TCellFragment kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortK{}, R}(VE0:SortK{}, kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VE1:SortTCellOpt{}), dotk{}())), \top{R}())), \and{R}(\equals{SortTCellOpt{}, R}(Lblproject'Coln'TCellOpt{}(VE0:SortK{}), VE1:SortTCellOpt{}), \top{R}())) $)
IMP-axiom-430 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortTCellOpt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortTCellOpt \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCellOpt kore-sort-var-R ( \kore-symbol-Lblproject'Coln'TCellOpt kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \implies{R}(\and{R}(\top{R}(), \and{R}(\in{SortInt{}, R}(VE4:SortInt{}, VE0:SortInt{}), \and{R}(\in{SortInt{}, R}(VE1:SortInt{}, VE3:SortInt{}), \and{R}(\in{SortInt{}, R}(VE5:SortInt{}, VE2:SortInt{}), \top{R}())))), \and{R}(\equals{SortInt{}, R}(LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VE4:SortInt{}, VE1:SortInt{}, VE5:SortInt{}), Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VE0:SortInt{}, VE3:SortInt{}, VE2:SortInt{}), Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"), Lbl'Unds'-Int'Unds'{}(VE2:SortInt{}, \dv{SortInt{}}("1")))), Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"), VE2:SortInt{})), Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"), Lbl'Unds'-Int'Unds'{}(VE2:SortInt{}, \dv{SortInt{}}("1"))))), \top{R}())) $)
IMP-axiom-431 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE4 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE5 \kore-sort-SortInt ) \top ) ) ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE4 kore-element-var-VE0 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE1 kore-element-var-VE3 ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortInt kore-sort-var-R kore-element-var-VE5 kore-element-var-VE2 ) ( \kore-top kore-sort-var-R ) ) ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortInt kore-sort-var-R ( \kore-symbol-LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE4 kore-element-var-VE1 kore-element-var-VE5 ) ( \kore-symbol-Lbl'Unds'-Int'Unds' ( \kore-symbol-Lbl'Unds'modInt'Unds' ( \kore-symbol-Lbl'UndsPlus'Int'Unds' ( \kore-symbol-LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int kore-element-var-VE0 kore-element-var-VE3 kore-element-var-VE2 ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 ( \kore-dv \kore-sort-SortInt "1" ) ) ) ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'Unds-LT--LT-'Int'Unds' ( \kore-dv \kore-sort-SortInt "1" ) ( \kore-symbol-Lbl'Unds'-Int'Unds' kore-element-var-VE2 ( \kore-dv \kore-sort-SortInt "1" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( adding 1 new metavariable(s) $)
$v kore-element-var-VS2 $.
kore-element-var-VS2-setvariable $f #SetVariable kore-element-var-VS2 $.

$( axiom {R, Q0} \implies{R}(\top{R}(), \and{R}(\equals{Q0, R}(\ceil{SortMap{}, Q0}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VS2:SortKItem{}, VS1:SortKItem{}), VS0:SortMap{})), \and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(VS2:SortKItem{}, VS0:SortMap{}), \dv{SortBool{}}("false")), \and{Q0}(\top{Q0}(), \ceil{SortKItem{}, Q0}(VS1:SortKItem{})))), \top{R}())) $)
IMP-axiom-432 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-Q0 ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VS0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VS1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-VS2 \kore-sort-SortKItem ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-equals kore-sort-var-Q0 kore-sort-var-R ( \kore-ceil \kore-sort-SortMap kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds'Map'Unds' ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-VS2 kore-element-var-VS1 ) kore-element-var-VS0 ) ) ( \kore-and kore-sort-var-Q0 ( \kore-equals \kore-sort-SortBool kore-sort-var-Q0 ( \kore-symbol-Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map kore-element-var-VS2 kore-element-var-VS0 ) ( \kore-dv \kore-sort-SortBool "false" ) ) ( \kore-and kore-sort-var-Q0 ( \kore-top kore-sort-var-Q0 ) ( \kore-ceil \kore-sort-SortKItem kore-sort-var-Q0 kore-element-var-VS1 ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $.

$( axiom {R} \exists{R}(V0:SortMap{}, \equals{SortMap{}, R}(V0:SortMap{}, Lbl'Unds'Map'Unds'{}(V1:SortMap{}, V2:SortMap{}))) $)
IMP-axiom-433 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

$( axiom {R} \exists{R}(V0:SortInt{}, \equals{SortInt{}, R}(V0:SortInt{}, Lbl'UndsSlsh'Int'Unds'{}(V1:SortInt{}, V2:SortInt{}))) $)
IMP-axiom-434 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'UndsSlsh'Int'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

$( axiom {R} \exists{R}(V0:SortInt{}, \equals{SortInt{}, R}(V0:SortInt{}, Lbl'UndsPerc'Int'Unds'{}(V1:SortInt{}, V2:SortInt{}))) $)
IMP-axiom-435 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortInt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortInt kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'UndsPerc'Int'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $.

$( axiom {R} \exists{R}(Val:SortKItem{}, \equals{SortKItem{}, R}(Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}}(From:SortKConfigVar{}))) $)
IMP-axiom-436 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $.

$( adding 4 new metavariable(s) $)
$v kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T $.
kore-sort-var-S3-elementvariable $f #ElementVariable kore-sort-var-S3 $.
kore-sort-var-S2-elementvariable $f #ElementVariable kore-sort-var-S2 $.
kore-sort-var-S1-elementvariable $f #ElementVariable kore-sort-var-S1 $.
kore-element-var-T-elementvariable $f #ElementVariable kore-element-var-T $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T $.

$( axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) $)
kore-inj-axiom $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) ) $.

$( adding 1 new metavariable(s) $)
$v kore-element-var-x0 $.
kore-element-var-x0-elementvariable $f #ElementVariable kore-element-var-x0 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T kore-element-var-x0 $.
no-junk-axiom-0 $a |- ( \eq ( \inh \kore-sort-SortK ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKItem ( \sorted-exists kore-element-var-x1 \kore-sort-SortK ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-x1 ) ) ) \kore-symbol-dotk ) ) $.
no-junk-axiom-1 $a |- ( \eq ( \inh \kore-sort-SortKItem ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedCounterCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKResult kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedCounterCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCellOpt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortId2 kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortSet kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBlock kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCellFragment kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedTopCell kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortList kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBool kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedTopCellFragment kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortPgm kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStmt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortMap kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKConfigVar kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp0'Unds' kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp1'Unds' kore-element-var-x0 ) ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'Hash'freezer'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp1'Unds' kore-element-var-x0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) $.
no-junk-axiom-2 $a |- ( \eq ( \inh \kore-sort-SortTCellFragment ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCellOpt ( \sorted-exists kore-element-var-x1 \kore-sort-SortBCellOpt ( \kore-symbol-Lbl'-LT-'T'-GT-'-fragment kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-3 $a |- ( \eq ( \inh \kore-sort-SortKCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCell kore-element-var-x0 ) \kore-symbol-LblnoKCell ) ) $.
no-junk-axiom-4 $a |- ( \eq ( \inh \kore-sort-SortBCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-x0 ) ) ) $.
no-junk-axiom-5 $a |- ( \eq ( \inh \kore-sort-SortGeneratedTopCellFragment ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCellOpt ( \sorted-exists kore-element-var-x1 \kore-sort-SortGeneratedCounterCellOpt ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-'-fragment kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-7 $a |- ( \eq ( \inh \kore-sort-SortKCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortK ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-x0 ) ) ) $.
no-junk-axiom-8 $a |- ( \eq ( \inh \kore-sort-SortGeneratedTopCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCell ( \sorted-exists kore-element-var-x1 \kore-sort-SortGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-9 $a |- ( \eq ( \inh \kore-sort-SortGeneratedCounterCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ) $.
no-junk-axiom-10 $a |- ( \eq ( \inh \kore-sort-SortBCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBCell kore-element-var-x0 ) \kore-symbol-LblnoBCell ) ) $.
no-junk-axiom-11 $a |- ( \eq ( \inh \kore-sort-SortTCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortTCell kore-element-var-x0 ) \kore-symbol-LblnoTCell ) ) $.
no-junk-axiom-12 $a |- ( \eq ( \inh \kore-sort-SortAExp ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortId2 kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt ( \kore-symbol-Lbl-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'Int kore-element-var-x0 ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsPercUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsStarUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsPlusUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'Unds'-'UndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortAExp ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsSlshUndsUnds'IMP-SYNTAX'Unds'AExp'Unds'AExp'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ) ) ) ) ) ) ) ) $.
no-junk-axiom-14 $a |- ( \eq ( \inh \kore-sort-SortBlock ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortStmt ( \kore-symbol-Lbl'LBraUndsRBraUnds'IMP-SYNTAX'Unds'Block'Unds'Stmt kore-element-var-x0 ) ) \kore-symbol-Lbl'LBraRBraUnds'IMP-SYNTAX'Unds'Block ) ) $.
no-junk-axiom-15 $a |- ( \eq ( \inh \kore-sort-SortGeneratedCounterCellOpt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortGeneratedCounterCell kore-element-var-x0 ) \kore-symbol-LblnoGeneratedCounterCell ) ) $.
no-junk-axiom-18 $a |- ( \eq ( \inh \kore-sort-SortId2 ) ( \or \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \or \kore-symbol-Lblw1'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblx1'Unds'IMP-SYNTAX'Unds'Id2 ) ) ) $.
no-junk-axiom-20 $a |- ( \eq ( \inh \kore-sort-SortPgm ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortStmt kore-element-var-x0 ) ) $.
no-junk-axiom-21 $a |- ( \eq ( \inh \kore-sort-SortKResult ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortInt kore-element-var-x0 ) ) $.
no-junk-axiom-22 $a |- ( \eq ( \inh \kore-sort-SortTCell ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortKCell ( \sorted-exists kore-element-var-x1 \kore-sort-SortBCell ( \kore-symbol-Lbl'-LT-'T'-GT-' kore-element-var-x0 kore-element-var-x1 ) ) ) ) $.
no-junk-axiom-23 $a |- ( \eq ( \inh \kore-sort-SortStmt ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortBlock kore-element-var-x0 ) ( \or ( \sorted-exists kore-element-var-x0 \kore-sort-SortId2 ( \sorted-exists kore-element-var-x1 \kore-sort-SortAExp ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-x0 kore-element-var-x1 ) ) ) ( \sorted-exists kore-element-var-x0 \kore-sort-SortStmt ( \sorted-exists kore-element-var-x1 \kore-sort-SortStmt ( \kore-symbol-Lbl'UndsUndsUnds'IMP-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt kore-element-var-x0 kore-element-var-x1 ) ) ) ) ) ) $.
sorting-cache-0 $p |- ( \imp \top ( \in-sort ( \kore-top \kore-sort-SortGeneratedTopCell ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-6-is-pattern kore-top-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-top-sorting proof-rule-mp ) ABACDABACEABACDFAGH $.
sorting-cache-1 $p |- ( \imp \top ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) ) $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-2 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) \kore-sort-SortKCell ) ) $= ( KSEQ-symbol-1-is-pattern in-sort-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern IMP-symbol-22-is-pattern IMP-sort-5-is-pattern sorting-cache-1 IMP-symbol-22-sorting rule-imp-transitivity ) CADBAEFBGAHI $.
sorting-cache-3 $p |- ( \imp \top ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) ABCADEABCADFABCADEGABHI $.
sorting-cache-4 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortBCell ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-18-is-pattern IMP-sort-2-is-pattern sorting-cache-3 IMP-symbol-18-sorting rule-imp-transitivity ) EABCADABCFGDHABCIJ $.
sorting-cache-5 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortTCell ) ) $= ( in-sort-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern top-is-pattern IMP-sort-5-is-pattern IMP-sort-2-is-pattern and-is-pattern IMP-symbol-16-is-pattern IMP-sort-20-is-pattern sorting-cache-2 sorting-cache-4 rule-and-intro-alt2-sugar IMP-symbol-16-sorting rule-imp-transitivity ) HBCIADEFGJAKBCDEFGLMAHBCIADEFGJANOPBCDEFGQR $.
sorting-cache-6 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortGeneratedCounterCell ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-19-is-pattern IMP-sort-7-is-pattern sorting-cache-3 IMP-symbol-19-sorting rule-imp-transitivity ) EABCADABCFGDHABCIJ $.
sorting-cache-7 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-19-is-pattern top-is-pattern IMP-sort-20-is-pattern IMP-sort-7-is-pattern and-is-pattern IMP-symbol-20-is-pattern IMP-sort-6-is-pattern sorting-cache-5 sorting-cache-6 rule-and-intro-alt2-sugar IMP-symbol-20-sorting rule-imp-transitivity ) JEFABCGHKDABCILDMEFABCGHABCINODJEFABCGHKDABCILDPQREFABCGHABCIST $.
sorting-cache-8 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-6-is-pattern kore-top-is-pattern in-sort-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-and-is-pattern top-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-19-is-pattern IMP-symbol-20-is-pattern and-is-pattern sorting-cache-0 rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity sorting-cache-7 ) HAABABGACIJDEFKLDEFMNACOAAABABGIJDEFKLDEFMNGACHAABABGACIJDEFKLDEFMNACHABACABACOAABABGACHABACABACPPQAABABRSTQAAABABGIJDEFKLDEFMNRS $.
sorting-cache-9 $p |- ( \imp \top ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) ) $= ( IMP-symbol-14-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-14-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-10 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-14-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-14-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-11 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortKItem ) ) $= ( BASIC-K-sort-1-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 BASIC-K-sort-1-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-12 $p |- ( \imp \top ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-14-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) ABCADEABCADFABCADEGABHI $.
sorting-cache-13 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-14-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar kore-inj-is-pattern sorting-cache-10 sorting-cache-11 sorting-cache-12 INJ-symbol-0-sorting rule-imp-transitivity ) FABCBGADEAHGACADEJCHFABCBGADEAHFABCBKLIMIACADENO $.
sorting-cache-14 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortPgm ) ) $= ( IMP-sort-18-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-18-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-15 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortStmt ) ) $= ( IMP-sort-21-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-21-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-16 $p |- ( \imp \top ( \in-sort \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) ) $= ( IMP-symbol-83-is-pattern IMP-sort-16-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-17 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortInt ) ) $= ( IMP-sort-15-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-15-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-18 $p |- ( \imp \top ( \kore-is-sort \kore-sort-SortAExp ) ) $= ( IMP-sort-10-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-10-sort proof-rule-mp ) ABCABDABCEFG $.
sorting-cache-19 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-15-is-pattern kore-is-sort-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar kore-inj-is-pattern sorting-cache-17 sorting-cache-18 sorting-cache-3 INJ-symbol-0-sorting rule-imp-transitivity ) FABCBGADEAHGACADEJCHFABCBGADEAHFABCBKLIMIACADENO $.
sorting-cache-20 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) $= ( IMP-sort-15-is-pattern IMP-sort-10-is-pattern in-sort-is-pattern IMP-symbol-83-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern top-is-pattern IMP-sort-16-is-pattern and-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern sorting-cache-16 sorting-cache-19 rule-and-intro-alt2-sugar IMP-symbol-54-sorting rule-imp-transitivity ) HDICABAEFGBCJDABAEFGKLCHDICABAEFGBCMNODABAEFGPQ $.
sorting-cache-21 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortPgm ) ) $= ( IMP-sort-15-is-pattern IMP-sort-21-is-pattern kore-is-sort-is-pattern IMP-sort-18-is-pattern kore-inj-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-15 sorting-cache-14 sorting-cache-20 INJ-symbol-0-sorting rule-imp-transitivity ) KBCDCLFAGAHIEJBMLBDFAGAHIEJEDMKBCDCLFAGAHIEJBMKBCDCOPNQNBDFAGAHIEJRS $.
sorting-cache-22 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-18-is-pattern kore-inj-is-pattern IMP-sort-15-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-14 sorting-cache-11 sorting-cache-21 INJ-symbol-0-sorting rule-imp-transitivity ) LADEDMFAGCHCIJBKBANMAEFAGCHCIJBKBBENLADEDMFAGCHCIJBKBANLADEDPQOROAEFAGCHCIJBKBST $.
sorting-cache-23 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-18-is-pattern IMP-sort-15-is-pattern in-sort-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern top-is-pattern and-is-pattern IMP-symbol-79-is-pattern IMP-sort-11-is-pattern sorting-cache-13 sorting-cache-22 rule-and-intro-alt2-sugar IMP-symbol-79-sorting rule-imp-transitivity ) NCBCHDABGEBIEJFKFLDAMAABGOCBCHDAEBIEJFKFLDAMAAPQGNCBCHDABGEBIEJFKFLDAMAABGRSTCBCHDAEBIEJFKFLDAMAAUAUB $.
sorting-cache-24 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-18-is-pattern IMP-sort-15-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern top-is-pattern and-is-pattern IMP-symbol-59-is-pattern sorting-cache-9 sorting-cache-23 rule-and-intro-alt2-sugar IMP-symbol-59-sorting rule-imp-transitivity ) QIGHBCBJDAECKELFMFNDAOAAPGHRIBCBJDAECKELFMFNDAOAAPSGHQIGHBCBJDAECKELFMFNDAOAAPGHTUAUBIBCBJDAECKELFMFNDAOAAPUCUD $.
sorting-cache-25 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-6-is-pattern kore-inj-is-pattern kore-top-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-18-is-pattern IMP-sort-15-is-pattern in-sort-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-and-is-pattern top-is-pattern IMP-symbol-92-is-pattern rule-imp-transitivity and-is-pattern sorting-cache-0 rule-and-intro-alt2-sugar kore-and-sorting IMP-sort-11-is-pattern sorting-cache-24 IMP-symbol-92-sorting ) TAACACSAIJDEDKFBGELGMHNHOFBPBBQRUAAIUCAAACACSJDEDKFBGELGMHNHOFBPBBQRUASAITAACACSAIJDEDKFBGELGMHNHOFBPBBQRUAAITACAIACAIUCAACACSAITACAIACAIUDUDUEAACACUFUBTJDEDKFBGELGMHNHOFBPBBQRUGIJDEDKFBGELGMHNHOFBPBBQRUAAIUHJDEDKFBGELGMHNHOFBPBBQRUIUBUEAAACACSJDEDKFBGELGMHNHOFBPBBQRUAUFUB $.
typecode-cache-Pattern-0 $p #Pattern kore-sort-var-R $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-1 $p #Pattern kore-sort-var-S2 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-2 $p #Pattern kore-sort-var-S3 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-3 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) $= ( kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-2 top-is-pattern ) BECAFCGDD $.
typecode-cache-Pattern-4 $p #Pattern x $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-rearrange-0 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \exists x ( \eq x \kore-sort-SortStmt ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-3 and-is-pattern IMP-sort-21-is-pattern typecode-cache-Pattern-4 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-15 kore-sort-functional rule-imp-transitivity ) BFGCDHIEAKJLAMBFGCDHIENOJEAPQR $.
typecode-cache-Pattern-5 $p #Pattern kore-sort-var-S1 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-6 $p #Pattern kore-element-var-T $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-7 $p #Pattern ( \in-sort kore-element-var-T kore-sort-var-S1 ) $= ( typecode-cache-Pattern-6 typecode-cache-Pattern-5 in-sort-is-pattern ) BCADE $.
sorting-cache-26 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ( \kore-is-sort kore-sort-var-S2 ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-3 typecode-cache-Pattern-2 top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEBDCBDCBDCAFCGHIBDCJK $.
sorting-cache-27 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \kore-is-sort kore-sort-var-S2 ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-0 and-is-pattern typecode-cache-Pattern-1 and-elim-right-sugar sorting-cache-26 rule-imp-transitivity ) AFDBCEGBCECHDAFDBCEIBCJK $.
sorting-cache-28 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ( \kore-is-sort kore-sort-var-S2 ) ) $= ( and-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-3 typecode-cache-Pattern-5 typecode-cache-Pattern-7 top-is-pattern typecode-cache-Pattern-1 and-elim-left-sugar sorting-cache-27 rule-imp-transitivity ) AHGBCIFDJGDEKLFFFAHGBCIFCMGAHGBCIFDJGDEKLFFNABCOP $.
sorting-cache-29 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ( \kore-is-sort kore-sort-var-S3 ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-2 top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-3 typecode-cache-Pattern-1 and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABHADCEFADCBICADCEFJADCEFADCADCADCEKADCLGG $.
sorting-cache-30 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \kore-is-sort kore-sort-var-S3 ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-3 typecode-cache-Pattern-0 and-is-pattern typecode-cache-Pattern-2 and-elim-right-sugar sorting-cache-29 rule-imp-transitivity ) AFDBCEGBCEBHDAFDBCEIBCJK $.
sorting-cache-31 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ( \kore-is-sort kore-sort-var-S3 ) ) $= ( and-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-3 typecode-cache-Pattern-5 typecode-cache-Pattern-7 top-is-pattern typecode-cache-Pattern-2 and-elim-left-sugar sorting-cache-30 rule-imp-transitivity ) AHGBCIFDJGDEKLFFFAHGBCIFBMGAHGBCIFDJGDEKLFFNABCOP $.
sorting-cache-32 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ( \in-sort kore-element-var-T kore-sort-var-S1 ) ) $= ( typecode-cache-Pattern-7 top-is-pattern and-is-pattern typecode-cache-Pattern-5 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AFGABCDEEABCDEABCAFGABCDEIABCDEABCABCABCDJABCKHH $.
sorting-cache-33 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-7 top-is-pattern typecode-cache-Pattern-5 typecode-cache-Pattern-0 typecode-cache-Pattern-3 rule-and-intro-alt2-sugar typecode-cache-Pattern-2 sorting-cache-31 and-elim-right-sugar sorting-cache-32 rule-imp-transitivity top-intro rule-weakening ) AKGBCLFDJGDEHIFFFBNGDEHIFABCDEOAKGBCLFDJGDEHIFFFDEHIAKGBCLFDJGDEHIFFFDJGDEHIFFDEHAKGBCLFDJGDEHIFFPDEQRAKGBCLFDJGDEHIFFFISTMM $.
sorting-cache-34 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-7 top-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-3 typecode-cache-Pattern-5 typecode-cache-Pattern-1 typecode-cache-Pattern-2 sorting-cache-28 sorting-cache-33 rule-and-intro-alt2-sugar ) AJGBCKFDLGDEHIFFFCMGBNGDEHIFFABCDEOABCDEPQ $.
typecode-cache-Pattern-8 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-2 typecode-cache-Pattern-7 top-is-pattern ) BGFAHFCDIJEEE $.
sorting-cache-35 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-5 typecode-cache-Pattern-0 typecode-cache-Pattern-3 typecode-cache-Pattern-7 top-is-pattern rule-imp-transitivity and-elim-left-sugar typecode-cache-Pattern-8 imp-reflexivity rule-and-intro-alt2-sugar and-elim-right-sugar sorting-cache-34 ) AIGBCJFDHGDEKLFFFAIGDHGBCDEOFAIGBCJFDHGDEKLFFFAIGBCJFAIGAIGBCJFDHGDEKLFFNAIGBCJFAIGAIGAIGBCJNAIGPMMAIGBCJFDHGDEKLFFFDHGBCDEOAIGBCJFDHGDEKLFFFDHGDEKLFFDHGAIGBCJFDHGDEKLFFRDHGDEKLFFDHGDHGDHGDEKLFNDHGPMMABCDESQQ $.
typecode-cache-Pattern-9 $p #Pattern ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) $= ( typecode-cache-Pattern-5 typecode-cache-Pattern-1 typecode-cache-Pattern-6 kore-inj-is-pattern ) BDAECFG $.
typecode-cache-Pattern-10 $p #Pattern ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) $= ( typecode-cache-Pattern-1 typecode-cache-Pattern-2 typecode-cache-Pattern-9 kore-inj-is-pattern ) BEAFBCDGH $.
typecode-cache-Pattern-11 $p #Pattern ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) $= ( typecode-cache-Pattern-5 typecode-cache-Pattern-2 typecode-cache-Pattern-6 kore-inj-is-pattern ) BDAECFG $.
sorting-rearrange-1 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-5 typecode-cache-Pattern-3 typecode-cache-Pattern-7 top-is-pattern typecode-cache-Pattern-8 typecode-cache-Pattern-2 typecode-cache-Pattern-10 typecode-cache-Pattern-11 kore-equals-is-pattern kore-valid-is-pattern sorting-cache-35 kore-inj-axiom rule-imp-transitivity ) AGHBCJFDIHDEKLFFFAGHDIHBCDEMFFAGBNAGBCDEOBDEPQRABCDESABCDETUA $.
typecode-cache-Pattern-12 $p #Pattern ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-6 kore-inj-is-pattern ) CADBEF $.
typecode-cache-Pattern-13 $p #Pattern ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-6 kore-inj-is-pattern ) CADBEF $.
typecode-cache-Pattern-14 $p #Pattern kore-sort-var-x0 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-15 $p #Pattern ( \kore-inj kore-sort-var-x0 kore-sort-var-S2 kore-element-var-T ) $= ( typecode-cache-Pattern-14 typecode-cache-Pattern-1 typecode-cache-Pattern-6 kore-inj-is-pattern ) ADBECFG $.
typecode-cache-Pattern-16 $p #Pattern ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-x0 kore-sort-var-S2 kore-element-var-T ) ) $= ( typecode-cache-Pattern-1 typecode-cache-Pattern-2 typecode-cache-Pattern-15 kore-inj-is-pattern ) CEBFACDGH $.
typecode-cache-Pattern-17 $p #Pattern ( \kore-inj kore-sort-var-x0 kore-sort-var-S3 kore-element-var-T ) $= ( typecode-cache-Pattern-14 typecode-cache-Pattern-2 typecode-cache-Pattern-6 kore-inj-is-pattern ) ADBECFG $.
typecode-cache-Pattern-18 $p #Pattern ( \in-sort kore-element-var-T kore-sort-var-x0 ) $= ( typecode-cache-Pattern-6 typecode-cache-Pattern-14 in-sort-is-pattern ) BCADE $.
substitution-0 $p #Substitution kore-element-var-T kore-element-var-T \kore-sort-SortStmt kore-sort-var-S1 $= ( typecode-cache-Pattern-6 IMP-sort-21-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-1 $p #Substitution ( \in-sort kore-element-var-T \kore-sort-SortStmt ) ( \in-sort kore-element-var-T kore-sort-var-S1 ) \kore-sort-SortStmt kore-sort-var-S1 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-5 substitution-0 substitution-var-same substitution-in-sort ) CBDCBDAFAEABGCAEHI $.
substitution-2 $p #Substitution ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) \kore-sort-SortStmt kore-sort-var-S1 $= ( IMP-sort-21-is-pattern top-is-pattern element-var-is-var typecode-cache-Pattern-6 in-sort-is-pattern typecode-cache-Pattern-7 substitution-1 substitution-disjoint substitution-and ) CBFCGDABHDAEABIDCAEJK $.
substitution-3 $p #Substitution ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) \kore-sort-SortStmt kore-sort-var-S1 $= ( IMP-sort-21-is-pattern element-var-is-var kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-5 typecode-cache-Pattern-6 in-sort-is-pattern typecode-cache-Pattern-7 substitution-var-same substitution-kore-is-sort substitution-2 substitution-and ) CCEBICJFGAHEABKFGADCAHCADCADLMABNO $.
substitution-4 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-sort-SortStmt kore-sort-var-S1 $= ( typecode-cache-Pattern-0 IMP-sort-21-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-5 $p #Substitution kore-sort-var-S3 kore-sort-var-S3 \kore-sort-SortStmt kore-sort-var-S1 $= ( typecode-cache-Pattern-2 IMP-sort-21-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-6 $p #Substitution kore-sort-var-S2 kore-sort-var-S2 \kore-sort-SortStmt kore-sort-var-S1 $= ( typecode-cache-Pattern-1 IMP-sort-21-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-7 $p #Substitution ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) \kore-sort-SortStmt kore-sort-var-S1 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-5 substitution-var-same substitution-6 substitution-0 substitution-kore-inj ) DAECFBHAECFDBGDBGIABJBCKL $.
substitution-8 $p #Substitution ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) \kore-sort-SortStmt kore-sort-var-S1 $= ( typecode-cache-Pattern-1 typecode-cache-Pattern-2 typecode-cache-Pattern-12 typecode-cache-Pattern-9 IMP-sort-21-is-pattern element-var-is-var substitution-6 substitution-5 substitution-7 substitution-kore-inj ) BEAFBDGBEAFBCDHICJBCKACLBCDMN $.
substitution-9 $p #Substitution ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) \kore-sort-SortStmt kore-sort-var-S1 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-5 substitution-var-same substitution-5 substitution-0 substitution-kore-inj ) DAECFBHAECFDBGDBGIABJBCKL $.
substitution-10 $p #Substitution ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) \kore-sort-SortStmt kore-sort-var-S1 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-0 typecode-cache-Pattern-1 typecode-cache-Pattern-12 kore-inj-is-pattern typecode-cache-Pattern-13 typecode-cache-Pattern-10 typecode-cache-Pattern-11 IMP-sort-21-is-pattern element-var-is-var substitution-5 substitution-4 substitution-8 substitution-9 substitution-kore-equals ) BFAGCHBFCEIJBEKBFAGBCDELBDEMNDOBDPADQBCDERBDEST $.
substitution-11 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) \kore-sort-SortStmt kore-sort-var-S1 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-2 kore-equals-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-12 kore-inj-is-pattern typecode-cache-Pattern-13 typecode-cache-Pattern-10 typecode-cache-Pattern-11 IMP-sort-21-is-pattern element-var-is-var substitution-4 substitution-10 substitution-kore-valid ) AFBGAFCIBGCEJKBELHAFBGAFBCDEMBDENHODPADQABCDERS $.
substitution-12 $p #Substitution ( \imp ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ) ) ( \imp ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) ) \kore-sort-SortStmt kore-sort-var-S1 $= ( and-is-pattern typecode-cache-Pattern-0 IMP-sort-21-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern top-is-pattern kore-equals-is-pattern kore-valid-is-pattern typecode-cache-Pattern-6 in-sort-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-12 kore-inj-is-pattern typecode-cache-Pattern-13 typecode-cache-Pattern-5 typecode-cache-Pattern-7 typecode-cache-Pattern-10 typecode-cache-Pattern-11 element-var-is-var substitution-3 substitution-11 substitution-imp ) HHJENHOKFFAGBIAGCPBICEQRBESLMDTJDEUAKFFAGBIAGBCDEUBBDEUCLMDUDDEUEABCDEUFUG $.
substitution-13 $p #Substitution ( \kore-is-sort kore-sort-var-x0 ) ( \kore-is-sort kore-sort-var-S1 ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-14 element-var-is-var typecode-cache-Pattern-5 substitution-var-same substitution-kore-is-sort ) ACBEACBDACBDFG $.
substitution-14 $p #Substitution kore-element-var-T kore-element-var-T kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-6 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CDAEBFG $.
substitution-15 $p #Substitution ( \in-sort kore-element-var-T kore-sort-var-x0 ) ( \in-sort kore-element-var-T kore-sort-var-S1 ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-14 typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-5 substitution-14 substitution-var-same substitution-in-sort ) ADCEADCEBGBFABCHADBFIJ $.
substitution-16 $p #Substitution \top \top kore-sort-var-x0 kore-sort-var-S1 $= ( top-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CADBEF $.
substitution-17 $p #Substitution ( \and ( \in-sort kore-element-var-T kore-sort-var-x0 ) \top ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) kore-sort-var-x0 kore-sort-var-S1 $= ( top-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-18 typecode-cache-Pattern-7 element-var-is-var substitution-15 substitution-16 substitution-and ) AEACFDBCGDBHABCIABJK $.
substitution-18 $p #Substitution ( \and ( \kore-is-sort kore-sort-var-x0 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-x0 ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-14 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-18 typecode-cache-Pattern-5 typecode-cache-Pattern-7 element-var-is-var substitution-13 substitution-17 substitution-and ) ADADEACHFGBIEBCJFGBKABLABCMN $.
substitution-19 $p #Substitution kore-sort-var-R kore-sort-var-R kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) ADBECFG $.
substitution-20 $p #Substitution kore-sort-var-S3 kore-sort-var-S3 kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) BDAECFG $.
substitution-21 $p #Substitution kore-sort-var-S2 kore-sort-var-S2 kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-1 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) BDAECFG $.
substitution-22 $p #Substitution ( \kore-inj kore-sort-var-x0 kore-sort-var-S2 kore-element-var-T ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-14 typecode-cache-Pattern-1 typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-5 substitution-var-same substitution-21 substitution-14 substitution-kore-inj ) AEBFDGCIBFDGAECHAECHJABCKACDLM $.
substitution-23 $p #Substitution ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-x0 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-1 typecode-cache-Pattern-2 typecode-cache-Pattern-15 typecode-cache-Pattern-9 typecode-cache-Pattern-14 element-var-is-var substitution-21 substitution-20 substitution-22 substitution-kore-inj ) CFBGACEHCFBGCDEIAJDKACDLABDMACDENO $.
substitution-24 $p #Substitution ( \kore-inj kore-sort-var-x0 kore-sort-var-S3 kore-element-var-T ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-14 typecode-cache-Pattern-2 typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-5 substitution-var-same substitution-20 substitution-14 substitution-kore-inj ) AEBFDGCIBFDGAECHAECHJABCKACDLM $.
substitution-25 $p #Substitution ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-x0 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-x0 kore-sort-var-S3 kore-element-var-T ) ) ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-0 typecode-cache-Pattern-16 typecode-cache-Pattern-17 typecode-cache-Pattern-10 typecode-cache-Pattern-11 typecode-cache-Pattern-14 element-var-is-var substitution-20 substitution-19 substitution-23 substitution-24 substitution-kore-equals ) CGAHBCDFIBCFJCGAHCDEFKCEFLBMENBCEOABEPBCDEFQBCEFRS $.
substitution-26 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-x0 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-x0 kore-sort-var-S3 kore-element-var-T ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) kore-sort-var-x0 kore-sort-var-S1 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-2 kore-equals-is-pattern typecode-cache-Pattern-16 typecode-cache-Pattern-17 typecode-cache-Pattern-10 typecode-cache-Pattern-11 typecode-cache-Pattern-14 element-var-is-var substitution-19 substitution-25 substitution-kore-valid ) AGCHAGBCDFJBCFKIAGCHAGCDEFLCEFMIBNEOABEPABCDEFQR $.
substitution-27 $p #Substitution ( \imp ( \and ( \kore-is-sort kore-sort-var-x0 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-x0 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-x0 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-x0 kore-sort-var-S3 kore-element-var-T ) ) ) ) ( \imp ( \and ( \kore-is-sort kore-sort-var-S1 ) ( \and ( \in-sort kore-element-var-T kore-sort-var-S1 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj kore-sort-var-S1 kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S1 kore-sort-var-S3 kore-element-var-T ) ) ) ) kore-sort-var-x0 kore-sort-var-S1 $= ( and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-14 kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-2 kore-equals-is-pattern kore-valid-is-pattern typecode-cache-Pattern-18 typecode-cache-Pattern-16 typecode-cache-Pattern-17 typecode-cache-Pattern-5 typecode-cache-Pattern-7 typecode-cache-Pattern-10 typecode-cache-Pattern-11 element-var-is-var substitution-18 substitution-26 substitution-imp ) BIBIJBFOKGGAHCLAHBCDFPBCFQMNERJEFSKGGAHCLAHCDEFTCEFUAMNEUBBEFUCABCDEFUDUE $.
typecode-cache-Pattern-19 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-cache-36 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \kore-is-sort kore-sort-var-S3 ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-19 typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-37 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \kore-is-sort kore-sort-var-S3 ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-19 typecode-cache-Pattern-1 and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-2 and-elim-right-sugar rule-imp-transitivity sorting-cache-36 ) AIECGEBDFHHCGEBDFHBJEAIECGEBDFHKCGEBDFHBDFBJECGEBDFKBDMLL $.
sorting-cache-38 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) $= ( kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-1 typecode-cache-Pattern-19 top-is-pattern typecode-cache-Pattern-2 sorting-cache-37 top-intro rule-weakening rule-and-intro-alt2-sugar ) AGECHEBDIFFBKEJABCDLAGECHEBDIFFJMNO $.
sorting-cache-39 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-1 and-is-pattern typecode-cache-Pattern-19 typecode-cache-Pattern-0 rule-imp-transitivity typecode-cache-Pattern-2 top-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity sorting-cache-38 rule-and-intro-alt2-sugar ) AIECFEBDHGGCFEBKELGAIECFEBDHGGCFEBDHGCFEAIECFEBDHGMCFEBDHGCFECFECFEBDHNCFEOJJABCDPQ $.
sorting-cache-40 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-T \kore-sort-SortStmt ) ) $= ( typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-19 typecode-cache-Pattern-2 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-41 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \in-sort kore-element-var-T \kore-sort-SortStmt ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-19 typecode-cache-Pattern-1 and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern and-elim-right-sugar rule-imp-transitivity sorting-cache-40 ) AIECGEBDFHHCGEBDFHDJKLAIECGEBDFHMCGEBDFHBDFDJKLCGEBDFMBDONN $.
sorting-cache-42 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) $= ( kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-1 typecode-cache-Pattern-19 top-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern sorting-cache-41 top-intro rule-weakening rule-and-intro-alt2-sugar ) AGECHEBDIFFDKLMJABCDNAGECHEBDIFFJOPQ $.
sorting-cache-43 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) $= ( kore-is-sort-is-pattern and-is-pattern IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-1 typecode-cache-Pattern-19 typecode-cache-Pattern-6 in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-21-sort proof-rule-mp sorting-cache-42 rule-and-intro-alt2-sugar ) AHECIEBDJFFGEDKGLMFGEAHECIEBDJFFGENGEAHECIEBDJFFOPQABCDRS $.
sorting-cache-44 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) $= ( kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-1 typecode-cache-Pattern-19 typecode-cache-Pattern-3 IMP-sort-21-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-6 in-sort-is-pattern top-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity sorting-cache-39 sorting-cache-43 ) AGECHEBDIFFAGEBCJFKEDMKNOFFAGECHEBDIFFAGEBCJAGECHEBDIFFAGEAGEAGECHEBDIFPAGEQRABCDSLABCDTL $.
sorting-rearrange-2 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S2 ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern kore-sort-var-S1-elementvariable typecode-cache-Pattern-2 kore-sort-var-x0-elementvariable IMP-sort-21-is-pattern top-is-pattern kore-equals-is-pattern kore-valid-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-3 typecode-cache-Pattern-6 in-sort-is-pattern typecode-cache-Pattern-12 kore-inj-is-pattern typecode-cache-Pattern-13 x-is-element-var typecode-cache-Pattern-19 sorting-cache-44 typecode-cache-Pattern-10 typecode-cache-Pattern-11 typecode-cache-Pattern-16 typecode-cache-Pattern-17 typecode-cache-Pattern-5 typecode-cache-Pattern-7 typecode-cache-Pattern-14 typecode-cache-Pattern-18 sorting-rearrange-0 sorting-rearrange-1 substitution-12 substitution-27 functional-substitution-alt rule-imp-transitivity ) AFGCOGBDUCEEAFGBCPEKGDQKRLEEEAFBIAFCOBICDSTBDUAMNABCDUDKAFBIAFBCHDUEBHDUFMNAFBIAFCOBICDSTBDUAMNAFBIAFJBCDUGJBDUHMNAFGBCPEHUIGHDUJLEEKGDQKRLEEJUKGJDULLEEUBHJUBABCUMABCHDUNABCHDUOAJBCHDUPUQUR $.
sorting-rearrange-3 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \exists x ( \eq x \kore-sort-SortPgm ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-19 and-is-pattern IMP-sort-18-is-pattern typecode-cache-Pattern-4 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-14 kore-sort-functional rule-imp-transitivity ) BFGCDHIEAKJLAMBFGCDHIENOJEAPQR $.
sorting-cache-45 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S2 ) \top ) ) ( \kore-is-sort kore-sort-var-S3 ) ) $= ( kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-19 typecode-cache-Pattern-0 typecode-cache-Pattern-1 top-is-pattern typecode-cache-Pattern-2 rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-36 ) AHEBDGFCIEJFFAHEBDGFBKEAHEBDGFCIEJFMAHEBDGFBDGBKEAHEBDGNBDOLL $.
sorting-cache-46 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S2 ) \top ) ) ( \in-sort kore-element-var-T \kore-sort-SortStmt ) ) $= ( kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-19 typecode-cache-Pattern-0 typecode-cache-Pattern-1 top-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-40 ) AHEBDGFCIEJFFAHEBDGFDKLMAHEBDGFCIEJFOAHEBDGFBDGDKLMAHEBDGPBDQNN $.
sorting-cache-47 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S2 ) \top ) ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-19 typecode-cache-Pattern-1 typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern sorting-cache-46 top-intro rule-weakening rule-and-intro-alt2-sugar ) AHFBDIECJFGEEDKLMGABCDNAHFBDIECJFGEEGOPQ $.
sorting-cache-48 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S2 ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-19 typecode-cache-Pattern-1 typecode-cache-Pattern-2 typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern sorting-cache-45 sorting-cache-47 rule-and-intro-alt2-sugar ) AHFBDIECJFGEEBKFDLMNGEABCDOABCDPQ $.
sorting-rearrange-4 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S2 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ) ) $= ( kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-1 typecode-cache-Pattern-19 top-is-pattern rule-imp-transitivity and-elim-left-sugar typecode-cache-Pattern-2 imp-reflexivity rule-and-intro-alt2-sugar typecode-cache-Pattern-12 kore-inj-is-pattern typecode-cache-Pattern-13 kore-equals-is-pattern kore-valid-is-pattern and-elim-right-sugar sorting-cache-48 sorting-rearrange-2 ) AGEBDIFCHEJFFAGECHEBDIFFAGBMAGCHBMCDPQBDRSTAGEBDIFCHEJFFAGECHEBDIFAGEBDIFCHEJFFAGEBDIFAGEAGEBDIFCHEJFLAGEBDIFAGEAGEAGEBDILAGENKKAGEBDIFCHEJFFCHEBDIAGEBDIFCHEJFFCHEJFCHEAGEBDIFCHEJFUACHEJFCHECHECHEJLCHENKKABCDUBOOABCDUCK $.
typecode-cache-Pattern-20 $p #Pattern ( \kore-inj \kore-sort-SortStmt kore-sort-var-x0 kore-element-var-T ) $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-6 kore-inj-is-pattern ) CADBEF $.
substitution-28 $p #Substitution ( \and ( \kore-is-sort \kore-sort-SortPgm ) \top ) ( \and ( \kore-is-sort kore-sort-var-S2 ) \top ) \kore-sort-SortPgm kore-sort-var-S2 $= ( IMP-sort-18-is-pattern element-var-is-var top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-1 substitution-var-same substitution-kore-is-sort substitution-disjoint substitution-and ) BBEDAFEDACBAFBACBACGHDBACIJ $.
substitution-29 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-sort-SortPgm kore-sort-var-S2 $= ( typecode-cache-Pattern-0 IMP-sort-18-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-30 $p #Substitution kore-sort-var-S3 kore-sort-var-S3 \kore-sort-SortPgm kore-sort-var-S2 $= ( typecode-cache-Pattern-2 IMP-sort-18-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-31 $p #Substitution kore-element-var-T kore-element-var-T \kore-sort-SortPgm kore-sort-var-S2 $= ( typecode-cache-Pattern-6 IMP-sort-18-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-32 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) \kore-sort-SortPgm kore-sort-var-S2 $= ( IMP-sort-18-is-pattern IMP-sort-21-is-pattern element-var-is-var typecode-cache-Pattern-6 typecode-cache-Pattern-1 substitution-disjoint substitution-var-same substitution-31 substitution-kore-inj ) DCBFDAGBFCAEDCAEHCAEIABJK $.
substitution-33 $p #Substitution ( \kore-inj \kore-sort-SortPgm kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) \kore-sort-SortPgm kore-sort-var-S2 $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-2 element-var-is-var IMP-sort-21-is-pattern typecode-cache-Pattern-6 kore-inj-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-12 substitution-var-same substitution-30 substitution-32 substitution-kore-inj ) DAEGDCHIBJAEBCKDBFDBFLABMBCNO $.
substitution-34 $p #Substitution ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj \kore-sort-SortPgm kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) \kore-sort-SortPgm kore-sort-var-S2 $= ( typecode-cache-Pattern-2 IMP-sort-18-is-pattern kore-inj-is-pattern typecode-cache-Pattern-13 typecode-cache-Pattern-0 element-var-is-var IMP-sort-21-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-1 typecode-cache-Pattern-12 substitution-30 substitution-29 substitution-33 substitution-disjoint substitution-kore-equals ) BEAIFBEKFDLGGBDHBEAICMBECDNGBDHFCJBCOACPBCDQBDHFCJRS $.
substitution-35 $p #Substitution ( \kore-is-sort kore-sort-var-x0 ) ( \kore-is-sort kore-sort-var-S2 ) kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-14 element-var-is-var typecode-cache-Pattern-1 substitution-var-same substitution-kore-is-sort ) ACBEACBDACBDFG $.
substitution-36 $p #Substitution \top \top kore-sort-var-x0 kore-sort-var-S2 $= ( top-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CADBEF $.
substitution-37 $p #Substitution ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \and ( \kore-is-sort kore-sort-var-S2 ) \top ) kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-14 kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-1 element-var-is-var substitution-35 substitution-36 substitution-and ) ACACDEBFDEBGABHABIJ $.
substitution-38 $p #Substitution kore-sort-var-R kore-sort-var-R kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) ADBECFG $.
substitution-39 $p #Substitution kore-sort-var-S3 kore-sort-var-S3 kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) BDAECFG $.
substitution-40 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-sort-var-x0 kore-sort-var-S2 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CADBEF $.
substitution-41 $p #Substitution kore-element-var-T kore-element-var-T kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-6 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CDAEBFG $.
substitution-42 $p #Substitution ( \kore-inj \kore-sort-SortStmt kore-sort-var-x0 kore-element-var-T ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-14 IMP-sort-21-is-pattern typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-1 substitution-40 substitution-var-same substitution-41 substitution-kore-inj ) EADCFEBHCFADBGABIADBGJABCKL $.
substitution-43 $p #Substitution ( \kore-inj kore-sort-var-x0 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-x0 kore-element-var-T ) ) ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-14 typecode-cache-Pattern-2 element-var-is-var typecode-cache-Pattern-20 typecode-cache-Pattern-1 typecode-cache-Pattern-12 substitution-var-same substitution-39 substitution-42 substitution-kore-inj ) AEBFADHCIBFCDJAECGAECGKABCLACDMN $.
substitution-44 $p #Substitution ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-x0 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-x0 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj kore-sort-var-S2 kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt kore-sort-var-S2 kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) kore-sort-var-x0 kore-sort-var-S2 $= ( typecode-cache-Pattern-2 typecode-cache-Pattern-14 typecode-cache-Pattern-13 typecode-cache-Pattern-0 kore-inj-is-pattern element-var-is-var typecode-cache-Pattern-20 typecode-cache-Pattern-1 typecode-cache-Pattern-12 substitution-39 substitution-38 substitution-43 substitution-disjoint substitution-kore-equals ) CFAIBGCFBELJCEHCFAIDMCFDENJCEHBGDKBCDOABDPBCDEQCEHBGDKRS $.
sorting-cache-49 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) $= ( typecode-cache-Pattern-19 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-40 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) AEFBCDGCHIJKAEFBCDGBCDCHIJAEFBCDLBCMNAEFBCDGKOPQ $.
sorting-cache-50 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-19 typecode-cache-Pattern-0 and-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-36 rule-imp-transitivity sorting-cache-49 rule-and-intro-alt2-sugar ) AFDBCEGBHDCIJKLGAFDBCEGBCEBHDAFDBCEMBCNOABCPQ $.
sorting-rearrange-5 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj \kore-sort-SortPgm kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern kore-sort-var-S2-elementvariable typecode-cache-Pattern-2 and-is-pattern IMP-sort-18-is-pattern kore-inj-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-19 typecode-cache-Pattern-13 kore-equals-is-pattern top-is-pattern kore-valid-is-pattern typecode-cache-Pattern-1 typecode-cache-Pattern-14 typecode-cache-Pattern-12 IMP-sort-21-is-pattern typecode-cache-Pattern-6 element-var-is-var rule-and-intro-alt2-sugar typecode-cache-Pattern-20 rule-imp-transitivity x-is-element-var substitution-kore-valid substitution-imp and-elim-left-sugar imp-reflexivity sorting-cache-50 imp-is-pattern proof-rule-prop-1 IMP-sort-18-sort proof-rule-mp top-intro rule-weakening sorting-rearrange-3 sorting-rearrange-4 substitution-28 substitution-29 substitution-34 substitution-37 substitution-38 substitution-44 functional-substitution-alt ) ADEBCLHADEBCLHIEOHHADBGADIBGTICUAJJBCMNPADEBCLHADEBCLHIEOHADEBCLHADEBCLADEBCLHADEADEADEBCLUIADEUJUEABCUKUCADEBCLHIEOIEADEBCLHIEULIEADEBCLHUMUNUOADEBCLHOUPUQUCUCIADBGADFQBGFCSJBCMNPADBGADIBGTICUAJJBCMNPADBGADKRBGKCUDJBCMNPADEBCLHFQEOHIEOHKREOHUFFKUFABCURABFCUSIIEOHADBGADIBGTICUAJJBCMNPFQEOHADBGADFQBGFCSJBCMNPFUBFUTADBGADIBGTICUAJJBCMNADBGADFQBGFCSJBCMNIFUBAFVAABFCVBUGUHKRKREOHADBGADKRBGKCUDJBCMNPFQEOHADBGADFQBGFCSJBCMNPFUBKFVCADBGADKRBGKCUDJBCMNADBGADFQBGFCSJBCMNKRFUBAKFVDAKBFCVEUGUHVFUE $.
typecode-cache-Pattern-21 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-cache-51 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-21 typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-52 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-T \kore-sort-SortStmt ) ) $= ( typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-21 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-53 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-21 typecode-cache-Pattern-2 kore-is-sort-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern and-elim-left-sugar sorting-cache-52 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACFBGHEDDCIJKEACFBGHEDDACFCIJKACFBGHEDLACMNACFBGHEDDEOPQ $.
sorting-cache-54 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) $= ( typecode-cache-Pattern-2 kore-is-sort-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-21 rule-imp-transitivity typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity sorting-cache-53 rule-and-intro-alt2-sugar ) ACHBDEGFFBDECJKLGFACHBDEGFFBDEGFBDEACHBDEGFMBDEGFBDEBDEBDEGNBDEOIIABCPQ $.
sorting-rearrange-6 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj \kore-sort-SortPgm kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-2 typecode-cache-Pattern-21 typecode-cache-Pattern-0 top-is-pattern typecode-cache-Pattern-19 IMP-sort-18-is-pattern kore-inj-is-pattern rule-imp-transitivity IMP-sort-21-is-pattern typecode-cache-Pattern-6 typecode-cache-Pattern-13 kore-equals-is-pattern kore-valid-is-pattern and-elim-left-sugar sorting-cache-51 sorting-cache-54 rule-and-intro-alt2-sugar sorting-rearrange-5 ) ACGBFEIDDAHEBCJDAHBFAHKBFNKCOLLBCPQRACGBFEIDDAHEBCJACGBFEIDDACGAHEACGBFEIDSACTMABCUAUBABCUCM $.
substitution-45 $p #Substitution ( \and ( \kore-is-sort \kore-sort-SortKItem ) \top ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) \kore-sort-SortKItem kore-sort-var-S3 $= ( BASIC-K-sort-1-is-pattern element-var-is-var top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-2 substitution-var-same substitution-kore-is-sort substitution-disjoint substitution-and ) BBEDAFEDACBAFBACBACGHDBACIJ $.
substitution-46 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-sort-SortKItem kore-sort-var-S3 $= ( typecode-cache-Pattern-0 BASIC-K-sort-1-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-47 $p #Substitution kore-element-var-T kore-element-var-T \kore-sort-SortKItem kore-sort-var-S3 $= ( typecode-cache-Pattern-6 BASIC-K-sort-1-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-48 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-T ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) \kore-sort-SortKItem kore-sort-var-S3 $= ( BASIC-K-sort-1-is-pattern IMP-sort-21-is-pattern element-var-is-var typecode-cache-Pattern-6 typecode-cache-Pattern-2 substitution-disjoint substitution-var-same substitution-47 substitution-kore-inj ) DCBFDAGBFCAEDCAEHCAEIABJK $.
substitution-49 $p #Substitution ( \kore-is-sort kore-sort-var-x0 ) ( \kore-is-sort kore-sort-var-S3 ) kore-sort-var-x0 kore-sort-var-S3 $= ( typecode-cache-Pattern-14 element-var-is-var typecode-cache-Pattern-2 substitution-var-same substitution-kore-is-sort ) ACBEACBDACBDFG $.
substitution-50 $p #Substitution \top \top kore-sort-var-x0 kore-sort-var-S3 $= ( top-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CADBEF $.
substitution-51 $p #Substitution ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \and ( \kore-is-sort kore-sort-var-S3 ) \top ) kore-sort-var-x0 kore-sort-var-S3 $= ( typecode-cache-Pattern-14 kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-2 element-var-is-var substitution-49 substitution-50 substitution-and ) ACACDEBFDEBGABHABIJ $.
substitution-52 $p #Substitution kore-sort-var-R kore-sort-var-R kore-sort-var-x0 kore-sort-var-S3 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) ADBECFG $.
substitution-53 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-sort-var-x0 kore-sort-var-S3 $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CADBEF $.
substitution-54 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-sort-var-x0 kore-sort-var-S3 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CADBEF $.
substitution-55 $p #Substitution kore-element-var-T kore-element-var-T kore-sort-var-x0 kore-sort-var-S3 $= ( typecode-cache-Pattern-6 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CDAEBFG $.
substitution-56 $p #Substitution ( \kore-inj \kore-sort-SortStmt kore-sort-var-x0 kore-element-var-T ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) kore-sort-var-x0 kore-sort-var-S3 $= ( typecode-cache-Pattern-14 IMP-sort-21-is-pattern typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-2 substitution-54 substitution-var-same substitution-55 substitution-kore-inj ) EADCFEBHCFADBGABIADBGJABCKL $.
substitution-57 $p #Substitution ( \kore-equals kore-sort-var-x0 kore-sort-var-R ( \kore-inj \kore-sort-SortPgm kore-sort-var-x0 ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-x0 kore-element-var-T ) ) ( \kore-equals kore-sort-var-S3 kore-sort-var-R ( \kore-inj \kore-sort-SortPgm kore-sort-var-S3 ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt kore-sort-var-S3 kore-element-var-T ) ) kore-sort-var-x0 kore-sort-var-S3 $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-14 kore-inj-is-pattern IMP-sort-21-is-pattern typecode-cache-Pattern-6 element-var-is-var typecode-cache-Pattern-2 typecode-cache-Pattern-0 substitution-var-same typecode-cache-Pattern-20 typecode-cache-Pattern-13 substitution-52 substitution-53 substitution-disjoint substitution-kore-inj substitution-56 substitution-kore-equals ) BFALEBFHEDIGGBDNCKALECKHEDIGGCDOBFCJBFCJMABCPEBFHEDIGECKHEDIGBFCJBCQBFCJMHEDIGBFCJRSBCDTUA $.
sorting-cache-55 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) $= ( typecode-cache-Pattern-21 top-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern sorting-cache-51 sorting-cache-52 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-rearrange-7 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortKItem kore-sort-var-R ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-T ) ) ) ) $= ( kore-sort-var-S3-elementvariable kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-18-is-pattern typecode-cache-Pattern-0 IMP-sort-21-is-pattern typecode-cache-Pattern-6 kore-sort-var-x0-elementvariable typecode-cache-Pattern-2 top-is-pattern kore-is-sort-is-pattern kore-equals-is-pattern typecode-cache-Pattern-21 and-is-pattern typecode-cache-Pattern-14 element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-13 x-is-element-var typecode-cache-Pattern-20 top-intro rule-weakening rule-and-intro-alt2-sugar rule-imp-transitivity substitution-46 substitution-var-same substitution-disjoint substitution-kore-valid substitution-imp sorting-cache-55 imp-is-pattern proof-rule-prop-1 BASIC-K-sort-1-sort proof-rule-mp typecode-cache-Pattern-4 eq-is-pattern exists-is-pattern sorting-cache-11 kore-sort-functional sorting-rearrange-6 substitution-45 substitution-kore-inj substitution-48 substitution-kore-equals substitution-51 substitution-52 substitution-57 functional-substitution-alt ) ABOABOEMLPPAGEAGFEHFBIDDHEBIDNSABOABOEMLPABULABOEMLEMABOEMUMEMABOUNUOUPABOLUCUDUEUEEAGCKAGFCKHFBIDDCBTNSAGEAGFEHFBIDDHEBIDNSAGJQAGFJQHFBIDDJBUBNSABOCKMLPEMLPJQMLPUACJABOLUAUQEURUAUSABOLUCUDELUAUTVAUFACBVBEEMLPAGEAGFEHFBIDDHEBIDNSCKMLPAGCKAGFCKHFBIDDCBTNSCRCVCAGEAGFEHFBIDDHEBIDNAGCKAGFCKHFBIDDCBTNECRACUGEAGFEHFBIDDHEBIDCKAGFCKHFBIDDCBTECRECRUHACUGFEHFBIDFCKHFBIDECRFECRUIECRUHHFBIDECRUIVDCBVEVFUJUKJQJQMLPAGJQAGFJQHFBIDDJBUBNSCKMLPAGCKAGFCKHFBIDDCBTNSCRJCVGAGJQAGFJQHFBIDDJBUBNAGCKAGFCKHFBIDDCBTNJQCRAJCVHAJCBVIUJUKVJUF $.
typecode-cache-Pattern-22 $p #Pattern ( \eq x \unit-sort ) $= ( typecode-cache-Pattern-4 unit-sort-is-symbol symbol-is-pattern eq-is-pattern ) ABCDE $.
sorting-cache-56 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) DABCDEEABCDEABCDABCDEGABCDEABCABCABCDHABCIFF $.
typecode-cache-Pattern-23 $p #Pattern kore-element-var-Val $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-24 $p #Pattern ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) $= ( IMP-sort-16-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-symbol-83-is-pattern kore-equals-is-pattern ) CADBEFG $.
sorting-rearrange-8 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern IMP-sort-16-is-pattern typecode-cache-Pattern-24 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar IMP-axiom-209 rule-imp-transitivity ) CADFCEEADFCEADGADABHBIJCADFCEEADFCAKCADFCEECLMNABOP $.
typecode-cache-Pattern-25 $p #Pattern ( \kore-equals \kore-sort-SortId2 \unit-sort kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) $= ( IMP-sort-16-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-23 IMP-symbol-83-is-pattern kore-equals-is-pattern ) BCDAEFG $.
typecode-cache-Pattern-26 $p #Pattern ( \kore-equals \kore-sort-SortId2 kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) $= ( IMP-sort-16-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 IMP-symbol-83-is-pattern kore-equals-is-pattern ) CBDAEFG $.
substitution-58 $p #Substitution ( \kore-is-sort \unit-sort ) ( \kore-is-sort kore-sort-var-R ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern element-var-is-var typecode-cache-Pattern-0 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-59 $p #Substitution \top \top \unit-sort kore-sort-var-R $= ( top-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-60 $p #Substitution ( \and ( \kore-is-sort \unit-sort ) \top ) ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 element-var-is-var substitution-58 substitution-59 substitution-and ) BCBCDEAFDEAGAHAIJ $.
substitution-61 $p #Substitution \kore-sort-SortId2 \kore-sort-SortId2 \unit-sort kore-sort-var-R $= ( IMP-sort-16-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-62 $p #Substitution kore-element-var-Val kore-element-var-Val \unit-sort kore-sort-var-R $= ( typecode-cache-Pattern-23 unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDEAFG $.
substitution-63 $p #Substitution \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \unit-sort kore-sort-var-R $= ( IMP-symbol-83-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-64 $p #Substitution ( \kore-equals \kore-sort-SortId2 \unit-sort kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-sort-16-is-pattern typecode-cache-Pattern-23 IMP-symbol-83-is-pattern element-var-is-var typecode-cache-Pattern-0 substitution-61 substitution-var-same substitution-62 substitution-63 substitution-kore-equals ) ECDBFGEAIBFGCDAHAJCDAHKABLAMN $.
substitution-65 $p #Substitution ( \kore-is-sort kore-sort-var-x0 ) ( \kore-is-sort kore-sort-var-R ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 element-var-is-var typecode-cache-Pattern-0 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-66 $p #Substitution \top \top kore-sort-var-x0 kore-sort-var-R $= ( top-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-67 $p #Substitution ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ( \and ( \kore-is-sort kore-sort-var-R ) \top ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 element-var-is-var substitution-65 substitution-66 substitution-and ) BCBCDEAFDEAGABHABIJ $.
substitution-68 $p #Substitution \kore-sort-SortId2 \kore-sort-SortId2 kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-16-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-69 $p #Substitution kore-element-var-Val kore-element-var-Val kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-23 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-70 $p #Substitution \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-83-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-71 $p #Substitution ( \kore-equals \kore-sort-SortId2 kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 IMP-sort-16-is-pattern typecode-cache-Pattern-23 IMP-symbol-83-is-pattern element-var-is-var typecode-cache-Pattern-0 substitution-68 substitution-var-same substitution-69 substitution-70 substitution-kore-equals ) ECDBFGEAIBFGCDAHACJCDAHKABCLACMN $.
substitution-72 $p #Substitution ( \kore-exists \kore-sort-SortId2 kore-sort-var-x0 kore-element-var-Val ( \kore-equals \kore-sort-SortId2 kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ) ( \kore-exists \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortId2 kore-sort-var-R kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 IMP-sort-16-is-pattern element-var-is-var typecode-cache-Pattern-26 typecode-cache-Pattern-0 typecode-cache-Pattern-24 substitution-68 substitution-var-same substitution-71 substitution-kore-exists-alt ) ECDBCGEAHABICDBAFACJCDAFKABCLM $.
sorting-cache-57 $p |- ( \imp \top ( \kore-is-sort \unit-sort ) ) $= ( unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 unit-sort-is-kore-sort proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-58 $p |- ( \imp \top ( \and ( \kore-is-sort \unit-sort ) \top ) ) $= ( top-is-pattern unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern sorting-cache-57 top-intro rule-weakening rule-and-intro-alt2-sugar ) ABCDAEAAFGH $.
sorting-rearrange-9 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortId2 \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortId2 \unit-sort kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern kore-sort-var-x0-elementvariable IMP-sort-16-is-pattern typecode-cache-Pattern-0 kore-exists-is-pattern typecode-cache-Pattern-14 and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern element-var-is-var typecode-cache-Pattern-24 typecode-cache-Pattern-25 x-is-element-var typecode-cache-Pattern-26 substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-8 substitution-60 substitution-61 substitution-64 substitution-kore-exists-alt substitution-67 substitution-72 functional-substitution-alt rule-imp-transitivity ) EECDLEKKCDGCDAPAIMEECDLEKEEUCTUDUECDBHGBHBAOAIMCDGCDAPAIMFJGFJAFRAIMEBHLEKCDLEKFJLEKQBFEQUFQUGQUHTBAUICDCDLEKCDGCDAPAIMBHLEKBHGBHBAOAIMBNBUJCDGCDAPAIBHGBHBAOAICDBNCDBNSGCDAPGBHBAOCDABNBUKCDBNSBAULUMUAUBFJFJLEKFJGFJAFRAIMBHLEKBHGBHBAOAIMBNBFUNFJGFJAFRAIBHGBHBAOAIFJBNFJBNSBAFUOUAUBUPUQ $.
typecode-cache-Pattern-27 $p #Pattern kore-element-var-K1 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-28 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-10 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ) ) ) $= ( top-is-pattern typecode-cache-Pattern-28 IMP-symbol-83-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-16-is-pattern sorting-cache-16 sorting-rearrange-9 kore-functional rule-imp-transitivity ) ACEDBGFHBIACEDJKLFDBMBNOP $.
typecode-cache-Pattern-29 $p #Pattern kore-element-var-K0 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-59 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-28 typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-60 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) ) $= ( typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-28 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-61 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) \top ) ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-28 typecode-cache-Pattern-29 IMP-sort-16-is-pattern typecode-cache-Pattern-27 IMP-sort-10-is-pattern and-elim-left-sugar sorting-cache-60 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDLACMNACGBHIEFDDFOPQ $.
typecode-cache-Pattern-30 $p #Pattern ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-29 IMP-sort-16-is-pattern typecode-cache-Pattern-27 IMP-sort-10-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-cache-62 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-29 IMP-sort-16-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-28 rule-imp-transitivity typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-30 sorting-cache-59 typecode-cache-Pattern-27 IMP-sort-10-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-61 ) ACIBEFDHGGAKLBCOACIBEFDHGGACIAKLACIBEFDHGMACPJACIBEFDHGGBEFDCQRDHGACIBEFDHGGBEFDHGBEFDACIBEFDHGSBEFDHGBEFDBEFDBEFDHMBEFDTJJABCUANN $.
typecode-cache-Pattern-31 $p #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-29 typecode-cache-Pattern-27 IMP-symbol-54-is-pattern ) ACBDE $.
typecode-cache-Pattern-32 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-31 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-11 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-28 typecode-cache-Pattern-29 IMP-sort-16-is-pattern in-sort-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-30 IMP-sort-21-is-pattern typecode-cache-Pattern-32 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-62 IMP-axiom-173 rule-imp-transitivity ) ADGCHIJKEEAFLCDMEAFNAFABCDOBPQACDRABCDST $.
typecode-cache-Pattern-33 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-symbol-83-is-pattern typecode-cache-Pattern-27 IMP-symbol-54-is-pattern kore-equals-is-pattern ) DAEBFGCHIJ $.
typecode-cache-Pattern-34 $p #Pattern kore-element-var-x0 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-35 $p #Pattern ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-34 typecode-cache-Pattern-27 IMP-symbol-54-is-pattern ) BCADE $.
typecode-cache-Pattern-36 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-35 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-73 $p #Substitution ( \and ( \in-sort \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) \top ) \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K0 $= ( IMP-symbol-83-is-pattern IMP-sort-16-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-29 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-74 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K0 $= ( typecode-cache-Pattern-0 IMP-symbol-83-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-75 $p #Substitution kore-element-var-Val kore-element-var-Val \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K0 $= ( typecode-cache-Pattern-23 IMP-symbol-83-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-76 $p #Substitution kore-element-var-K1 kore-element-var-K1 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K0 $= ( typecode-cache-Pattern-27 IMP-symbol-83-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-77 $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K0 $= ( IMP-symbol-83-is-pattern element-var-is-var typecode-cache-Pattern-27 typecode-cache-Pattern-29 substitution-var-same substitution-76 IMP-symbol-54-substitution ) ADCCBEAFBECADGABHI $.
substitution-78 $p #Substitution ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K0 $= ( IMP-sort-21-is-pattern IMP-symbol-83-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 element-var-is-var typecode-cache-Pattern-27 IMP-symbol-54-is-pattern typecode-cache-Pattern-31 substitution-disjoint substitution-74 substitution-75 substitution-77 substitution-kore-equals ) EAGBHFDJKEAGBHCDLFCIEFCIMACNBCOCDPQ $.
substitution-79 $p #Substitution ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K0 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 IMP-symbol-83-is-pattern element-var-is-var typecode-cache-Pattern-33 typecode-cache-Pattern-32 substitution-disjoint substitution-74 substitution-78 substitution-kore-exists-alt ) EAFABDIEAFABCDJGBCHEGCHKACLABCDMN $.
substitution-80 $p #Substitution \kore-sort-SortId2 \kore-sort-SortId2 kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-16-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-81 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortId2 ) ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 IMP-sort-16-is-pattern element-var-is-var typecode-cache-Pattern-29 substitution-var-same substitution-80 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-82 $p #Substitution \top \top kore-element-var-x0 kore-element-var-K0 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-83 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortId2 ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortId2 ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 IMP-sort-16-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-29 element-var-is-var substitution-81 substitution-82 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-84 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-85 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-86 $p #Substitution kore-element-var-Val kore-element-var-Val kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-23 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-87 $p #Substitution kore-element-var-K1 kore-element-var-K1 kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-27 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-88 $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-27 typecode-cache-Pattern-29 substitution-var-same substitution-87 IMP-symbol-54-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-89 $p #Substitution ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-35 typecode-cache-Pattern-31 typecode-cache-Pattern-34 element-var-is-var substitution-85 substitution-84 substitution-86 substitution-88 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-90 $p #Substitution ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-36 typecode-cache-Pattern-32 typecode-cache-Pattern-34 element-var-is-var substitution-85 substitution-84 substitution-89 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-91 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-x0 kore-element-var-K1 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp kore-element-var-K0 kore-element-var-K1 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-0 IMP-sort-21-is-pattern kore-exists-is-pattern typecode-cache-Pattern-36 typecode-cache-Pattern-32 typecode-cache-Pattern-34 element-var-is-var substitution-84 substitution-90 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-63 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) $= ( typecode-cache-Pattern-28 top-is-pattern typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern sorting-cache-59 sorting-cache-60 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-rearrange-12 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) ) ) ) $= ( typecode-cache-Pattern-0 kore-element-var-K0-elementvariable IMP-sort-16-is-pattern in-sort-is-pattern IMP-symbol-83-is-pattern top-is-pattern and-is-pattern IMP-sort-21-is-pattern kore-exists-is-pattern typecode-cache-Pattern-28 kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-33 typecode-cache-Pattern-32 typecode-cache-Pattern-29 typecode-cache-Pattern-34 element-var-is-var rule-and-intro-alt2-sugar typecode-cache-Pattern-36 substitution-imp sorting-cache-63 imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-10 sorting-rearrange-11 substitution-73 substitution-74 substitution-79 substitution-kore-valid substitution-83 substitution-91 functional-substitution-alt rule-imp-transitivity ) ACMACMHFGIJJADKADABCPBLNACMACMHFGIJACUDACMHFGIHFGACMHFGUEHFGACMUFUGUHACMIUIUJUAUAHADKADABECQBLNADKADABCPBLNADKADABCOUBBLNACMERFGIJHFGIJOSFGIJBEOABCUKABECULHHFGIJADKADABCPBLNERFGIJADKADABECQBLNETEUMADKADABCPBLADKADABECQBLHETAEUNABECUOUPUCOSOSFGIJADKADABCOUBBLNERFGIJADKADABECQBLNETEOUQABECOURUCUSUT $.

$( adding 1 new metavariable(s) $)
$v kore-sort-var-x1 $.
kore-sort-var-x1-elementvariable $f #ElementVariable kore-sort-var-x1 $.
$d x y z w x0 x1 x2 x3 s0 s1 s2 s3 kore-sort-var-To kore-sort-var-From kore-sort-var-R kore-element-var-VE1 kore-element-var-VE2 kore-element-var-VE0 kore-element-var-VE4 kore-element-var-VE3 kore-element-var-V0 kore-element-var-V1 kore-element-var-V2 kore-sort-var-SortSort kore-element-var-Val kore-element-var-From kore-element-var-K0 kore-element-var-K1 kore-element-var-K2 kore-element-var-K3 kore-element-var-K kore-sort-var-Q0 kore-sort-var-x0 kore-element-var-x1 kore-element-var-VE5 kore-sort-var-S3 kore-sort-var-S2 kore-sort-var-S1 kore-element-var-T kore-element-var-x0 kore-sort-var-x1 $.
sorting-cache-64 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-is-sort kore-sort-var-x0 ) ) $= ( typecode-cache-Pattern-14 kore-is-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) DABCDEEABCDEABCDABCDEGABCDEABCABCABCDHABCIFF $.
typecode-cache-Pattern-37 $p #Pattern kore-element-var-x1 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-rearrange-13 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-14 and-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-37 string-literal-0-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-64 top-intro rule-weakening rule-and-intro-alt2-sugar domain-value-0-functional rule-imp-transitivity ) CADFCEEADFCEADGADGADBHGIJKBLMCADFCEEADFCANCADFCEECOPQABRS $.
typecode-cache-Pattern-38 $p #Pattern kore-sort-var-x1 $= ( element-var-is-var var-is-pattern ) ABC $.
substitution-92 $p #Substitution ( \kore-is-sort \unit-sort ) ( \kore-is-sort kore-sort-var-x0 ) \unit-sort kore-sort-var-x0 $= ( unit-sort-is-symbol symbol-is-pattern element-var-is-var typecode-cache-Pattern-14 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-93 $p #Substitution \top \top \unit-sort kore-sort-var-x0 $= ( top-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-94 $p #Substitution ( \and ( \kore-is-sort \unit-sort ) \top ) ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) \unit-sort kore-sort-var-x0 $= ( unit-sort-is-symbol symbol-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-92 substitution-93 substitution-and ) BCBCDEAFDEAGAHAIJ $.
substitution-95 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt \unit-sort kore-sort-var-x0 $= ( IMP-sort-15-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-96 $p #Substitution kore-element-var-x1 kore-element-var-x1 \unit-sort kore-sort-var-x0 $= ( typecode-cache-Pattern-37 unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDEAFG $.
substitution-97 $p #Substitution ( \kore-equals \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) \unit-sort kore-sort-var-x0 $= ( IMP-sort-15-is-pattern unit-sort-is-symbol symbol-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-37 typecode-cache-Pattern-14 substitution-95 substitution-var-same substitution-96 substitution-disjoint substitution-kore-equals ) CDEBICFGCAJBICFGDEAHAKDEAHLABMCFGDEAHNO $.
substitution-98 $p #Substitution ( \kore-is-sort kore-sort-var-x1 ) ( \kore-is-sort kore-sort-var-x0 ) kore-sort-var-x1 kore-sort-var-x0 $= ( typecode-cache-Pattern-38 element-var-is-var typecode-cache-Pattern-14 substitution-var-same substitution-kore-is-sort ) BCAEBCADBCADFG $.
substitution-99 $p #Substitution \top \top kore-sort-var-x1 kore-sort-var-x0 $= ( top-is-pattern typecode-cache-Pattern-38 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-100 $p #Substitution ( \and ( \kore-is-sort kore-sort-var-x1 ) \top ) ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) kore-sort-var-x1 kore-sort-var-x0 $= ( typecode-cache-Pattern-38 kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-98 substitution-99 substitution-and ) BCBCDEAFDEAGABHABIJ $.
substitution-101 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-38 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-102 $p #Substitution kore-element-var-x1 kore-element-var-x1 kore-sort-var-x1 kore-sort-var-x0 $= ( typecode-cache-Pattern-37 typecode-cache-Pattern-38 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-103 $p #Substitution ( \kore-equals \kore-sort-SortInt kore-sort-var-x1 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ( \kore-equals \kore-sort-SortInt kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-38 string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-37 typecode-cache-Pattern-14 substitution-101 substitution-var-same substitution-102 substitution-disjoint substitution-kore-equals ) DCEBIDFGDAJBIDFGCEAHACKCEAHLABCMDFGCEAHNO $.
sorting-rearrange-14 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-equals \kore-sort-SortInt \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( IMP-sort-15-is-pattern kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-14 kore-sort-var-x1-elementvariable typecode-cache-Pattern-38 top-is-pattern typecode-cache-Pattern-37 string-literal-0-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern and-is-pattern element-var-is-var kore-is-sort-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-exists-alt substitution-kore-valid substitution-imp top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-13 substitution-94 substitution-95 substitution-97 substitution-100 substitution-101 substitution-103 functional-substitution-alt rule-imp-transitivity ) IIDEQIOODEBDEBDEAJBKLMANRIIDEQIOIIUEUAUFUGDECFBCFBCFAJBKLMANRDEBDEBDEAJBKLMANRGHBGHBGHAJBKLMANRICFQIODEQIOGHQIOSCGISUHSUISUJUACAUKDEDEQIODEBDEBDEAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCULDEBDEBDEAJBKLMANCFBCFBCFAJBKLMANDECPDECPTBDEBDEAJBKLMBCFBCFAJBKLMDEACPCUMDECPTCAUNUBUCUDGHGHQIOGHBGHBGHAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCGUOGHBGHBGHAJBKLMANCFBCFBCFAJBKLMANGHCPGHCPTBGHBGHAJBKLMBCFBCFAJBKLMGHACPCGUPGHCPTCAGUQUBUCUDURUS $.
sorting-rearrange-15 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) $= ( top-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern string-literal-0-is-pattern kore-dv-is-pattern typecode-cache-Pattern-37 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-3 sorting-rearrange-14 kore-functional rule-imp-transitivity ) AEFCGCBJDHIKBLAEFCGCMNDDHICBOBPQR $.
typecode-cache-Pattern-39 $p #Pattern kore-element-var-From $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-65 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-39 IMP-sort-15-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-66 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-From \kore-sort-SortInt ) ) $= ( typecode-cache-Pattern-39 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-67 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-39 IMP-sort-15-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-65 sorting-cache-66 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-40 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-39 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-41 $p #Pattern ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-15-is-pattern typecode-cache-Pattern-39 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-16 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-39 IMP-sort-15-is-pattern in-sort-is-pattern typecode-cache-Pattern-40 IMP-sort-10-is-pattern typecode-cache-Pattern-41 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-67 IMP-axiom-20 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-42 $p #Pattern ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-15-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-104 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-From $= ( typecode-cache-Pattern-0 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-105 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-From $= ( typecode-cache-Pattern-23 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-106 $p #Substitution ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-From $= ( IMP-sort-15-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-0 typecode-cache-Pattern-23 kore-inj-is-pattern typecode-cache-Pattern-39 substitution-104 substitution-105 substitution-var-same substitution-kore-inj substitution-kore-equals ) EAJBKDEDFGLEAJBKDECMLDFGCHEDFGCHIACNBCODEDFGDECMDFGCHDDFGCHIEDFGCHIDFGCHPQR $.
substitution-107 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-element-var-x0 kore-element-var-From $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-108 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) ( \in-sort kore-element-var-From \kore-sort-SortInt ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern element-var-is-var typecode-cache-Pattern-39 substitution-var-same substitution-107 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-109 $p #Substitution \top \top kore-element-var-x0 kore-element-var-From $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-110 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortInt ) \top ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-39 element-var-is-var substitution-108 substitution-109 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-111 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-112 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-element-var-x0 kore-element-var-From $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-113 $p #Substitution kore-element-var-Val kore-element-var-Val kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-23 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-114 $p #Substitution ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern IMP-sort-10-is-pattern element-var-is-var typecode-cache-Pattern-39 substitution-107 substitution-112 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-115 $p #Substitution ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-15-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern typecode-cache-Pattern-39 element-var-is-var substitution-112 substitution-111 substitution-113 substitution-114 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-116 $p #Substitution ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-42 typecode-cache-Pattern-41 typecode-cache-Pattern-34 element-var-is-var substitution-112 substitution-111 substitution-115 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-68 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ABCDEABCDABCDEABCABCABCDFABCGHABCDEDIJK $.
sorting-cache-69 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCDBEAFGHIBCDBEJBCDBEAFGHIKBCLM $.
sorting-cache-70 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-69 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHFIBAJACDBEBKLM $.
sorting-rearrange-17 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-element-var-From-elementvariable IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-41 kore-is-sort-is-pattern typecode-cache-Pattern-23 kore-inj-is-pattern kore-equals-is-pattern typecode-cache-Pattern-39 typecode-cache-Pattern-34 typecode-cache-Pattern-42 substitution-disjoint kore-element-var-x1-elementvariable substitution-104 substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-70 rule-and-intro-alt2-sugar sorting-rearrange-15 sorting-rearrange-16 substitution-var-same substitution-in-sort substitution-and substitution-106 substitution-kore-exists-alt substitution-110 substitution-111 substitution-116 functional-substitution-alt rule-imp-transitivity ) ADQIJADQIJCGHCLIJJADFADFADBRCFCGHSTBKOADQIJADQIJCGHCLIJAUIAUJUKCGHADFADABEPBKOADFADFADBRCFCGHSTBKOADFADABMUCBKOADQIJEUACLIJCGHCLIJMUBCLIJUEEMAUEULABEUMCGHCGHCLIJADFADFADBRCFCGHSTBKOEUACLIJADFADABEPBKOENCGHCGHCLIEUACLIENCGHCGHCEUACENCGHENUNCCGHENUDUOICGHENUDUPADFADFADBRCFCGHSTBKADFADABEPBKCGHENAEUFFADFADBRCFCGHSTFADABEPCGHBENFCGHENUDAEUFABEUQURUGUHMUBMUBCLIJADFADABMUCBKOEUACLIJADFADABEPBKOENEMUSADFADABMUCBKADFADABEPBKMUBENAEMUTABEMVAUGUHVBVC $.
sorting-rearrange-18 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortAExp kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern IMP-sort-10-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-23 string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-17 rule-imp-transitivity ) CADFCEEADFCEADGADGADBIHGHJKLMBNOCADFCEEADFCAPCADFCEECQRSABTUA $.
substitution-117 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp \unit-sort kore-sort-var-R $= ( IMP-sort-10-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-118 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-19 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortAExp \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortAExp \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( IMP-sort-10-is-pattern kore-sort-var-R-elementvariable IMP-sort-15-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-117 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-118 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-18 substitution-60 substitution-62 substitution-67 substitution-69 functional-substitution-alt rule-imp-transitivity ) NNEFSNRREFBEFBEFAMDBDIJKOAQTNNEFSNRNNUKUCULUMEFCHBCHBCHAMDBDIJKOAQTEFBEFBEFAMDBDIJKOAQTGLBGLBGLAMDBDIJKOAQTNCHSNREFSNRGLSNRUBCGNUBUNUBUOUBUPUCCAUQEFEFSNREFBEFBEFAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCUREFBEFBEFAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQEFCPEFCPUABEFBEFAMDBDIJKOBCHBCHAMDBDIJKOEFACPCUDEFCPUABEFAMDBDIJKBCHAMDBDIJKEFCPCUDEFCPUACAUSDBDIJKEFCPUEUFUGUHUIGLGLSNRGLBGLBGLAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCGUTGLBGLBGLAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQGLCPGLCPUABGLBGLAMDBDIJKOBCHBCHAMDBDIJKOGLACPCGUJGLCPUABGLAMDBDIJKBCHAMDBDIJKGLCPCGUJGLCPUACAGVADBDIJKGLCPUEUFUGUHUIVBVC $.
sorting-rearrange-20 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-19 sorting-rearrange-19 kore-functional rule-imp-transitivity ) AFGCHCBLDEDIJKMBNAFGCHCOPEDEDIJKCBQBRST $.
sorting-cache-71 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-72 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) ) $= ( typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-73 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-71 sorting-cache-72 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-21 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-27 IMP-sort-10-is-pattern in-sort-is-pattern typecode-cache-Pattern-28 IMP-sort-21-is-pattern typecode-cache-Pattern-33 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-73 sorting-rearrange-12 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-43 $p #Pattern ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-x0 ) ) $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-symbol-83-is-pattern typecode-cache-Pattern-34 IMP-symbol-54-is-pattern kore-equals-is-pattern ) DAEBFGCHIJ $.
substitution-119 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-120 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortAExp ) ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-34 IMP-sort-10-is-pattern element-var-is-var typecode-cache-Pattern-27 substitution-var-same substitution-119 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-121 $p #Substitution \top \top kore-element-var-x0 kore-element-var-K1 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-122 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortAExp ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-34 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-120 substitution-121 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-123 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-124 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-125 $p #Substitution kore-element-var-Val kore-element-var-Val kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-23 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-126 $p #Substitution \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-x0 kore-element-var-K1 $= ( IMP-symbol-83-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-127 $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-x0 ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-34 element-var-is-var IMP-symbol-83-is-pattern typecode-cache-Pattern-27 substitution-126 substitution-var-same IMP-symbol-54-substitution ) ADBCEBCEAFABGBCADHI $.
substitution-128 $p #Substitution ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-symbol-83-is-pattern typecode-cache-Pattern-34 IMP-symbol-54-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-124 substitution-123 substitution-125 substitution-127 substitution-kore-equals ) EAFBGHDIJEAFBGHCKJDICLCDMACDNBCDOCDPQ $.
substitution-129 $p #Substitution ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-43 typecode-cache-Pattern-33 typecode-cache-Pattern-34 element-var-is-var substitution-124 substitution-123 substitution-128 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
substitution-130 $p #Substitution ( \imp ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortAExp ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-x0 ) ) ) ) ) ( \imp ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortAExp ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-K1 ) ) ) ) ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-0 IMP-sort-21-is-pattern kore-exists-is-pattern typecode-cache-Pattern-34 IMP-sort-10-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-43 kore-valid-is-pattern typecode-cache-Pattern-33 element-var-is-var typecode-cache-Pattern-27 substitution-122 substitution-123 substitution-129 substitution-kore-valid substitution-imp ) DHDHIJKLAEFAEABDMBGNCQIJKLAEFAEABCOBGNCPCDRAEFAEABDMBGAEFAEABCOBGDHCPACDSABCDTUAUB $.
sorting-cache-74 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortInt ) ) $= ( kore-is-sort-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-15-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-75 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortAExp ) ) $= ( kore-is-sort-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-10-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-76 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern sorting-cache-74 sorting-cache-75 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-77 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) ) $= ( kore-is-sort-is-pattern IMP-sort-15-is-pattern and-is-pattern typecode-cache-Pattern-0 top-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-76 sorting-cache-69 rule-and-intro-alt2-sugar ) AEBFDCBGBDCHICJAKALM $.
sorting-cache-78 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-15-is-pattern IMP-sort-10-is-pattern kore-is-sort-is-pattern and-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern kore-inj-is-pattern sorting-cache-77 INJ-symbol-0-sorting rule-imp-transitivity ) AIDJEBDCDEBFGBHEBCBFGKCHALBCBFGMN $.
sorting-rearrange-22 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-0 string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-element-var-K1-elementvariable top-is-pattern IMP-sort-21-is-pattern element-var-is-var and-is-pattern in-sort-is-pattern IMP-symbol-83-is-pattern substitution-disjoint typecode-cache-Pattern-23 kore-exists-is-pattern kore-is-sort-is-pattern IMP-symbol-54-is-pattern kore-valid-is-pattern typecode-cache-Pattern-27 kore-equals-is-pattern typecode-cache-Pattern-33 kore-element-var-x0-elementvariable rule-and-intro-alt2-sugar substitution-var-same sorting-cache-68 sorting-cache-78 top-intro rule-weakening typecode-cache-Pattern-43 typecode-cache-Pattern-34 sorting-rearrange-20 sorting-rearrange-21 substitution-in-sort substitution-and IMP-symbol-54-substitution substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-130 functional-substitution-alt rule-imp-transitivity ) AESJMAESJMCDCFGHDNJMMAEKAEKAEBQOCDCFGHTUCBRUAAESJMAESJMCDCFGHDNJMAUHAESJMCDCFGHDNJAUIAESJMJUJUKUFUFCDCFGHAEKAEABIUDBRUAAEKAEKAEBQOCDCFGHTUCBRUAAEKAEABUEULBRUAAESJMIUBDNJMCDCFGHDNJMUEUMDNJMBIUEABUNABIUOCDCFGHCDCFGHDNJMAEKAEKAEBQOCDCFGHTUCBRUAIUBDNJMAEKAEABIUDBRUAILCDCFGHCDCFGHDNJIUBDNJILCDCFGHCDCFGHDIUBDILCDCFGHILUGDCDCFGHILPUPJCDCFGHILPUQAEKAEKAEBQOCDCFGHTUCBRAEKAEABIUDBRCDCFGHILAECDCFGHILPKAEKAEBQOCDCFGHTUCKAEABIUDCDCFGHBILKCDCFGHILPAECDCFGHILPKAEBQOCDCFGHTKAEBQOIUBTCDCFGHILKCDCFGHILPAECDCFGHILPBQCDCFGHILPILCDCFGHOCDCFGHOIUBOCDCFGHILPCDCFGHILUGURUSUTVAVBABIUEVCVDVE $.
sorting-rearrange-23 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortStmt kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern IMP-sort-21-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-23 IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-54-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-22 rule-imp-transitivity ) CADFCEEADFCEADGADGADBIJHKHLMNOPBQRCADFCEEADFCASCADFCEECTUAUBABUCUD $.
substitution-131 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt \unit-sort kore-sort-var-R $= ( IMP-sort-21-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-132 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-24 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortStmt \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortStmt \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-sort-var-R-elementvariable IMP-sort-15-is-pattern IMP-sort-21-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-131 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-132 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-23 substitution-60 substitution-62 substitution-67 substitution-69 functional-substitution-alt rule-imp-transitivity ) QQEFUBQUAUAEFDEFDEFAPICJCKLMNRATUCQQEFUBQUAQQUNUFUOUPEFBHDBHDBHAPICJCKLMNRATUCEFDEFDEFAPICJCKLMNRATUCGODGODGOAPICJCKLMNRATUCQBHUBQUAEFUBQUAGOUBQUAUEBGQUEUQUEURUEUSUFBAUTEFEFUBQUAEFDEFDEFAPICJCKLMNRATUCBHUBQUABHDBHDBHAPICJCKLMNRATUCBSBVAEFDEFDEFAPICJCKLMNRATBHDBHDBHAPICJCKLMNRATEFBSEFBSUDDEFDEFAPICJCKLMNRDBHDBHAPICJCKLMNREFABSBUGEFBSUDDEFAPICJCKLMNDBHAPICJCKLMNEFBSBUGEFBSUDBAVBICJCKLMNEFBSUHUIUJUKULGOGOUBQUAGODGODGOAPICJCKLMNRATUCBHUBQUABHDBHDBHAPICJCKLMNRATUCBSBGVCGODGODGOAPICJCKLMNRATBHDBHDBHAPICJCKLMNRATGOBSGOBSUDDGODGOAPICJCKLMNRDBHDBHAPICJCKLMNRGOABSBGUMGOBSUDDGOAPICJCKLMNDBHAPICJCKLMNGOBSBGUMGOBSUDBAGVDICJCKLMNGOBSUHUIUJUKULVEVF $.
sorting-rearrange-25 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( top-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-21-is-pattern sorting-cache-20 sorting-rearrange-24 kore-functional rule-imp-transitivity ) AEFCGCBNHDIDJKLMOBPAEFCGCQRSHDIDJKLMCBTBUAUBUC $.
sorting-cache-79 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-80 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-T \kore-sort-SortStmt ) ) $= ( typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-81 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-6 IMP-sort-21-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-79 sorting-cache-80 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
substitution-133 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-T $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-134 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) ( \in-sort kore-element-var-T \kore-sort-SortStmt ) kore-element-var-x0 kore-element-var-T $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern element-var-is-var typecode-cache-Pattern-6 substitution-var-same substitution-133 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-135 $p #Substitution \top \top kore-element-var-x0 kore-element-var-T $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-136 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-T \kore-sort-SortStmt ) \top ) kore-element-var-x0 kore-element-var-T $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-134 substitution-135 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-137 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-T $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-138 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-T $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-139 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-T $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-140 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-x0 ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) kore-element-var-x0 kore-element-var-T $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern IMP-sort-18-is-pattern element-var-is-var typecode-cache-Pattern-6 substitution-133 substitution-139 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-141 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-x0 ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-T ) ) kore-element-var-x0 kore-element-var-T $= ( IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-21-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern typecode-cache-Pattern-6 element-var-is-var substitution-139 substitution-138 substitution-140 substitution-kore-inj ) CDECBFGCDECAHGBFAIABJABKABLM $.
substitution-142 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-T ) kore-element-var-x0 kore-element-var-T $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-6 substitution-133 substitution-138 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
sorting-cache-82 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) ) $= ( IMP-symbol-83-is-pattern IMP-sort-16-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp ) BCDAEFGHBCDIBCDAEFGHJKL $.
sorting-cache-83 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) ) $= ( in-sort-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-symbol-83-is-pattern IMP-sort-16-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern sorting-cache-82 sorting-cache-78 rule-and-intro-alt2-sugar ) AEFGHIJBCDCKLMDBANAOP $.
sorting-cache-84 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) $= ( IMP-sort-15-is-pattern IMP-sort-10-is-pattern IMP-symbol-83-is-pattern in-sort-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern IMP-sort-16-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern sorting-cache-83 IMP-symbol-54-sorting rule-imp-transitivity ) AJKLIDMEBCBFGHCEIDBCBFGHNOEAPDBCBFGHQR $.
sorting-cache-85 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern IMP-sort-15-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern in-sort-is-pattern sorting-cache-84 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEGFHFIJKLMNBAOACDBEBPQR $.
sorting-rearrange-26 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortKItem kore-sort-var-R ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-15-is-pattern kore-element-var-T-elementvariable BASIC-K-sort-1-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-6 element-var-is-var kore-element-var-x0-elementvariable top-is-pattern and-is-pattern kore-equals-is-pattern typecode-cache-Pattern-34 in-sort-is-pattern substitution-disjoint kore-valid-is-pattern kore-is-sort-is-pattern substitution-var-same substitution-kore-inj kore-element-var-Val-elementvariable rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp substitution-137 sorting-cache-68 sorting-cache-85 rule-and-intro-alt2-sugar sorting-rearrange-25 typecode-cache-Pattern-21 sorting-cache-81 sorting-rearrange-7 substitution-in-sort substitution-and substitution-136 substitution-138 substitution-141 substitution-142 functional-substitution-alt ) AMUDQRAMUDQRGCHCIJBKFUAQRRAMEAMLEFLGCHCIJBKBBFEGCHCIJBKBSUCAMUDQRAMUDQRGCHCIJBKFUAQRAUMAUNUOGCHCIJBKAMEAMLEFLDNBBFEDNBSUCAMEAMLEFLGCHCIJBKBBFEGCHCIJBKBSUCAMEAMLEFLPTBBFEPTBSUCAMUDQRDNFUAQRGCHCIJBKFUAQRPTFUAQRUGDPAUGUPAMUDQRDNFUAQRRADUQAMEAMLEFLDNBBFEDNBSUCADURADUSUHGCHCIJBKGCHCIJBKFUAQRAMEAMLEFLGCHCIJBKBBFEGCHCIJBKBSUCDNFUAQRAMEAMLEFLDNBBFEDNBSUCDOGCHCIJBKGCHCIJBKFUAQDNFUAQDOGCHCIJBKGCHCIJBKFDNFDOGCHCIJBKDOUEFGCHCIJBKDOUBUTQGCHCIJBKDOUBVAAMEAMLEFLGCHCIJBKBBFEGCHCIJBKBSAMEAMLEFLDNBBFEDNBSGCHCIJBKDOAMGCHCIJBKDOUBEAMLEFLGCHCIJBKBBFEGCHCIJBKBEAMLEFLDNBBFEDNBGCHCIJBKDOEGCHCIJBKDOUBAMGCHCIJBKDOUBLEFLGCHCIJBKBLEFLDNBGCHCIJBKDOLGCHCIJBKDOUBEGCHCIJBKDOUBFLGCHCIJBKFLDNGCHCIJBKDOFGCHCIJBKDOUBLGCHCIJBKDOUBGCHCIJBKDOUEUFUFFEGCHCIJBKFEDNGCHCIJBKDOFGCHCIJBKDOUBEGCHCIJBKDOUBGCHCIJBKDOUEUFUIUJUKPTPTFUAQRAMEAMLEFLPTBBFEPTBSUCDNFUAQRAMEAMLEFLDNBBFEDNBSUCDODPVBAMEAMLEFLPTBBFEPTBSAMEAMLEFLDNBBFEDNBSPTDOADPULEAMLEFLPTBBFEPTBEAMLEFLDNBBFEDNBPTDODPVCADPULDPVDDPVEUIUJUKVFUH $.
substitution-143 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem \unit-sort kore-sort-var-R $= ( BASIC-K-sort-1-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-144 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-sort-var-x0 kore-sort-var-R $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-27 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortKItem \unit-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-15-is-pattern BASIC-K-sort-1-is-pattern kore-sort-var-R-elementvariable IMP-sort-18-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern top-is-pattern typecode-cache-Pattern-0 unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable and-is-pattern typecode-cache-Pattern-14 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-58 typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-cache-56 sorting-rearrange-26 substitution-60 substitution-143 substitution-67 substitution-144 functional-substitution-alt ) LLNOSLQQNOCNOECFEGBHBIJAKAAFCGBHBIJAKAUAUBLLNOSLQLLUGUFUMUHNODMCDMECFEGBHBIJAKAAFCGBHBIJAKAUAUBNOCNOECFEGBHBIJAKAAFCGBHBIJAKAUAUBPRCPRECFEGBHBIJAKAAFCGBHBIJAKAUAUBLDMSLQNOSLQPRSLQUCDPLUCUNUCUOUCUPUFLDMSLQQDMSLQDMCDMECFEGBHBIJAKAAFCGBHBIJAKAUAUBLDMSLQQDMSLDUQLDMSLQQLUGUFUHDURUINONOSLQNOCNOECFEGBHBIJAKAAFCGBHBIJAKAUAUBDMSLQDMCDMECFEGBHBIJAKAAFCGBHBIJAKAUAUBDTDUSNOCNOECFEGBHBIJAKAAFCGBHBIJAKAUADMCDMECFEGBHBIJAKAAFCGBHBIJAKAUANODTNODTUDCNOECFEGBHBIJAKAAFCGBHBIJAKACDMECFEGBHBIJAKAAFCGBHBIJAKANODTDUTNODTUDECFEGBHBIJAKAANODTUEFCGBHBIJAKANODTUEUJUKULPRPRSLQPRCPRECFEGBHBIJAKAAFCGBHBIJAKAUAUBDMSLQDMCDMECFEGBHBIJAKAAFCGBHBIJAKAUAUBDTDPVAPRCPRECFEGBHBIJAKAAFCGBHBIJAKAUADMCDMECFEGBHBIJAKAAFCGBHBIJAKAUAPRDTPRDTUDCPRECFEGBHBIJAKAAFCGBHBIJAKACDMECFEGBHBIJAKAAFCGBHBIJAKAPRDTDPVBPRDTUDECFEGBHBIJAKAAPRDTUEFCGBHBIJAKAPRDTUEUJUKULVCUI $.
sorting-cache-86 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-15-is-pattern IMP-sort-21-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern top-is-pattern and-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-15 sorting-cache-11 sorting-cache-20 INJ-symbol-0-sorting rule-imp-transitivity ) KBCDCLFAGAHIEJBMLBDFAGAHIEJEDMKBCDCLFAGAHIEJBMKBCDCOPNQNBDFAGAHIEJRS $.
equality-elim-0 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-6-is-pattern IMP-sort-15-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-14-is-pattern IMP-sort-18-is-pattern kore-top-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern kore-and-is-pattern string-literal-4-is-pattern kore-element-var-x0-elementvariable IMP-symbol-14-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-92-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-34 kore-rewrites-star-is-pattern top-is-pattern substitution-var-same IMP-symbol-79-substitution IMP-symbol-59-substitution IMP-symbol-92-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid kore-valid-is-pattern sorting-cache-22 sorting-cache-86 sorting-rearrange-27 sorting-cache-25 kore-rewrites-star-reflexivity kore-equals-elim-alt ) DGDIGJCKCLEAMAAIDJCKCLEAMABBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNUDBBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAPUCRSTNUDUMBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAIDJCKCLEAMARSTNUDBBUEPUNUOUPBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNUEUQURBBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNUDBBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAPUCRSTNUDGDIGJCKCLEAMAAPUABGDIGJCKCLEAMAAPUAUBBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAPUCRSTNGDIGJCKCLEAMAAPUABGDIGJCKCLEAMAAPUAUBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNGDIGJCKCLEAMAAPUAUBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTBBBHBHNQFDFOEAPUCRSTGDIGJCKCLEAMAAPUABGDIGJCKCLEAMAAPUAUBBBHBHNGDIGJCKCLEAMAAPUAUBPUAGDIGJCKCLEAMAAQFDFOEAGDIGJCKCLEAMAARSQFDFOEAPUCRSPUAGDIGJCKCLEAMAAQFDFOEAGDIGJCKCLEAMAARQFDFOEAPUCRQGDIGJCKCLEAMAAPUAUBPUAGDIGJCKCLEAMAAFDFOEAGDIGJCKCLEAMAAFDFOEAPUCFDFOEAGDIGJCKCLEAMAAPUAUBGDIGJCKCLEAMAAPUAUFUGUHUIUJUKULBBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAIDJCKCLEAMARSTNUDBBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAPUCRSTNUDIDJCKCLEAMAPUABIDJCKCLEAMAPUAUBBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAIDJCKCLEAMARSTNBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNBBBHBHNQFDFOEAPUCRSTNIDJCKCLEAMAPUABIDJCKCLEAMAPUAUBBBBHBHNQFDFOEAGDIGJCKCLEAMAARSTNIDJCKCLEAMAPUAUBBBBHBHNQFDFOEAIDJCKCLEAMARSTBBBHBHNQFDFOEAPUCRSTIDJCKCLEAMAPUABIDJCKCLEAMAPUAUBBBHBHNIDJCKCLEAMAPUAUBPUAIDJCKCLEAMAQFDFOEAIDJCKCLEAMARSQFDFOEAPUCRSPUAIDJCKCLEAMAQFDFOEAIDJCKCLEAMARQFDFOEAPUCRQIDJCKCLEAMAPUAUBPUAIDJCKCLEAMAFDFOEAIDJCKCLEAMAFDFOEAPUCFDFOEAIDJCKCLEAMAPUAUBIDJCKCLEAMAPUAUFUGUHUIUJUKULUS $.
typecode-cache-Pattern-44 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-symbol-14-is-pattern kore-equals-is-pattern ) CADBEFG $.
sorting-rearrange-28 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern IMP-sort-11-is-pattern typecode-cache-Pattern-44 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar IMP-axiom-117 rule-imp-transitivity ) CADFCEEADFCEADGADABHBIJCADFCEEADFCAKCADFCEECLMNABOP $.
typecode-cache-Pattern-45 $p #Pattern ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) $= ( IMP-sort-11-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-23 IMP-symbol-14-is-pattern kore-equals-is-pattern ) BCDAEFG $.
typecode-cache-Pattern-46 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 IMP-symbol-14-is-pattern kore-equals-is-pattern ) CBDAEFG $.
substitution-145 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap \unit-sort kore-sort-var-R $= ( IMP-sort-11-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-146 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map \unit-sort kore-sort-var-R $= ( IMP-symbol-14-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-147 $p #Substitution ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-sort-11-is-pattern typecode-cache-Pattern-23 IMP-symbol-14-is-pattern element-var-is-var typecode-cache-Pattern-0 substitution-145 substitution-var-same substitution-62 substitution-146 substitution-kore-equals ) ECDBFGEAIBFGCDAHAJCDAHKABLAMN $.
substitution-148 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-149 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-14-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-150 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 IMP-sort-11-is-pattern typecode-cache-Pattern-23 IMP-symbol-14-is-pattern element-var-is-var typecode-cache-Pattern-0 substitution-148 substitution-var-same substitution-69 substitution-149 substitution-kore-equals ) ECDBFGEAIBFGCDAHACJCDAHKABCLACMN $.
substitution-151 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-x0 kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 IMP-sort-11-is-pattern element-var-is-var typecode-cache-Pattern-46 typecode-cache-Pattern-0 typecode-cache-Pattern-44 substitution-148 substitution-var-same substitution-150 substitution-kore-exists-alt ) ECDBCGEAHABICDBAFACJCDAFKABCLM $.
sorting-rearrange-29 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern kore-sort-var-x0-elementvariable IMP-sort-11-is-pattern typecode-cache-Pattern-0 kore-exists-is-pattern typecode-cache-Pattern-14 and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern element-var-is-var typecode-cache-Pattern-44 typecode-cache-Pattern-45 x-is-element-var typecode-cache-Pattern-46 substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-28 substitution-60 substitution-145 substitution-147 substitution-kore-exists-alt substitution-67 substitution-151 functional-substitution-alt rule-imp-transitivity ) EECDLEKKCDGCDAPAIMEECDLEKEEUCTUDUECDBHGBHBAOAIMCDGCDAPAIMFJGFJAFRAIMEBHLEKCDLEKFJLEKQBFEQUFQUGQUHTBAUICDCDLEKCDGCDAPAIMBHLEKBHGBHBAOAIMBNBUJCDGCDAPAIBHGBHBAOAICDBNCDBNSGCDAPGBHBAOCDABNBUKCDBNSBAULUMUAUBFJFJLEKFJGFJAFRAIMBHLEKBHGBHBAOAIMBNBFUNFJGFJAFRAIBHGBHBAOAIFJBNFJBNSBAFUOUAUBUPUQ $.
typecode-cache-Pattern-47 $p #Pattern kore-element-var-V2 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-48 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-47 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-30 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val \kore-symbol-Lbl'Stop'Map ) ) ) $= ( top-is-pattern typecode-cache-Pattern-48 IMP-symbol-14-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-11-is-pattern sorting-cache-9 sorting-rearrange-29 kore-functional rule-imp-transitivity ) ABEDCGFHCIABEDJKLFDCMCNOP $.
typecode-cache-Pattern-49 $p #Pattern kore-element-var-V1 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-87 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-48 typecode-cache-Pattern-47 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-88 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-47 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-48 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-89 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-49 and-is-pattern top-is-pattern typecode-cache-Pattern-48 typecode-cache-Pattern-47 rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-88 top-intro rule-weakening ) ACIBFDEHGGBFDECJDEHGACIBFDEHGGBFDEHGBFDEACIBFDEHGNBFDEHGBFDEBFDEBFDEHLBFDEOKKACIBFDEHGGCJDEHACIBFDEHGGACICJDEACIBFDEHGLACPKACIBFDEHGGHQRMM $.
typecode-cache-Pattern-50 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-49 typecode-cache-Pattern-47 top-is-pattern ) AGHBIEFCJEFKDDD $.
typecode-cache-Pattern-51 $p #Pattern kore-element-var-V0 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-52 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) $= ( typecode-cache-Pattern-49 typecode-cache-Pattern-47 IMP-symbol-59-is-pattern ) ACBDE $.
typecode-cache-Pattern-53 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 typecode-cache-Pattern-52 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-31 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $= ( and-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-48 typecode-cache-Pattern-49 top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-50 typecode-cache-Pattern-53 kore-exists-is-pattern kore-valid-is-pattern typecode-cache-Pattern-47 and-elim-left-sugar sorting-cache-87 sorting-cache-89 rule-and-intro-alt2-sugar IMP-axiom-433 ) ADHCIFGJEEACDNAKFAKABCDOBPQADHCIFGJEEAKLCIFGDRFGJEEADHCIFGJEEADHAKLADHCIFGJESADTMACDUAUBABCDUCM $.
typecode-cache-Pattern-54 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 IMP-symbol-14-is-pattern typecode-cache-Pattern-47 IMP-symbol-59-is-pattern kore-equals-is-pattern ) DAEBFGCHIJ $.
typecode-cache-Pattern-55 $p #Pattern ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) $= ( typecode-cache-Pattern-34 typecode-cache-Pattern-47 IMP-symbol-59-is-pattern ) BCADE $.
typecode-cache-Pattern-56 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 typecode-cache-Pattern-55 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-152 $p #Substitution ( \and ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-symbol-14-is-pattern IMP-sort-11-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-49 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-153 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( typecode-cache-Pattern-0 IMP-symbol-14-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-154 $p #Substitution kore-element-var-V0 kore-element-var-V0 \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( typecode-cache-Pattern-51 IMP-symbol-14-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-155 $p #Substitution kore-element-var-V2 kore-element-var-V2 \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( typecode-cache-Pattern-47 IMP-symbol-14-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-156 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-symbol-14-is-pattern element-var-is-var typecode-cache-Pattern-47 typecode-cache-Pattern-49 substitution-var-same substitution-155 IMP-symbol-59-substitution ) ADCCBEAFBECADGABHI $.
substitution-157 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-sort-11-is-pattern IMP-symbol-14-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 element-var-is-var typecode-cache-Pattern-47 IMP-symbol-59-is-pattern typecode-cache-Pattern-52 substitution-disjoint substitution-153 substitution-154 substitution-156 substitution-kore-equals ) EAGBHFDJKEAGBHCDLFCIEFCIMACNBCOCDPQ $.
substitution-158 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) \kore-symbol-Lbl'Stop'Map kore-element-var-V1 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 IMP-symbol-14-is-pattern element-var-is-var typecode-cache-Pattern-54 typecode-cache-Pattern-53 substitution-disjoint substitution-153 substitution-157 substitution-kore-exists-alt ) EAFABDIEAFABCDJGBCHEGCHKACLABCDMN $.
substitution-159 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-V1 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-160 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern element-var-is-var typecode-cache-Pattern-49 substitution-var-same substitution-159 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-161 $p #Substitution \top \top kore-element-var-x0 kore-element-var-V1 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-162 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-49 element-var-is-var substitution-160 substitution-161 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-163 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-164 $p #Substitution kore-element-var-V0 kore-element-var-V0 kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-51 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-165 $p #Substitution kore-element-var-V2 kore-element-var-V2 kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-47 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-166 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-47 typecode-cache-Pattern-49 substitution-var-same substitution-165 IMP-symbol-59-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-167 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) kore-element-var-x0 kore-element-var-V1 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 typecode-cache-Pattern-55 typecode-cache-Pattern-52 typecode-cache-Pattern-34 element-var-is-var substitution-159 substitution-163 substitution-164 substitution-166 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-168 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-56 typecode-cache-Pattern-53 typecode-cache-Pattern-34 element-var-is-var substitution-159 substitution-163 substitution-167 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-169 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-x0 kore-element-var-V2 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' kore-element-var-V1 kore-element-var-V2 ) ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-0 IMP-sort-11-is-pattern kore-exists-is-pattern typecode-cache-Pattern-56 typecode-cache-Pattern-53 typecode-cache-Pattern-34 element-var-is-var substitution-163 substitution-168 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-90 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( typecode-cache-Pattern-48 top-is-pattern typecode-cache-Pattern-47 IMP-sort-11-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern sorting-cache-87 sorting-cache-88 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-rearrange-32 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) ) ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 kore-element-var-V1-elementvariable in-sort-is-pattern IMP-symbol-14-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern typecode-cache-Pattern-48 kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-54 typecode-cache-Pattern-53 typecode-cache-Pattern-49 typecode-cache-Pattern-34 element-var-is-var rule-and-intro-alt2-sugar typecode-cache-Pattern-56 kore-element-var-Val-elementvariable substitution-imp sorting-cache-90 imp-is-pattern proof-rule-prop-1 IMP-symbol-14-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-30 sorting-rearrange-31 substitution-152 substitution-153 substitution-158 substitution-kore-valid substitution-162 substitution-169 functional-substitution-alt rule-imp-transitivity ) ACLACLHDGIJJAEDAEABCOBKMACLACLHDGIJACUDACLHDGIHDGACLHDGUEHDGACLUFUGUHACLIUIUJTTHAEDAEABFCPBKMAEDAEABCOBKMAEDAEABCNUABKMACLFQDGIJHDGIJNRDGIJUBFNACUBUKABFCULHHDGIJAEDAEABCOBKMFQDGIJAEDAEABFCPBKMFSFUMAEDAEABCOBKAEDAEABFCPBKHFSAFUNABFCUOUPUCNRNRDGIJAEDAEABCNUABKMFQDGIJAEDAEABFCPBKMFSFNUQABFCNURUCUSUT $.
sorting-rearrange-33 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-x0 ) \top ) ) ( \kore-valid kore-sort-var-x0 ( \kore-exists \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-14 and-is-pattern kore-is-sort-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-37 string-literal-4-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-64 top-intro rule-weakening rule-and-intro-alt2-sugar domain-value-4-functional rule-imp-transitivity ) CADFCEEADFCEADGADGADBHGIJKBLMCADFCEEADFCANCADFCEECOPQABRS $.
substitution-170 $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar \unit-sort kore-sort-var-x0 $= ( IMP-sort-14-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-171 $p #Substitution ( \kore-equals \kore-sort-SortKConfigVar \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \unit-sort kore-sort-var-x0 $= ( IMP-sort-14-is-pattern unit-sort-is-symbol symbol-is-pattern string-literal-4-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-37 typecode-cache-Pattern-14 substitution-170 substitution-var-same substitution-96 substitution-disjoint substitution-kore-equals ) CDEBICFGCAJBICFGDEAHAKDEAHLABMCFGDEAHNO $.
substitution-172 $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-38 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-173 $p #Substitution ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x1 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-equals \kore-sort-SortKConfigVar kore-sort-var-x0 kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-sort-var-x1 kore-sort-var-x0 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-38 string-literal-4-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-37 typecode-cache-Pattern-14 substitution-172 substitution-var-same substitution-102 substitution-disjoint substitution-kore-equals ) DCEBIDFGDAJBIDFGCEAHACKCEAHLABCMDFGCEAHNO $.
sorting-rearrange-34 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKConfigVar \unit-sort kore-element-var-x1 ( \kore-equals \kore-sort-SortKConfigVar \unit-sort kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $= ( IMP-sort-14-is-pattern kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-14 kore-sort-var-x1-elementvariable typecode-cache-Pattern-38 top-is-pattern typecode-cache-Pattern-37 string-literal-4-is-pattern kore-dv-is-pattern kore-equals-is-pattern kore-exists-is-pattern and-is-pattern element-var-is-var kore-is-sort-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-exists-alt substitution-kore-valid substitution-imp top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-33 substitution-94 substitution-170 substitution-171 substitution-100 substitution-172 substitution-173 functional-substitution-alt rule-imp-transitivity ) IIDEQIOODEBDEBDEAJBKLMANRIIDEQIOIIUEUAUFUGDECFBCFBCFAJBKLMANRDEBDEBDEAJBKLMANRGHBGHBGHAJBKLMANRICFQIODEQIOGHQIOSCGISUHSUISUJUACAUKDEDEQIODEBDEBDEAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCULDEBDEBDEAJBKLMANCFBCFBCFAJBKLMANDECPDECPTBDEBDEAJBKLMBCFBCFAJBKLMDEACPCUMDECPTCAUNUBUCUDGHGHQIOGHBGHBGHAJBKLMANRCFQIOCFBCFBCFAJBKLMANRCPCGUOGHBGHBGHAJBKLMANCFBCFBCFAJBKLMANGHCPGHCPTBGHBGHAJBKLMBCFBCFAJBKLMGHACPCGUPGHCPTCAGUQUBUCUDURUS $.
sorting-rearrange-35 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) $= ( top-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern string-literal-4-is-pattern kore-dv-is-pattern typecode-cache-Pattern-37 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-12 sorting-rearrange-34 kore-functional rule-imp-transitivity ) AEFCGCBJDHIKBLAEFCGCMNDDHICBOBPQR $.
sorting-cache-91 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-39 IMP-sort-14-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-92 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) ) $= ( typecode-cache-Pattern-39 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-93 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-39 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-91 sorting-cache-92 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-57 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-39 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-58 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-14-is-pattern typecode-cache-Pattern-39 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-36 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-39 IMP-sort-14-is-pattern in-sort-is-pattern typecode-cache-Pattern-57 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-58 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-93 IMP-axiom-436 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-59 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-14-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-174 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) kore-element-var-From $= ( typecode-cache-Pattern-0 IMP-sort-14-is-pattern string-literal-4-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-175 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) kore-element-var-From $= ( typecode-cache-Pattern-23 IMP-sort-14-is-pattern string-literal-4-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-176 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) kore-element-var-From $= ( IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint typecode-cache-Pattern-0 typecode-cache-Pattern-23 kore-inj-is-pattern typecode-cache-Pattern-39 substitution-174 substitution-175 substitution-var-same substitution-kore-inj substitution-kore-equals ) EAJBKDEDFGLEAJBKDECMLDFGCHEDFGCHIACNBCODEDFGDECMDFGCHDDFGCHIEDFGCHIDFGCHPQR $.
substitution-177 $p #Substitution \kore-sort-SortKConfigVar \kore-sort-SortKConfigVar kore-element-var-x0 kore-element-var-From $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-178 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKConfigVar ) ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-14-is-pattern element-var-is-var typecode-cache-Pattern-39 substitution-var-same substitution-177 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-179 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKConfigVar ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortKConfigVar ) \top ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-14-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-39 element-var-is-var substitution-178 substitution-109 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-180 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-181 $p #Substitution ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-39 substitution-177 substitution-180 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-182 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-14-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern typecode-cache-Pattern-39 element-var-is-var substitution-180 substitution-111 substitution-113 substitution-181 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-183 $p #Substitution ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-59 typecode-cache-Pattern-58 typecode-cache-Pattern-34 element-var-is-var substitution-180 substitution-111 substitution-182 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-94 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-14-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCDBEAFGHIBCDBEJBCDBEAFGHIKBCLM $.
sorting-cache-95 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern IMP-sort-14-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-94 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHFIBAJACDBEBKLM $.
sorting-rearrange-37 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) ) $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-0 kore-element-var-From-elementvariable BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-58 kore-is-sort-is-pattern typecode-cache-Pattern-23 kore-inj-is-pattern kore-equals-is-pattern typecode-cache-Pattern-39 typecode-cache-Pattern-34 typecode-cache-Pattern-59 substitution-disjoint kore-element-var-x1-elementvariable substitution-174 substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-95 rule-and-intro-alt2-sugar sorting-rearrange-35 sorting-rearrange-36 substitution-var-same substitution-in-sort substitution-and substitution-176 substitution-kore-exists-alt substitution-179 substitution-111 substitution-183 functional-substitution-alt rule-imp-transitivity ) ADQIJADQIJCGHCLIJJADFADFADBRCFCGHSTBKOADQIJADQIJCGHCLIJAUIAUJUKCGHADFADABEPBKOADFADFADBRCFCGHSTBKOADFADABMUCBKOADQIJEUACLIJCGHCLIJMUBCLIJUEEMAUEULABEUMCGHCGHCLIJADFADFADBRCFCGHSTBKOEUACLIJADFADABEPBKOENCGHCGHCLIEUACLIENCGHCGHCEUACENCGHENUNCCGHENUDUOICGHENUDUPADFADFADBRCFCGHSTBKADFADABEPBKCGHENAEUFFADFADBRCFCGHSTFADABEPCGHBENFCGHENUDAEUFABEUQURUGUHMUBMUBCLIJADFADABMUCBKOEUACLIJADFADABEPBKOENEMUSADFADABMUCBKADFADABEPBKMUBENAEMUTABEMVAUGUHVBVC $.
sorting-rearrange-38 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-23 string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-37 rule-imp-transitivity ) CADFCEEADFCEADGADGADBIHGHJKLMBNOCADFCEEADFCAPCADFCEECQRSABTUA $.
sorting-rearrange-39 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-sort-var-R-elementvariable IMP-sort-14-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-143 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-144 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-38 substitution-60 substitution-62 substitution-67 substitution-69 functional-substitution-alt rule-imp-transitivity ) NNEFSNRREFBEFBEFAMDBDIJKOAQTNNEFSNRNNUKUCULUMEFCHBCHBCHAMDBDIJKOAQTEFBEFBEFAMDBDIJKOAQTGLBGLBGLAMDBDIJKOAQTNCHSNREFSNRGLSNRUBCGNUBUNUBUOUBUPUCCAUQEFEFSNREFBEFBEFAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCUREFBEFBEFAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQEFCPEFCPUABEFBEFAMDBDIJKOBCHBCHAMDBDIJKOEFACPCUDEFCPUABEFAMDBDIJKBCHAMDBDIJKEFCPCUDEFCPUACAUSDBDIJKEFCPUEUFUGUHUIGLGLSNRGLBGLBGLAMDBDIJKOAQTCHSNRCHBCHBCHAMDBDIJKOAQTCPCGUTGLBGLBGLAMDBDIJKOAQCHBCHBCHAMDBDIJKOAQGLCPGLCPUABGLBGLAMDBDIJKOBCHBCHAMDBDIJKOGLACPCGUJGLCPUABGLAMDBDIJKBCHAMDBDIJKGLCPCGUJGLCPUACAGVADBDIJKGLCPUEUFUGUHUIVBVC $.
typecode-cache-Pattern-60 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-27 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-40 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ) ) $= ( IMP-sort-14-is-pattern top-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-60 string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-13 sorting-rearrange-39 kore-functional rule-imp-transitivity ) ACGEBKDFDHIJLBMACGENOFDFDHIJEBPBQRS $.
sorting-cache-96 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-60 typecode-cache-Pattern-27 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-97 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ) $= ( typecode-cache-Pattern-27 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-60 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-98 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-29 and-is-pattern top-is-pattern typecode-cache-Pattern-60 typecode-cache-Pattern-27 rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-97 top-intro rule-weakening ) ACIBFDEHGGBFDECJDEHGACIBFDEHGGBFDEHGBFDEACIBFDEHGNBFDEHGBFDEBFDEBFDEHLBFDEOKKACIBFDEHGGCJDEHACIBFDEHGGACICJDEACIBFDEHGLACPKACIBFDEHGGHQRMM $.
typecode-cache-Pattern-61 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( and-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-29 typecode-cache-Pattern-27 top-is-pattern ) AGHBIEFCJEFKDDD $.
typecode-cache-Pattern-62 $p #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-29 typecode-cache-Pattern-27 IMP-symbol-79-is-pattern ) ACBDE $.
typecode-cache-Pattern-63 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-62 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-41 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) ) $= ( and-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-60 typecode-cache-Pattern-29 top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-61 IMP-sort-11-is-pattern typecode-cache-Pattern-63 kore-exists-is-pattern kore-valid-is-pattern typecode-cache-Pattern-27 and-elim-left-sugar sorting-cache-96 sorting-cache-98 rule-and-intro-alt2-sugar IMP-axiom-205 ) ADHCIFGJEEACDNAKOAKABCDPBQRADHCIFGJEEAKLCIFGDSFGJEEADHCIFGJEEADHAKLADHCIFGJETADUAMACDUBUCABCDUDM $.
typecode-cache-Pattern-64 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) $= ( IMP-sort-14-is-pattern IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-27 IMP-symbol-79-is-pattern kore-equals-is-pattern ) EAFBGDHDIJKCLMN $.
typecode-cache-Pattern-65 $p #Pattern ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) $= ( typecode-cache-Pattern-34 typecode-cache-Pattern-27 IMP-symbol-79-is-pattern ) BCADE $.
typecode-cache-Pattern-66 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-65 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-184 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K0 $= ( IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-11-is-pattern typecode-cache-Pattern-0 substitution-disjoint typecode-cache-Pattern-27 typecode-cache-Pattern-23 typecode-cache-Pattern-64 typecode-cache-Pattern-63 IMP-symbol-79-is-pattern typecode-cache-Pattern-62 typecode-cache-Pattern-29 substitution-var-same IMP-symbol-79-substitution substitution-kore-equals substitution-kore-exists-alt ) KALABDPKALABCDQEFEGHIBCJKEFEGHICJMALEFEGHICJMKALBOEFEGHIDNRKALBOCDSEFEGHICJKEFEGHICJMALEFEGHICJMBOEFEGHICJMCJEFEGHIEFEGHIDNCTDNEFEGHICJUADNEFEGHICJMUBUCUD $.
substitution-185 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-K0 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-186 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-29 substitution-var-same substitution-185 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-187 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortKItem ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-29 element-var-is-var substitution-186 substitution-82 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-188 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-189 $p #Substitution ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-27 typecode-cache-Pattern-29 substitution-var-same substitution-87 IMP-symbol-79-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-190 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-65 typecode-cache-Pattern-62 typecode-cache-Pattern-34 element-var-is-var substitution-188 substitution-84 substitution-86 substitution-189 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-191 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-66 typecode-cache-Pattern-63 typecode-cache-Pattern-34 element-var-is-var substitution-188 substitution-84 substitution-190 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-192 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-x0 kore-element-var-K1 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' kore-element-var-K0 kore-element-var-K1 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-0 IMP-sort-11-is-pattern kore-exists-is-pattern typecode-cache-Pattern-66 typecode-cache-Pattern-63 typecode-cache-Pattern-34 element-var-is-var substitution-84 substitution-191 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-99 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( typecode-cache-Pattern-60 top-is-pattern typecode-cache-Pattern-27 BASIC-K-sort-1-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern sorting-cache-96 sorting-cache-97 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-100 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-60 IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-14-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-101 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-14-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-60 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-100 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-rearrange-42 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) ) ) ) $= ( IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-element-var-K0-elementvariable typecode-cache-Pattern-0 string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern top-is-pattern in-sort-is-pattern and-is-pattern IMP-sort-11-is-pattern kore-exists-is-pattern element-var-is-var kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-60 typecode-cache-Pattern-29 typecode-cache-Pattern-64 typecode-cache-Pattern-63 typecode-cache-Pattern-34 substitution-disjoint rule-and-intro-alt2-sugar typecode-cache-Pattern-66 substitution-imp sorting-cache-99 sorting-cache-101 top-intro rule-weakening sorting-rearrange-40 sorting-rearrange-41 substitution-var-same substitution-in-sort substitution-and substitution-184 substitution-kore-valid substitution-187 substitution-192 functional-substitution-alt rule-imp-transitivity ) ACSACSDEDHIJELKMMAGNAGABCUABOQACSACSDEDHIJELKMACUHACSDEDHIJELKACUIACSKUJUKUEUEDEDHIJAGNAGABFCUBBOQAGNAGABCUABOQAGNAGABCRUFBOQACSFTELKMDEDHIJELKMRUCELKMBFRABCULABFCUMDEDHIJDEDHIJELKMAGNAGABCUABOQFTELKMAGNAGABFCUBBOQFPDEDHIJDEDHIJELKFTELKFPDEDHIJDEDHIJEFTEFPDEDHIJFPUNEDEDHIJFPUDUOKDEDHIJFPUDUPAGNAGABCUABOAGNAGABFCUBBODEDHIJFPAGDEDHIJFPUDABFCUQURUGRUCRUCELKMAGNAGABCRUFBOQFTELKMAGNAGABFCUBBOQFPFRUSABFCRUTUGVAVB $.
sorting-cache-102 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-39 IMP-sort-21-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-103 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \in-sort kore-element-var-From \kore-sort-SortStmt ) ) $= ( typecode-cache-Pattern-39 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-104 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-39 IMP-sort-21-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-102 sorting-cache-103 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-67 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-39 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-68 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-From ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-21-is-pattern typecode-cache-Pattern-39 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-43 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-39 IMP-sort-21-is-pattern in-sort-is-pattern typecode-cache-Pattern-67 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-68 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-104 IMP-axiom-28 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-69 $p #Pattern ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-x0 ) ) $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-21-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-193 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-From $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-194 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) ( \in-sort kore-element-var-From \kore-sort-SortStmt ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern element-var-is-var typecode-cache-Pattern-39 substitution-var-same substitution-193 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-195 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortStmt ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-39 element-var-is-var substitution-194 substitution-109 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-196 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-39 substitution-193 substitution-180 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-197 $p #Substitution ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-21-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern typecode-cache-Pattern-39 element-var-is-var substitution-180 substitution-111 substitution-113 substitution-196 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-198 $p #Substitution ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-69 typecode-cache-Pattern-68 typecode-cache-Pattern-34 element-var-is-var substitution-180 substitution-111 substitution-197 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-rearrange-44 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-inj-is-pattern kore-element-var-From-elementvariable IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-21-is-pattern element-var-is-var top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable substitution-disjoint typecode-cache-Pattern-23 kore-valid-is-pattern typecode-cache-Pattern-39 typecode-cache-Pattern-68 kore-is-sort-is-pattern kore-equals-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-69 substitution-var-same substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-85 rule-and-intro-alt2-sugar sorting-rearrange-25 sorting-rearrange-43 substitution-in-sort substitution-and substitution-kore-inj substitution-kore-equals substitution-kore-exists-alt substitution-195 substitution-111 substitution-198 functional-substitution-alt rule-imp-transitivity ) ADUEOPADUEOPGCHCIJEKMROPPADLADLADBUAMLGCHCIJEKEUFBQUBADUEOPADUEOPGCHCIJEKMROPAULAUMUNGCHCIJEKADLADABFUDBQUBADLADLADBUAMLGCHCIJEKEUFBQUBADLADABSUHBQUBADUEOPFUCMROPGCHCIJEKMROPSUGMROPBFSABUOABFUPGCHCIJEKGCHCIJEKMROPADLADLADBUAMLGCHCIJEKEUFBQUBFUCMROPADLADABFUDBQUBFNGCHCIJEKGCHCIJEKMROFUCMROFNGCHCIJEKGCHCIJEKMFUCMFNGCHCIJEKFNUIMGCHCIJEKFNTUQOGCHCIJEKFNTURADLADLADBUAMLGCHCIJEKEUFBQADLADABFUDBQGCHCIJEKFNADGCHCIJEKFNTLADLADBUAMLGCHCIJEKEUFLADABFUDGCHCIJEKBFNLGCHCIJEKFNTADGCHCIJEKFNTLADBUAMLGCHCIJEKELADBUAMLFUCEGCHCIJEKFNLGCHCIJEKFNTADGCHCIJEKFNTBUAGCHCIJEKFNTMLGCHCIJEKMLFUCGCHCIJEKFNMGCHCIJEKFNTLGCHCIJEKFNTGCHCIJEKFNUIUSUTVAUJUKSUGSUGMROPADLADABSUHBQUBFUCMROPADLADABFUDBQUBFNFSVBADLADABSUHBQADLADABFUDBQSUGFNAFSVCABFSVDUJUKVEVF $.
sorting-rearrange-45 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortKItem kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern typecode-cache-Pattern-23 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-44 rule-imp-transitivity ) CADFCEEADFCEADGADGADBJKGLHMHNOIPIQBRSCADFCEEADFCATCADFCEECUAUBUCABUDUE $.
sorting-rearrange-46 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortKItem \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( BASIC-K-sort-1-is-pattern kore-sort-var-R-elementvariable IMP-sort-15-is-pattern kore-inj-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-143 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-144 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-45 substitution-60 substitution-62 substitution-67 substitution-69 functional-substitution-alt rule-imp-transitivity ) RRFGUCRUBUBFGBFGBFGAQJBKDLDMNEOESAUAUDRRFGUCRUBRRUOUGUPUQFGCIBCIBCIAQJBKDLDMNEOESAUAUDFGBFGBFGAQJBKDLDMNEOESAUAUDHPBHPBHPAQJBKDLDMNEOESAUAUDRCIUCRUBFGUCRUBHPUCRUBUFCHRUFURUFUSUFUTUGCAVAFGFGUCRUBFGBFGBFGAQJBKDLDMNEOESAUAUDCIUCRUBCIBCIBCIAQJBKDLDMNEOESAUAUDCTCVBFGBFGBFGAQJBKDLDMNEOESAUACIBCIBCIAQJBKDLDMNEOESAUAFGCTFGCTUEBFGBFGAQJBKDLDMNEOESBCIBCIAQJBKDLDMNEOESFGACTCUHFGCTUEBFGAQJBKDLDMNEOEBCIAQJBKDLDMNEOEFGCTCUHFGCTUECAVCJBKDLDMNEOEFGCTUIUJUKULUMHPHPUCRUBHPBHPBHPAQJBKDLDMNEOESAUAUDCIUCRUBCIBCIBCIAQJBKDLDMNEOESAUAUDCTCHVDHPBHPBHPAQJBKDLDMNEOESAUACIBCIBCIAQJBKDLDMNEOESAUAHPCTHPCTUEBHPBHPAQJBKDLDMNEOESBCIBCIAQJBKDLDMNEOESHPACTCHUNHPCTUEBHPAQJBKDLDMNEOEBCIAQJBKDLDMNEOEHPCTCHUNHPCTUECAHVEJBKDLDMNEOEHPCTUIUJUKULUMVFVG $.
sorting-rearrange-47 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( top-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-86 sorting-rearrange-46 kore-functional rule-imp-transitivity ) AGHCICBPJFKDLDMNEOEQBRAGHCICSTFJFKDLDMNEOECBUABUBUCUD $.
sorting-cache-105 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-27 BASIC-K-sort-1-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-106 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) ) $= ( typecode-cache-Pattern-27 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-107 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-27 BASIC-K-sort-1-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-105 sorting-cache-106 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-70 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-x0 ) ) $= ( IMP-sort-14-is-pattern IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-34 IMP-symbol-79-is-pattern kore-equals-is-pattern ) EAFBGDHDIJKCLMN $.
substitution-199 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-K1 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-200 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-34 BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-27 substitution-var-same substitution-199 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-201 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) \top ) ( \and ( \in-sort kore-element-var-K1 \kore-sort-SortKItem ) \top ) kore-element-var-x0 kore-element-var-K1 $= ( typecode-cache-Pattern-34 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-27 element-var-is-var substitution-200 substitution-121 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-202 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-203 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) kore-element-var-K1 ) ) kore-element-var-x0 kore-element-var-K1 $= ( IMP-sort-14-is-pattern typecode-cache-Pattern-34 BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern element-var-is-var IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-symbol-79-is-pattern typecode-cache-Pattern-27 substitution-202 substitution-123 substitution-125 substitution-disjoint substitution-var-same IMP-symbol-79-substitution substitution-kore-equals ) LAMBNEGEHIJDFOLAMBNEGEHIJCPODFCKCDQACDRBCDSCKDFEGEHIJDFEGEHIJCPEGEHIJDFCKTDFCKUAUBUC $.
sorting-cache-108 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortStmt ) ) $= ( kore-is-sort-is-pattern IMP-sort-21-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-21-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-109 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortKItem ) ) $= ( kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 BASIC-K-sort-1-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-110 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-108 sorting-cache-109 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-111 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) ) $= ( kore-is-sort-is-pattern and-is-pattern IMP-sort-21-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 top-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern sorting-cache-110 sorting-cache-84 rule-and-intro-alt2-sugar ) AFBGCDBHBCIEJEKLMNDOAPAQR $.
sorting-cache-112 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-15-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern and-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern sorting-cache-111 INJ-symbol-0-sorting rule-imp-transitivity ) ANFOGCFDFGHBIBJKELCMGCDHBIBJKELEDMAPCDHBIBJKELQR $.
sorting-rearrange-48 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-15-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 kore-element-var-K1-elementvariable kore-dv-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-sort-11-is-pattern top-is-pattern element-var-is-var and-is-pattern IMP-sort-14-is-pattern kore-element-var-x0-elementvariable in-sort-is-pattern kore-exists-is-pattern string-literal-4-is-pattern kore-valid-is-pattern substitution-disjoint kore-is-sort-is-pattern typecode-cache-Pattern-23 typecode-cache-Pattern-64 typecode-cache-Pattern-27 IMP-symbol-79-is-pattern kore-equals-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-70 rule-and-intro-alt2-sugar rule-imp-transitivity substitution-var-same substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-123 sorting-cache-68 sorting-cache-112 top-intro rule-weakening sorting-rearrange-47 typecode-cache-Pattern-60 sorting-cache-107 sorting-rearrange-42 substitution-in-sort substitution-and IMP-symbol-79-substitution substitution-kore-equals substitution-201 substitution-202 substitution-203 functional-substitution-alt ) AFUEOQAFUEOQIEJDKDLHCMCETOQQAFNAFNAFBUFRERUBHCIEJDKDLHCMCUIUJBUAUCAFUEOQAFUEOQIEJDKDLHCMCETOQAUTAFUEOQIEJDKDLHCMCETOAVAAFUEOQOVBVCUMUMIEJDKDLHCMCAFNAFABGUGBUAUCAFNAFNAFBUFRERUBHCIEJDKDLHCMCUIUJBUAUCAFNAFABSULBUAUCAFUEOQGUHETOQIEJDKDLHCMCETOQSUKETOQBGSABVDAFUEOQGUHETOQQAGVEAFNAFABGUGBUAUCAGVFABGVGUNIEJDKDLHCMCIEJDKDLHCMCETOQAFNAFNAFBUFRERUBHCIEJDKDLHCMCUIUJBUAUCGUHETOQAFNAFABGUGBUAUCGPIEJDKDLHCMCIEJDKDLHCMCETOGUHETOGPIEJDKDLHCMCIEJDKDLHCMCEGUHEGPIEJDKDLHCMCGPUOEIEJDKDLHCMCGPUDVHOIEJDKDLHCMCGPUDVIAFNAFNAFBUFRERUBHCIEJDKDLHCMCUIUJBUAAFNAFABGUGBUAIEJDKDLHCMCGPAFIEJDKDLHCMCGPUDNAFNAFBUFRERUBHCIEJDKDLHCMCUIUJNAFABGUGIEJDKDLHCMCBGPNIEJDKDLHCMCGPUDAFIEJDKDLHCMCGPUDNAFBUFRERUBHCIEJDKDLHCMCUINAFBUFRERUBHCGUHUIIEJDKDLHCMCGPNIEJDKDLHCMCGPUDAFIEJDKDLHCMCGPUDBUFIEJDKDLHCMCGPUDGPIEJDKDLHCMCRERUBHCIEJDKDLHCMCRERUBHCGUHRERUBHCIEJDKDLHCMCGPUDIEJDKDLHCMCGPUOVJVKUPUQURSUKSUKETOQAFNAFABSULBUAUCGUHETOQAFNAFABGUGBUAUCGPGSVLAFNAFABSULBUAAFNAFABGUGBUASUKGPAGSUSNAFABSULNAFABGUGSUKBGPGSVMAGSUSABGSVNUPUQURVOUN $.
sorting-rearrange-49 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-11-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-23 string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-48 rule-imp-transitivity ) CADFCEEADFCEADHADHADBMIJINKGOJPLQLRKGSGTUABUBUCCADFCEEADFCAUDCADFCEECUEUFUGABUHUI $.
sorting-rearrange-50 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) $= ( kore-inj-is-pattern kore-sort-var-R-elementvariable IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-sort-11-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-145 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-148 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-49 substitution-60 substitution-62 substitution-67 substitution-69 functional-substitution-alt rule-imp-transitivity ) UBUBIJUGUBUFUFIJHIJHIJAUADEDMFBNEOGPGQFBRBSUCAUEUHUBUBIJUGUBUFUBUBUSUKUTVAIJCLHCLHCLAUADEDMFBNEOGPGQFBRBSUCAUEUHIJHIJHIJAUADEDMFBNEOGPGQFBRBSUCAUEUHKTHKTHKTAUADEDMFBNEOGPGQFBRBSUCAUEUHUBCLUGUBUFIJUGUBUFKTUGUBUFUJCKUBUJVBUJVCUJVDUKCAVEIJIJUGUBUFIJHIJHIJAUADEDMFBNEOGPGQFBRBSUCAUEUHCLUGUBUFCLHCLHCLAUADEDMFBNEOGPGQFBRBSUCAUEUHCUDCVFIJHIJHIJAUADEDMFBNEOGPGQFBRBSUCAUECLHCLHCLAUADEDMFBNEOGPGQFBRBSUCAUEIJCUDIJCUDUIHIJHIJAUADEDMFBNEOGPGQFBRBSUCHCLHCLAUADEDMFBNEOGPGQFBRBSUCIJACUDCULIJCUDUIHIJAUADEDMFBNEOGPGQFBRBSHCLAUADEDMFBNEOGPGQFBRBSIJCUDCULIJCUDUICAVGDEDMFBNEOGPGQFBRBSIJCUDUMUNUOUPUQKTKTUGUBUFKTHKTHKTAUADEDMFBNEOGPGQFBRBSUCAUEUHCLUGUBUFCLHCLHCLAUADEDMFBNEOGPGQFBRBSUCAUEUHCUDCKVHKTHKTHKTAUADEDMFBNEOGPGQFBRBSUCAUECLHCLHCLAUADEDMFBNEOGPGQFBRBSUCAUEKTCUDKTCUDUIHKTHKTAUADEDMFBNEOGPGQFBRBSUCHCLHCLAUADEDMFBNEOGPGQFBRBSUCKTACUDCKURKTCUDUIHKTAUADEDMFBNEOGPGQFBRBSHCLAUADEDMFBNEOGPGQFBRBSKTCUDCKURKTCUDUICAKVIDEDMFBNEOGPGQFBRBSKTCUDUMUNUOUPUQVJVK $.
sorting-cache-113 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern in-sort-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern top-is-pattern and-is-pattern IMP-symbol-79-is-pattern IMP-sort-11-is-pattern sorting-cache-13 sorting-cache-86 rule-and-intro-alt2-sugar IMP-symbol-79-sorting rule-imp-transitivity ) MCACGDBAFHAIEJEKDBLBAFNCACGDBHAIEJEKDBLBOPFMCACGDBAFHAIEJEKDBLBAFQRSCACGDBHAIEJEKDBLBTUA $.
sorting-rearrange-51 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( kore-inj-is-pattern top-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-11-is-pattern sorting-cache-113 sorting-rearrange-50 kore-functional rule-imp-transitivity ) AIJDKDBSEFELGCMFNHOHPGCQCRTBUAAIJDKDUBUCUDEFELGCMFNHOHPGCQCRDBUEBUFUGUH $.
sorting-cache-114 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-47 IMP-sort-11-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-115 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-47 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-116 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-47 IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-114 sorting-cache-115 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
sorting-rearrange-52 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern IMP-sort-11-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-47 in-sort-is-pattern typecode-cache-Pattern-48 typecode-cache-Pattern-54 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-116 sorting-rearrange-32 rule-imp-transitivity ) ADHFECIGJFEEACKADGADABCLBMNACOABCPQ $.
typecode-cache-Pattern-71 $p #Pattern ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 IMP-symbol-14-is-pattern typecode-cache-Pattern-34 IMP-symbol-59-is-pattern kore-equals-is-pattern ) DAEBFGCHIJ $.
substitution-204 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-V2 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-205 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern element-var-is-var typecode-cache-Pattern-47 substitution-var-same substitution-204 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-206 $p #Substitution \top \top kore-element-var-x0 kore-element-var-V2 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-207 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-47 element-var-is-var substitution-205 substitution-206 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-208 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-209 $p #Substitution kore-element-var-V0 kore-element-var-V0 kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-51 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-210 $p #Substitution \kore-symbol-Lbl'Stop'Map \kore-symbol-Lbl'Stop'Map kore-element-var-x0 kore-element-var-V2 $= ( IMP-symbol-14-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-211 $p #Substitution ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-34 element-var-is-var IMP-symbol-14-is-pattern typecode-cache-Pattern-47 substitution-210 substitution-var-same IMP-symbol-59-substitution ) ADBCEBCEAFABGBCADHI $.
substitution-212 $p #Substitution ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) kore-element-var-x0 kore-element-var-V2 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 IMP-symbol-14-is-pattern typecode-cache-Pattern-34 IMP-symbol-59-is-pattern typecode-cache-Pattern-47 element-var-is-var substitution-204 substitution-208 substitution-209 substitution-211 substitution-kore-equals ) EAFBGHDIJEAFBGHCKJDICLCDMACDNBCDOCDPQ $.
substitution-213 $p #Substitution ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map kore-element-var-V2 ) ) ) kore-element-var-x0 kore-element-var-V2 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-71 typecode-cache-Pattern-54 typecode-cache-Pattern-34 element-var-is-var substitution-204 substitution-208 substitution-212 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-cache-117 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortKConfigVar ) ) $= ( kore-is-sort-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-14-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-118 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-117 sorting-cache-109 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-119 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) ) $= ( kore-is-sort-is-pattern IMP-sort-14-is-pattern and-is-pattern typecode-cache-Pattern-0 top-is-pattern BASIC-K-sort-1-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern sorting-cache-118 sorting-cache-94 rule-and-intro-alt2-sugar ) AEBFDCBGBDCHICJAKALM $.
sorting-cache-120 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-is-sort-is-pattern and-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern kore-inj-is-pattern sorting-cache-119 INJ-symbol-0-sorting rule-imp-transitivity ) AIDJEBDCDEBFGBHEBCBFGKCHALBCBFGMN $.
sorting-cache-121 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern in-sort-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern IMP-symbol-79-is-pattern IMP-sort-11-is-pattern sorting-cache-120 sorting-cache-112 rule-and-intro-alt2-sugar IMP-symbol-79-sorting rule-imp-transitivity ) AOPQNDBDHECBGIBJFKFLECMCBGNDBDHECIBJFKFLECMCRSGAOPQNDBDHECBGIBJFKFLECMCBGATAUAUBDBDHECIBJFKFLECMCUCUD $.
sorting-rearrange-53 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 IMP-sort-11-is-pattern kore-element-var-V2-elementvariable string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern top-is-pattern element-var-is-var and-is-pattern in-sort-is-pattern kore-exists-is-pattern kore-element-var-x0-elementvariable IMP-symbol-14-is-pattern substitution-disjoint typecode-cache-Pattern-51 kore-valid-is-pattern kore-is-sort-is-pattern IMP-symbol-59-is-pattern typecode-cache-Pattern-47 typecode-cache-Pattern-54 kore-equals-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-71 rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable substitution-var-same substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-121 top-intro rule-weakening sorting-rearrange-51 sorting-rearrange-52 substitution-in-sort substitution-and IMP-symbol-59-substitution substitution-kore-equals substitution-kore-exists-alt substitution-207 substitution-208 substitution-213 functional-substitution-alt rule-imp-transitivity ) AHUHRTAHUHRTDEDKFCLEMGNGOFCPCQIUARTTAHIAHIAHBUFUDDEDKFCLEMGNGOFCPCQUIULBUBUGAHUHRTAHUHRTDEDKFCLEMGNGOFCPCQIUARTAUTAHUHRTDEDKFCLEMGNGOFCPCQIUARAVAAHUHRTRVBVCUOUODEDKFCLEMGNGOFCPCQAHIAHABJUKBUBUGAHIAHIAHBUFUDDEDKFCLEMGNGOFCPCQUIULBUBUGAHIAHABUCUNBUBUGAHUHRTJUJIUARTDEDKFCLEMGNGOFCPCQIUARTUCUMIUARTUPJUCAUPVDABJVEDEDKFCLEMGNGOFCPCQDEDKFCLEMGNGOFCPCQIUARTAHIAHIAHBUFUDDEDKFCLEMGNGOFCPCQUIULBUBUGJUJIUARTAHIAHABJUKBUBUGJSDEDKFCLEMGNGOFCPCQDEDKFCLEMGNGOFCPCQIUARJUJIUARJSDEDKFCLEMGNGOFCPCQDEDKFCLEMGNGOFCPCQIJUJIJSDEDKFCLEMGNGOFCPCQJSUQIDEDKFCLEMGNGOFCPCQJSUEVFRDEDKFCLEMGNGOFCPCQJSUEVGAHIAHIAHBUFUDDEDKFCLEMGNGOFCPCQUIULBUBAHIAHABJUKBUBDEDKFCLEMGNGOFCPCQJSAHDEDKFCLEMGNGOFCPCQJSUEIAHIAHBUFUDDEDKFCLEMGNGOFCPCQUIULIAHABJUKDEDKFCLEMGNGOFCPCQBJSIDEDKFCLEMGNGOFCPCQJSUEAHDEDKFCLEMGNGOFCPCQJSUEIAHBUFUDDEDKFCLEMGNGOFCPCQUIIAHBUFUDJUJUIDEDKFCLEMGNGOFCPCQJSIDEDKFCLEMGNGOFCPCQJSUEAHDEDKFCLEMGNGOFCPCQJSUEBUFDEDKFCLEMGNGOFCPCQJSUEJSDEDKFCLEMGNGOFCPCQUDDEDKFCLEMGNGOFCPCQUDJUJUDDEDKFCLEMGNGOFCPCQJSUEDEDKFCLEMGNGOFCPCQJSUQVHVIVJURUSUCUMUCUMIUARTAHIAHABUCUNBUBUGJUJIUARTAHIAHABJUKBUBUGJSJUCVKAHIAHABUCUNBUBAHIAHABJUKBUBUCUMJSAJUCVLABJUCVMURUSVNVO $.
sorting-rearrange-54 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortMap kore-sort-var-R kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-11-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-51 IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-53 rule-imp-transitivity ) CADFCEEADFCEADHADHADBMNIJIOKGPJQLRLSKGTGUAUBUCBUDUECADFCEEADFCAUFCADFCEECUGUHUIABUJUK $.
substitution-214 $p #Substitution kore-element-var-V0 kore-element-var-V0 \unit-sort kore-sort-var-R $= ( typecode-cache-Pattern-51 unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDEAFG $.
substitution-215 $p #Substitution kore-element-var-V0 kore-element-var-V0 kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-51 typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) BDCEAFG $.
sorting-rearrange-55 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortMap \unit-sort kore-element-var-V0 ( \kore-equals \kore-sort-SortMap \unit-sort kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ) $= ( kore-inj-is-pattern kore-sort-var-R-elementvariable IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-sort-11-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-51 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-145 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-148 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-54 substitution-60 substitution-214 substitution-67 substitution-215 functional-substitution-alt rule-imp-transitivity ) UDUDIJUIUDUHUHIJHIJHIJAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJUDUDIJUIUDUHUDUDVAUMVBVCIJCLHCLHCLAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJIJHIJHIJAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJKUBHKUBHKUBAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJUDCLUIUDUHIJUIUDUHKUBUIUDUHULCKUDULVDULVEULVFUMCAVGIJIJUIUDUHIJHIJHIJAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJCLUIUDUHCLHCLHCLAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJCUFCVHIJHIJHIJAUCMDEDNFBOEPGQGRFBSBTUAUEAUGCLHCLHCLAUCMDEDNFBOEPGQGRFBSBTUAUEAUGIJCUFIJCUFUKHIJHIJAUCMDEDNFBOEPGQGRFBSBTUAUEHCLHCLAUCMDEDNFBOEPGQGRFBSBTUAUEIJACUFCUNIJCUFUKHIJAUCMDEDNFBOEPGQGRFBSBTUAHCLAUCMDEDNFBOEPGQGRFBSBTUAIJCUFCUNIJCUFUKCAVIMDEDNFBOEPGQGRFBSBTUAIJCUFUOUPUQURUSKUBKUBUIUDUHKUBHKUBHKUBAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJCLUIUDUHCLHCLHCLAUCMDEDNFBOEPGQGRFBSBTUAUEAUGUJCUFCKVJKUBHKUBHKUBAUCMDEDNFBOEPGQGRFBSBTUAUEAUGCLHCLHCLAUCMDEDNFBOEPGQGRFBSBTUAUEAUGKUBCUFKUBCUFUKHKUBHKUBAUCMDEDNFBOEPGQGRFBSBTUAUEHCLHCLAUCMDEDNFBOEPGQGRFBSBTUAUEKUBACUFCKUTKUBCUFUKHKUBAUCMDEDNFBOEPGQGRFBSBTUAHCLAUCMDEDNFBOEPGQGRFBSBTUAKUBCUFCKUTKUBCUFUKCAKVKMDEDNFBOEPGQGRFBSBTUAKUBCUFUOUPUQURUSVLVM $.
sorting-cache-122 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern top-is-pattern and-is-pattern IMP-symbol-59-is-pattern sorting-cache-9 sorting-cache-113 rule-and-intro-alt2-sugar IMP-symbol-59-sorting rule-imp-transitivity ) PHFGBCBIDAJCKELEMDANAOFGQHBCBIDAJCKELEMDANAORFGPHFGBCBIDAJCKELEMDANAOFGSTUAHBCBIDAJCKELEMDANAOUBUC $.
typecode-cache-Pattern-72 $p #Pattern kore-element-var-VE1 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-73 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-72 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-74 $p #Pattern kore-element-var-VE0 $= ( element-var-is-var var-is-pattern ) ABC $.
sorting-cache-123 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-72 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-124 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-72 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-73 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-125 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-74 and-is-pattern top-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-72 rule-imp-transitivity and-elim-left-sugar rule-and-intro-alt2-sugar and-elim-right-sugar imp-reflexivity sorting-cache-124 top-intro rule-weakening ) ABICFDEHGGCFDEBJDEHGABICFDEHGGCFDEHGCFDEABICFDEHGNCFDEHGCFDECFDECFDEHLCFDEOKKABICFDEHGGBJDEHABICFDEHGGABIBJDEABICFDEHGLABPKABICFDEHGGHQRMM $.
typecode-cache-Pattern-75 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-74 typecode-cache-Pattern-72 top-is-pattern ) AGHCIEFBJEFKDDD $.
typecode-cache-Pattern-76 $p #Pattern ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-74 typecode-cache-Pattern-72 kore-in-is-pattern ) DAECFBGH $.
typecode-cache-Pattern-77 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) $= ( IMP-sort-6-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-74 IMP-symbol-92-is-pattern typecode-cache-Pattern-72 IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern IMP-symbol-20-is-pattern kore-equals-is-pattern ) DAECFGBHIJKL $.
sorting-rearrange-56 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-74 top-is-pattern kore-top-is-pattern kore-and-is-pattern kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-75 typecode-cache-Pattern-76 typecode-cache-Pattern-77 kore-implies-is-pattern kore-valid-is-pattern typecode-cache-Pattern-72 and-elim-left-sugar sorting-cache-123 sorting-cache-125 rule-and-intro-alt2-sugar IMP-axiom-351 ) ABHCIFGJEEABCOADADADADKADABCPADKLLADABCQADKLRSABHCIFGJEEADMCIFGBTFGJEEABHCIFGJEEABHADMABHCIFGJEUAABUBNABCUCUDABCUEN $.
typecode-cache-Pattern-78 $p #Pattern ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-34 typecode-cache-Pattern-72 kore-in-is-pattern ) DAECFBGH $.
typecode-cache-Pattern-79 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) $= ( IMP-sort-6-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-34 IMP-symbol-92-is-pattern typecode-cache-Pattern-72 IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern IMP-symbol-20-is-pattern kore-equals-is-pattern ) DAECFGBHIJKL $.
substitution-216 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-217 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-216 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-218 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE0 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-219 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-217 substitution-218 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-220 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-221 $p #Substitution ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-0 kore-top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADECFBGH $.
substitution-222 $p #Substitution kore-element-var-VE1 kore-element-var-VE1 kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-72 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-223 $p #Substitution ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-72 element-var-is-var typecode-cache-Pattern-74 substitution-216 substitution-220 substitution-var-same substitution-222 substitution-kore-in ) FAGDEBHFAGCJBHDECICDKACDLDECIMBCDNO $.
substitution-224 $p #Substitution ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-0 kore-top-is-pattern typecode-cache-Pattern-78 typecode-cache-Pattern-76 typecode-cache-Pattern-34 element-var-is-var substitution-220 substitution-223 substitution-221 substitution-kore-and ) AEABDGAEFAEABCHAEFDICJACDKABCDLACDMN $.
substitution-225 $p #Substitution ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-0 kore-top-is-pattern kore-and-is-pattern typecode-cache-Pattern-78 typecode-cache-Pattern-76 typecode-cache-Pattern-34 element-var-is-var substitution-220 substitution-221 substitution-224 substitution-kore-and ) AEAEFAEABDHAEFGAEAEFAEABCIAEFGDJCKACDLACDMABCDNO $.
substitution-226 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-6-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-227 $p #Substitution ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-x0 ) ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-92-substitution ) ADBCBCAEBCADFG $.
substitution-228 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 typecode-cache-Pattern-72 IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern IMP-symbol-20-is-pattern IMP-sort-6-is-pattern typecode-cache-Pattern-0 IMP-symbol-92-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-226 substitution-220 substitution-227 substitution-disjoint substitution-kore-equals ) JAKDELBFGHIJAKCNLBFGHIDECMCDOACDPCDQBFGHIDECMRS $.
sorting-cache-126 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( typecode-cache-Pattern-73 top-is-pattern typecode-cache-Pattern-72 IMP-sort-11-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern sorting-cache-123 sorting-cache-124 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-127 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-73 IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-14-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-128 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-14-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-73 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-127 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-129 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-73 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-21-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-130 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-73 IMP-sort-15-is-pattern IMP-sort-10-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-15-sort IMP-sort-10-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-131 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-73 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-130 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-132 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) $= ( in-sort-is-pattern IMP-sort-15-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-sort-16-is-pattern typecode-cache-Pattern-73 string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern and-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp sorting-cache-131 rule-and-intro-alt2-sugar IMP-symbol-54-sorting rule-imp-transitivity ) ABHEGCDFDIJKFCLEDFDIJKMNCABHEGCDFDIJKFCEGCABHEGCOEGCABHPQRABSTEDFDIJKUAUB $.
sorting-cache-133 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-15-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern and-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 sorting-cache-129 sorting-cache-132 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABODGEGMHCICJKFLDNMDEHCICJKFLFENABODGEGMHCICJKFLDNABPABQRDEHCICJKFLST $.
sorting-cache-134 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern in-sort-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-73 and-is-pattern IMP-symbol-79-is-pattern IMP-sort-11-is-pattern sorting-cache-128 sorting-cache-133 rule-and-intro-alt2-sugar IMP-symbol-79-sorting rule-imp-transitivity ) ABOECEIFDCHJCKGLGMFDNDCHPECEIFDJCKGLGMFDNDQRHABOECEIFDCHJCKGLGMFDNDCHABSABTUAECEIFDJCKGLGMFDNDUBUC $.
sorting-cache-135 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-inj-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern typecode-cache-Pattern-73 string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern and-is-pattern IMP-symbol-59-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-14-sorting proof-rule-mp sorting-cache-134 rule-and-intro-alt2-sugar IMP-symbol-59-sorting rule-imp-transitivity ) ABKJDEFGFLHCMGNIOIPHCQCRDESJFGFLHCMGNIOIPHCQCRTDEABKJDEFGFLHCMGNIOIPHCQCRDEJDEABKJDEUAJDEABKUBUCUDABUEUFJFGFLHCMGNIOIPHCQCRUGUH $.
sorting-rearrange-57 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern kore-element-var-VE0-elementvariable kore-top-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-and-is-pattern element-var-is-var IMP-sort-11-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-72 top-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern and-is-pattern typecode-cache-Pattern-73 IMP-sort-6-is-pattern IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern IMP-symbol-20-is-pattern typecode-cache-Pattern-76 typecode-cache-Pattern-77 IMP-symbol-92-is-pattern kore-valid-is-pattern typecode-cache-Pattern-74 kore-in-is-pattern kore-equals-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-79 kore-element-var-V0-elementvariable typecode-cache-Pattern-78 substitution-kore-and substitution-var-same substitution-220 top-intro rule-weakening rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-126 sorting-cache-135 typecode-cache-Pattern-51 eq-is-pattern exists-is-pattern sorting-cache-122 sorting-rearrange-55 kore-functional sorting-rearrange-56 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-92-substitution substitution-kore-equals substitution-219 substitution-225 substitution-228 substitution-221 functional-substitution-alt ) ABUJABUJKEFELGDMFNHOHPGDQDRSUBUGUEUIUIACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHURABUJABUJKEFELGDMFNHOHPGDQDRSUBUGUEUIABVPABUJKEFELGDMFNHOHPGDQDRSUBUGUEABVQABUJUEVIVJVKVKKEFELGDMFNHOHPGDQDRSACACACACJACABIUOACJTTACABIUPACJTUHURACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHURACACACACJACABUCVEACJTTACABUCVCACJTUHURABUJIUSUBUGUEUIKEFELGDMFNHOHPGDQDRSUBUGUEUIUCVBUBUGUEUIVDIUCABUJUEVDVRKEFELGDMFNHOHPGDQDRSVSVDVTABUJUEVIVJUBKEFELGDMFNHOHPGDQDRSUEVDWAVDWBWCVLABIWDKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSUBUGUEUIACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHURIUSUBUGUEUIACACACACJACABIUOACJTTACABIUPACJTUHURIUAKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSUBUGUEIUSUBUGUEIUAKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSUBIUSUBIUAKEFELGDMFNHOHPGDQDRSIUAVGUBKEFELGDMFNHOHPGDQDRSIUAUFWEUEKEFELGDMFNHOHPGDQDRSIUAUFWFACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHACACACACJACABIUOACJTTACABIUPACJTUHKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTACACACJACABIUOACJTTACABIUPACJTKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTACACJACABIUOACJTKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFACJKEFELGDMFNHOHPGDQDRSIUAUFACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJACABIUOACJKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFUBACKEFELGDMFNHOHPGDQDRSBUDUBACIUSBUDKEFELGDMFNHOHPGDQDRSIUAUBKEFELGDMFNHOHPGDQDRSIUAUFACKEFELGDMFNHOHPGDQDRSIUAUFKEFELGDMFNHOHPGDQDRSIUAVGBUDKEFELGDMFNHOHPGDQDRSIUAUFWGACJKEFELGDMFNHOHPGDQDRSIUAUFVFVFACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJACABIUPACJKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNUKACIUSUQBUDULUMUNKEFELGDMFNHOHPGDQDRSIUAUKKEFELGDMFNHOHPGDQDRSIUAUFACKEFELGDMFNHOHPGDQDRSIUAUFIUAKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSIUSKEFELGDMFNHOHPGDQDRSIUAVGWHBUDULUMUNKEFELGDMFNHOHPGDQDRSIUAUFWIACJKEFELGDMFNHOHPGDQDRSIUAUFVFVMVNVOUCVBUCVBUBUGUEUIACACACACJACABUCVEACJTTACABUCVCACJTUHURIUSUBUGUEUIACACACACJACABIUOACJTTACABIUPACJTUHURIUAIUCWJACACACACJACABUCVEACJTTACABUCVCACJTUHACACACACJACABIUOACJTTACABIUPACJTUHUCVBIUAAIUCVHACACACJACABUCVEACJTTACABUCVCACJTACACACJACABIUOACJTTACABIUPACJTUCVBIUAAIUCVHABIUCWKACABUCVCACJACABIUPACJUCVBIUAAIUCVHABIUCWLAIUCWMVFVMVNVOWNVL $.
sorting-rearrange-58 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) $= ( kore-inj-is-pattern top-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern typecode-cache-Pattern-51 eq-is-pattern exists-is-pattern top-intro rule-weakening IMP-sort-11-is-pattern sorting-cache-122 sorting-rearrange-55 kore-functional rule-imp-transitivity ) AIJDKDBUALEFEMGCNFOHPHQGCRCSTUBBUCAIJDKDUDUEUFLEFEMGCNFOHPHQGCRCSTDBUGBUHUIUJ $.
sorting-cache-136 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-11-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-137 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) ) $= ( typecode-cache-Pattern-72 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-138 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-136 sorting-cache-137 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
substitution-229 $p #Substitution \kore-sort-SortMap \kore-sort-SortMap kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-11-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-230 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-var-same substitution-229 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-231 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE1 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-232 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortMap ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-230 substitution-231 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-233 $p #Substitution kore-sort-var-R kore-sort-var-R kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-0 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADCEBFG $.
substitution-234 $p #Substitution ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-0 kore-top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) ADECFBGH $.
substitution-235 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-6-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-236 $p #Substitution ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-72 substitution-var-same IMP-symbol-94-substitution ) ADBCBCAEBCADFG $.
substitution-237 $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-symbol-91-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-238 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-x0 ) \kore-symbol-LblinitGeneratedCounterCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell kore-element-var-VE1 ) \kore-symbol-LblinitGeneratedCounterCell ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-236 substitution-237 IMP-symbol-20-substitution ) AFBCBCDEAGDEABHABIJ $.
sorting-cache-139 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) ) $= ( IMP-symbol-14-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-14-sorting proof-rule-mp ) BCDAEFGHBCDIBCDAEFGHJKL $.
sorting-cache-140 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern IMP-symbol-59-is-pattern sorting-cache-139 sorting-cache-121 rule-and-intro-alt2-sugar IMP-symbol-59-sorting rule-imp-transitivity ) ARSTQIGHCDCJEBKDLFMFNEBOBPGHQICDCJEBKDLFMFNEBOBPUAGHARSTQIGHCDCJEBKDLFMFNEBOBPGHAUBAUCUDICDCJEBKDLFMFNEBOBPUEUF $.
sorting-rearrange-59 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-inj-is-pattern typecode-cache-Pattern-0 IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-element-var-VE1-elementvariable kore-top-is-pattern kore-and-is-pattern IMP-sort-11-is-pattern element-var-is-var kore-element-var-x0-elementvariable typecode-cache-Pattern-72 IMP-symbol-91-is-pattern IMP-symbol-92-is-pattern IMP-symbol-94-is-pattern IMP-sort-6-is-pattern typecode-cache-Pattern-34 kore-in-is-pattern IMP-symbol-20-is-pattern top-is-pattern kore-equals-is-pattern and-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-233 substitution-kore-and substitution-var-same substitution-234 rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable rule-imp-transitivity substitution-kore-in substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-140 top-intro rule-weakening sorting-rearrange-58 typecode-cache-Pattern-73 sorting-cache-138 sorting-rearrange-57 substitution-in-sort substitution-and IMP-symbol-94-substitution IMP-symbol-20-substitution substitution-232 substitution-229 substitution-235 substitution-238 functional-substitution-alt ) ACURUKUMACURUKUMHDEDIFBJEKGLGMFBNBOPTUOUKUMUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPUQACURUKUMACURUKUMHDEDIFBJEKGLGMFBNBOPTUOUKUMAVKACURUKUMHDEDIFBJEKGLGMFBNBOPTUOUKAVLACURUKUMUKVMVNVCVCHDEDIFBJEKGLGMFBNBOPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPUQACACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSUPUQACURUKUMQUCTUOUKUMHDEDIFBJEKGLGMFBNBOPTUOUKUMUBUHTUOUKUMVDQUBAVDVOACURUKUMQUCTUOUKUMUMAQVPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQAQVQAQVRVEHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPUQQUCTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTUOUKQUCTUOUKQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTQUCTQUAHDEDIFBJEKGLGMFBNBOPQUAVATHDEDIFBJEKGLGMFBNBOPQUAUNVSUKHDEDIFBJEKGLGMFBNBOPQUAUNVTACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNACRHDEDIFBJEKGLGMFBNBOPQUAUNACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTACHDEDIFBJEKGLGMFBNBOPQUCHDEDIFBJEKGLGMFBNBOPQUATHDEDIFBJEKGLGMFBNBOPQUAUNACHDEDIFBJEKGLGMFBNBOPQUAUNHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPQUAUNHDEDIFBJEKGLGMFBNBOPQUAVAVFACRHDEDIFBJEKGLGMFBNBOPQUAUNUTUTACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJHDEDIFBJEKGLGMFBNBOPQUAUGHDEDIFBJEKGLGMFBNBOPQUAUNACHDEDIFBJEKGLGMFBNBOPQUAUNHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPQUAUNQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUFUDQUCUFUDQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPQUCHDEDIFBJEKGLGMFBNBOPQUAVAWAUDHDEDIFBJEKGLGMFBNBOPQUAUNWBVGACRHDEDIFBJEKGLGMFBNBOPQUAUNUTVHVIVJUBUHUBUHTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSUPUQQUCTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQQUAQUBWCACACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSUPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUBUHQUAAQUBUSACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUBUHQUAAQUBUSACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSUBUHQUAAQUBUSAQUBVBACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRUBUHQUAAQUBUSTACHDEDIFBJEKGLGMFBNBOPUBUHTACHDEDIFBJEKGLGMFBNBOPQUCUBUHQUAQUBWDAQUBUSHDEDIFBJEKGLGMFBNBOPUBUHQUAUNUBUHQUAVAVFAQUBVBUTUTACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRUBUHQUAAQUBUSUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJUBUHQUAQUBWEAQUBUSHDEDIFBJEKGLGMFBNBOPUEUBUHQUAUNQUBWFVGAQUBVBUTVHVIVJWGVE $.
sorting-cache-141 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort \kore-symbol-Lbl'Stop'Map \kore-sort-SortMap ) ) $= ( top-is-pattern and-is-pattern IMP-symbol-14-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-14-sorting proof-rule-mp ) DEFAGHBCBCDEFIDEFAGHBCBCJKL $.
sorting-cache-142 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortKConfigVar ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-14-is-pattern typecode-cache-Pattern-0 imp-is-pattern proof-rule-prop-1 IMP-sort-14-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-143 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortKItem ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 imp-is-pattern proof-rule-prop-1 BASIC-K-sort-1-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-144 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \and ( \kore-is-sort \kore-sort-SortKConfigVar ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-142 sorting-cache-143 rule-and-intro-alt2-sugar ) AEBCDCDFBGBAHAIJ $.
sorting-cache-145 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) \kore-sort-SortKConfigVar ) ) $= ( IMP-sort-14-is-pattern string-literal-4-is-pattern top-is-pattern and-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCFBGAHIDEDEBCFBGJBCFBGAHIDEDEKBCLM $.
sorting-cache-146 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-14-is-pattern and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-1-is-pattern top-is-pattern string-literal-4-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-inj-is-pattern sorting-cache-144 sorting-cache-145 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AJDFCFCBDEDCBGHBICBEBGHKEIAJDFCFCBDEDCBGHBIALAMNBEBGHOP $.
sorting-cache-147 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortStmt ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-21-is-pattern typecode-cache-Pattern-0 imp-is-pattern proof-rule-prop-1 IMP-sort-21-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-148 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern sorting-cache-147 sorting-cache-143 rule-and-intro-alt2-sugar ) AEBCDCDFBGBAHAIJ $.
sorting-cache-149 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-sort-SortId2 ) ) $= ( top-is-pattern and-is-pattern IMP-symbol-83-is-pattern IMP-sort-16-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp ) DEFAGHBCBCDEFIDEFAGHBCBCJKL $.
sorting-cache-150 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortInt ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 imp-is-pattern proof-rule-prop-1 IMP-sort-15-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-151 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort \kore-sort-SortAExp ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-0 imp-is-pattern proof-rule-prop-1 IMP-sort-10-sort proof-rule-mp ) EBAFBCDCDEBGEBAFBCDCDHIJ $.
sorting-cache-152 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 IMP-sort-15-is-pattern IMP-sort-10-is-pattern sorting-cache-150 sorting-cache-151 rule-and-intro-alt2-sugar ) AEBCDCDFBGBAHAIJ $.
sorting-cache-153 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-dv \kore-sort-SortInt "0" ) \kore-sort-SortInt ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern top-is-pattern and-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp ) BCFBGAHIDEDEBCFBGJBCFBGAHIDEDEKBCLM $.
sorting-cache-154 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-15-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-10-is-pattern top-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-inj-is-pattern sorting-cache-152 sorting-cache-153 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AJDFCFCBDEDCBGHBICBEBGHKEIAJDFCFCBDEDCBGHBIALAMNBEBGHOP $.
sorting-cache-155 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) $= ( IMP-sort-15-is-pattern IMP-sort-10-is-pattern and-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-83-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern IMP-sort-16-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern sorting-cache-149 sorting-cache-154 rule-and-intro-alt2-sugar IMP-symbol-54-sorting rule-imp-transitivity ) AKLFDFDGMEBCBHIJCEDGBCBHIJNOEAKLFDFDGMEBCBHIJCEAPAQRGBCBHIJST $.
sorting-cache-156 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-15-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern top-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 sorting-cache-148 sorting-cache-155 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AODHCHCEDFDCIBJBKLGMENCEFIBJBKLGMGFNAODHCHCEDFDCIBJBKLGMENAPAQREFIBJBKLGMST $.
sorting-cache-157 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortMap ) ) $= ( BASIC-K-sort-1-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern and-is-pattern in-sort-is-pattern top-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern IMP-symbol-79-is-pattern IMP-sort-11-is-pattern sorting-cache-146 sorting-cache-156 rule-and-intro-alt2-sugar IMP-symbol-79-sorting rule-imp-transitivity ) APQIGIGDBDJECBHKBLFMFNECOCBHGDBDJECKBLFMFNECOCRSHAPQIGIGDBDJECBHKBLFMFNECOCBHATAUAUBDBDJECKBLFMFNECOCUCUD $.
sorting-cache-158 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) \kore-sort-SortMap ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern and-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern IMP-symbol-59-is-pattern sorting-cache-141 sorting-cache-157 rule-and-intro-alt2-sugar IMP-symbol-59-sorting rule-imp-transitivity ) ASTJGJGKHICDCLEBMDNFOFPEBQBRHIGKCDCLEBMDNFOFPEBQBRUAHIASTJGJGKHICDCLEBMDNFOFPEBQBRHIAUBAUCUDKCDCLEBMDNFOFPEBQBRUEUF $.
sorting-rearrange-60 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-top kore-sort-var-R ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern rule-imp-transitivity kore-top-is-pattern kore-valid-is-pattern and-elim-left-sugar rule-weakening imp-reflexivity top-intro rule-and-intro-alt2-sugar kore-top-valid ) ABEDCABEDCDCCABEDCABABGHABEDCABEDCDCCABEDABEDCABEDCDCCABEDCABEABEDCABEDCDCIABEDCABEABEABEDIABEKFFABEDCABEDCDCCDLJMABEDCABABGHABNJF $.
sorting-rearrange-61 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-0 top-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-sort-11-is-pattern kore-in-is-pattern kore-top-is-pattern in-sort-is-pattern rule-imp-transitivity kore-valid-is-pattern rule-and-intro-alt2-sugar sorting-cache-68 rule-weakening top-intro and-elim-left-sugar imp-is-pattern proof-rule-prop-1 proof-rule-mp predicate-intro-top rule-predicate-intro-and kore-and-is-pattern kore-in-sorting kore-top-sorting imp-reflexivity kore-is-sort-is-predicate sorting-cache-158 kore-in-reflexivity kore-top-valid kore-and-intro-alt ) ACEDBACEDBACEDBACEDBDBBBACACTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUAACUBUPUEACEDBACEDBACEDBACEDBDBBAUGACEDBACEDBACEDBDBAUGACEDBACEDBDAUGACEDBDUIUHUFUFUFACTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUAACUBACEDBACEDBACEDBDBBBTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUAACUCACEDBACEDBACEDBDBBBTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUAACUCUKTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUAACUCACEDBACEDBACEDBDBBBULTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUQUMACUBACUCACEDBACEDBACEDBDBBBACUBACUCUKACUBACUCACEDBACEDBACEDBDBBBULACURUMACEDBACEDBACEDBDBBBACEDBACTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUAUEACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBUJACEDBACEACEACEDUJACEUSUDUDACEDBACEDBACEDBDBBBDUIUHUFACEDBACEDBDBACTACKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUAUEACEDBACEDBDAUGACEDBDUIUHUFTACKGHGLIFMHNJOJPIFQFRSACEDBDBACEDBDACEDACUTUNUOUNUOAVAVBUDUDACEDBACEDBACEDBDBBBACEDBACACUBUEACEDBACEDBACEDBDBBUJACEDBACACUBUEACVCUHUDVDUD $.
sorting-rearrange-62 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-top-is-pattern in-sort-is-pattern IMP-sort-11-is-pattern kore-in-is-pattern rule-imp-transitivity kore-and-is-pattern rule-and-intro-alt2-sugar kore-valid-is-pattern sorting-cache-68 rule-weakening imp-is-pattern proof-rule-prop-1 proof-rule-mp and-elim-left-sugar top-intro kore-top-sorting kore-in-sorting kore-and-sorting imp-reflexivity kore-top-valid sorting-rearrange-61 kore-and-intro-alt ) ABEDCABEDCABEDCABEDCDCCCABABABTABUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABTUEUEUGABEDCABEDCABEDCABEDCDCCAUHABEDCABEDCABEDCDCAUHABEDCABEDCDAUHABEDCDUNUIUFUFUFABABTABUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABTUEABEDCABEDCABEDCDCCCABTABUAABEDCABEDCABEDCDCCCABTABUAUJABTABUAABEDCABEDCABEDCDCCCUKABUOULABEDCABEDCABEDCDCCCUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABUAABTABUACABUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABTUEABUAABEDCABEDCABEDCDCCCUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABUAABTABUAUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABUAABEDCABEDCABEDCDCCCUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABUAUJUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABUAABEDCABEDCABEDCDCCCUKUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUPULABTABUAABEDCABEDCABEDCDCCCABTABUAUJABTABUAABEDCABEDCABEDCDCCCUKABUOULUFABUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABTUQUDABEDCABEDCABEDCDCCCABEDCABABTUGABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCUMABEDCABEABEABEDUMABEURUDUDABEDCABEDCABEDCDCCCDUNUIUFABEDCABABTUGABUSUIUDABEDCABEDCABEDCDCCCABEDCABABUBABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUCABTUEUGABEDCABEDCABEDCDCCUMAUTUDVAUD $.
sorting-rearrange-63 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-top-is-pattern kore-and-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-sort-6-is-pattern IMP-symbol-92-is-pattern IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern IMP-symbol-20-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-68 IMP-sort-11-is-pattern kore-in-is-pattern and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity sorting-rearrange-59 sorting-rearrange-62 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABUDABKGHGLIFMHNJOJPIFQFRSUEKGHGLIFMHNJOJPIFQFRSUFUGUHUIABTUAUJABEDCABEDCABEDCABEDCDCCAUKABEDCABEDCABEDCDCAUKABEDCABEDCDAUKABEDCDUOUPUCUCUCABABABTABULABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUMABTUAUAABUDABKGHGLIFMHNJOJPIFQFRSUEKGHGLIFMHNJOJPIFQFRSUFUGUHUIABTUAABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABTABULABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUMABTUAUAABUDABKGHGLIFMHNJOJPIFQFRSUEKGHGLIFMHNJOJPIFQFRSUFUGUHUIABTUAUQUJABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCUNABEDCABEABEABEDUNABEURUBUBABEDCABEDCABEDCDCCCDUOUPUCAUSUBABEDCABEDCABEDCDCCCABEDCABABABTABULABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUMABTUAUAUJABEDCABEDCABEDCDCCUNAUTUBVAUB $.
sorting-cache-159 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ABCDEDEABCDEABCABCDEDFABCDEABCABCABCDFABCHGG $.
sorting-rearrange-64 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedTopCell kore-sort-var-R ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-sort-6-is-pattern IMP-symbol-92-is-pattern IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern IMP-symbol-20-is-pattern kore-equals-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar in-sort-is-pattern kore-valid-is-pattern sorting-cache-68 top-intro rule-weakening and-elim-left-sugar imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp kore-top-is-pattern kore-and-is-pattern imp-reflexivity sorting-rearrange-63 kore-anp-top ) ABFDCABFDCABFDCDCCABTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEUIABFDCABFDCABFDCDCAUJABFDCABFDCDAUJABFDCDUKULUGUGABTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABFDCABFDCDCCTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABUHABFDCABFDCDCCTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABUHUNTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABUHABFDCABFDCDCCUOTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUPUQABFDCABFDCDCCABFDCABABTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABURUSUIABFDCABFDCDCCABFDABFDCABFDCDCCABFDCABFABFDCABFDCDCUMABFDCABFABFABFDUMABFUTUFUFABFDCABFDCDCCDUKULUGAVAUFVBUF $.
substitution-239 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell \unit-sort kore-sort-var-R $= ( IMP-sort-6-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-240 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-6-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-65 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortGeneratedTopCell \unit-sort ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern kore-sort-var-R-elementvariable IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern top-is-pattern typecode-cache-Pattern-0 unit-sort-is-symbol symbol-is-pattern IMP-symbol-92-is-pattern IMP-symbol-94-is-pattern IMP-symbol-91-is-pattern IMP-symbol-20-is-pattern kore-sort-var-x0-elementvariable and-is-pattern IMP-sort-6-is-pattern typecode-cache-Pattern-14 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-58 typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-cache-56 sorting-rearrange-64 substitution-60 substitution-239 substitution-67 substitution-240 functional-substitution-alt ) PPRSUHPUEUERSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKPPRSUHPUEPPUPUOVBUQRSFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKRSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKUDUGUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKPFQUHPUERSUHPUEUDUGUHPUEULFUDPULVCULVDULVEUOPFQUHPUEUEFQUHPUEFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKPFQUHPUEUEFQUHPFVFPFQUHPUEUEPUPUOUQFVGURRSRSUHPUERSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFQUHPUEFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFUIFVHRSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJRSFUIRSFUIUMUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCRSFUIFVIRSFUIUMGBCBHDAICJEKELDAMANOTRSFUIUNGBCBHDAICJEKELDAMANOUAUBUCRSFUIUNUSUTVAUDUGUDUGUHPUEUDUGUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFQUHPUEFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFUIFUDVJUDUGUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUDUGFUIUDUGFUIUMUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUDUGFUIFUDVKUDUGFUIUMGBCBHDAICJEKELDAMANOTUDUGFUIUNGBCBHDAICJEKELDAMANOUAUBUCUDUGFUIUNUSUTVAVLUR $.
sorting-cache-160 $p |- ( \imp \top ( \in-sort \kore-symbol-LblinitGeneratedCounterCell \kore-sort-SortGeneratedCounterCell ) ) $= ( IMP-symbol-91-is-pattern IMP-sort-7-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-91-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-161 $p |- ( \imp \top ( \and ( \in-sort ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-sort-SortTCell ) ( \in-sort \kore-symbol-LblinitGeneratedCounterCell \kore-sort-SortGeneratedCounterCell ) ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-94-is-pattern IMP-sort-20-is-pattern IMP-symbol-91-is-pattern IMP-sort-7-is-pattern IMP-sort-11-is-pattern sorting-cache-122 IMP-symbol-94-sorting rule-imp-transitivity sorting-cache-160 rule-and-intro-alt2-sugar ) PFBCBGDAHCIEJEKDALAMNQROSTOPFBCBGDAHCIEJEKDALAMNUAOFBCBGDAHCIEJEKDALAMNQROUBFBCBGDAHCIEJEKDALAMNUCUDUEUF $.
sorting-cache-162 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) \kore-sort-SortGeneratedTopCell ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-94-is-pattern in-sort-is-pattern IMP-symbol-91-is-pattern top-is-pattern IMP-sort-20-is-pattern IMP-sort-7-is-pattern and-is-pattern IMP-symbol-20-is-pattern IMP-sort-6-is-pattern sorting-cache-161 IMP-symbol-20-sorting rule-imp-transitivity ) RFBCBGDAHCIEJEKDALAMNOSPQTPUAFBCBGDAHCIEJEKDALAMNOQUBUCPUDFBCBGDAHCIEJEKDALAMNOQUEUF $.
typecode-cache-Pattern-80 $p #Pattern ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) ) $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-74 IMP-symbol-94-is-pattern typecode-cache-Pattern-72 IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern kore-equals-is-pattern ) DAECFGBHIJKL $.
sorting-rearrange-66 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-74 top-is-pattern kore-top-is-pattern kore-and-is-pattern kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-75 typecode-cache-Pattern-76 typecode-cache-Pattern-80 kore-implies-is-pattern kore-valid-is-pattern typecode-cache-Pattern-72 and-elim-left-sugar sorting-cache-123 sorting-cache-125 rule-and-intro-alt2-sugar IMP-axiom-353 ) ABHCIFGJEEABCOADADADADKADABCPADKLLADABCQADKLRSABHCIFGJEEADMCIFGBTFGJEEABHCIFGJEEABHADMABHCIFGJEUAABUBNABCUCUDABCUEN $.
typecode-cache-Pattern-81 $p #Pattern ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) ) $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-34 IMP-symbol-94-is-pattern typecode-cache-Pattern-72 IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern kore-equals-is-pattern ) DAECFGBHIJKL $.
substitution-241 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-242 $p #Substitution ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-94-substitution ) ADBCBCAEBCADFG $.
substitution-243 $p #Substitution ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) ) ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 typecode-cache-Pattern-72 IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-0 IMP-symbol-94-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-241 substitution-220 substitution-242 substitution-disjoint substitution-kore-equals ) JAKDELBFGHIJAKCNLBFGHIDECMCDOACDPCDQBFGHIDECMRS $.
sorting-rearrange-67 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern kore-element-var-VE0-elementvariable kore-top-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-and-is-pattern element-var-is-var IMP-sort-11-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-72 top-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern and-is-pattern typecode-cache-Pattern-73 IMP-sort-20-is-pattern IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern typecode-cache-Pattern-76 typecode-cache-Pattern-80 IMP-symbol-94-is-pattern kore-valid-is-pattern typecode-cache-Pattern-74 kore-in-is-pattern kore-equals-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-81 kore-element-var-V0-elementvariable typecode-cache-Pattern-78 substitution-kore-and substitution-var-same substitution-220 top-intro rule-weakening rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-126 sorting-cache-135 typecode-cache-Pattern-51 eq-is-pattern exists-is-pattern sorting-cache-122 sorting-rearrange-55 kore-functional sorting-rearrange-66 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-94-substitution substitution-kore-equals substitution-219 substitution-225 substitution-243 substitution-221 functional-substitution-alt ) ABUJABUJKEFELGDMFNHOHPGDQDRSUBUGUEUIUIACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHURABUJABUJKEFELGDMFNHOHPGDQDRSUBUGUEUIABVPABUJKEFELGDMFNHOHPGDQDRSUBUGUEABVQABUJUEVIVJVKVKKEFELGDMFNHOHPGDQDRSACACACACJACABIUOACJTTACABIUPACJTUHURACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHURACACACACJACABUCVEACJTTACABUCVCACJTUHURABUJIUSUBUGUEUIKEFELGDMFNHOHPGDQDRSUBUGUEUIUCVBUBUGUEUIVDIUCABUJUEVDVRKEFELGDMFNHOHPGDQDRSVSVDVTABUJUEVIVJUBKEFELGDMFNHOHPGDQDRSUEVDWAVDWBWCVLABIWDKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSUBUGUEUIACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHURIUSUBUGUEUIACACACACJACABIUOACJTTACABIUPACJTUHURIUAKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSUBUGUEIUSUBUGUEIUAKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSUBIUSUBIUAKEFELGDMFNHOHPGDQDRSIUAVGUBKEFELGDMFNHOHPGDQDRSIUAUFWEUEKEFELGDMFNHOHPGDQDRSIUAUFWFACACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTUHACACACACJACABIUOACJTTACABIUPACJTUHKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFACACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTTACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJTACACACJACABIUOACJTTACABIUPACJTKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFACACJACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJTACACJACABIUOACJTKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFACJKEFELGDMFNHOHPGDQDRSIUAUFACUBACKEFELGDMFNHOHPGDQDRSBUDUTACJACABIUOACJKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFUBACKEFELGDMFNHOHPGDQDRSBUDUBACIUSBUDKEFELGDMFNHOHPGDQDRSIUAUBKEFELGDMFNHOHPGDQDRSIUAUFACKEFELGDMFNHOHPGDQDRSIUAUFKEFELGDMFNHOHPGDQDRSIUAVGBUDKEFELGDMFNHOHPGDQDRSIUAUFWGACJKEFELGDMFNHOHPGDQDRSIUAUFVFVFACUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNVAACJACABIUPACJKEFELGDMFNHOHPGDQDRSIUAACKEFELGDMFNHOHPGDQDRSIUAUFUKACKEFELGDMFNHOHPGDQDRSUQBUDULUMUNUKACIUSUQBUDULUMUNKEFELGDMFNHOHPGDQDRSIUAUKKEFELGDMFNHOHPGDQDRSIUAUFACKEFELGDMFNHOHPGDQDRSIUAUFIUAKEFELGDMFNHOHPGDQDRSKEFELGDMFNHOHPGDQDRSIUSKEFELGDMFNHOHPGDQDRSIUAVGWHBUDULUMUNKEFELGDMFNHOHPGDQDRSIUAUFWIACJKEFELGDMFNHOHPGDQDRSIUAUFVFVMVNVOUCVBUCVBUBUGUEUIACACACACJACABUCVEACJTTACABUCVCACJTUHURIUSUBUGUEUIACACACACJACABIUOACJTTACABIUPACJTUHURIUAIUCWJACACACACJACABUCVEACJTTACABUCVCACJTUHACACACACJACABIUOACJTTACABIUPACJTUHUCVBIUAAIUCVHACACACJACABUCVEACJTTACABUCVCACJTACACACJACABIUOACJTTACABIUPACJTUCVBIUAAIUCVHABIUCWKACABUCVCACJACABIUPACJUCVBIUAAIUCVHABIUCWLAIUCWMVFVMVNVOWNVL $.
substitution-244 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-245 $p #Substitution ( \kore-symbol-LblinitKCell kore-element-var-x0 ) ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-72 substitution-var-same IMP-symbol-93-substitution ) ADBCBCAEBCADFG $.
substitution-246 $p #Substitution \kore-symbol-LblinitBCell \kore-symbol-LblinitBCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-symbol-90-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-247 $p #Substitution ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-x0 ) \kore-symbol-LblinitBCell ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell kore-element-var-VE1 ) \kore-symbol-LblinitBCell ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-245 substitution-246 IMP-symbol-16-substitution ) AFBCBCDEAGDEABHABIJ $.
sorting-rearrange-68 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitBCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-inj-is-pattern typecode-cache-Pattern-0 IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-element-var-VE1-elementvariable kore-top-is-pattern kore-and-is-pattern IMP-sort-11-is-pattern element-var-is-var kore-element-var-x0-elementvariable typecode-cache-Pattern-72 IMP-symbol-90-is-pattern IMP-symbol-94-is-pattern IMP-symbol-93-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-34 kore-in-is-pattern IMP-symbol-16-is-pattern top-is-pattern kore-equals-is-pattern and-is-pattern substitution-disjoint in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-233 substitution-kore-and substitution-var-same substitution-234 rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable rule-imp-transitivity substitution-kore-in substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-140 top-intro rule-weakening sorting-rearrange-58 typecode-cache-Pattern-73 sorting-cache-138 sorting-rearrange-67 substitution-in-sort substitution-and IMP-symbol-93-substitution IMP-symbol-16-substitution substitution-232 substitution-229 substitution-244 substitution-247 functional-substitution-alt ) ACURUKUMACURUKUMHDEDIFBJEKGLGMFBNBOPTUOUKUMUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPUQACURUKUMACURUKUMHDEDIFBJEKGLGMFBNBOPTUOUKUMAVKACURUKUMHDEDIFBJEKGLGMFBNBOPTUOUKAVLACURUKUMUKVMVNVCVCHDEDIFBJEKGLGMFBNBOPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPUQACACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSUPUQACURUKUMQUCTUOUKUMHDEDIFBJEKGLGMFBNBOPTUOUKUMUBUHTUOUKUMVDQUBAVDVOACURUKUMQUCTUOUKUMUMAQVPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQAQVQAQVRVEHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPUQQUCTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTUOUKQUCTUOUKQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTQUCTQUAHDEDIFBJEKGLGMFBNBOPQUAVATHDEDIFBJEKGLGMFBNBOPQUAUNVSUKHDEDIFBJEKGLGMFBNBOPQUAUNVTACACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSUPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNACACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRSACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNACACRACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRSACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNACRHDEDIFBJEKGLGMFBNBOPQUAUNACTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUIACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNTACHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPTACHDEDIFBJEKGLGMFBNBOPQUCHDEDIFBJEKGLGMFBNBOPQUATHDEDIFBJEKGLGMFBNBOPQUAUNACHDEDIFBJEKGLGMFBNBOPQUAUNHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPQUAUNHDEDIFBJEKGLGMFBNBOPQUAVAVFACRHDEDIFBJEKGLGMFBNBOPQUAUNUTUTACUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJULACRACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRHDEDIFBJEKGLGMFBNBOPQUAACHDEDIFBJEKGLGMFBNBOPQUAUNUGACHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPUFUDUJUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJHDEDIFBJEKGLGMFBNBOPQUAUGHDEDIFBJEKGLGMFBNBOPQUAUNACHDEDIFBJEKGLGMFBNBOPQUAUNHDEDIFBJEKGLGMFBNBOPUEHDEDIFBJEKGLGMFBNBOPQUAUNQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPUFUDQUCUFUDQUAHDEDIFBJEKGLGMFBNBOPHDEDIFBJEKGLGMFBNBOPQUCHDEDIFBJEKGLGMFBNBOPQUAVAWAUDHDEDIFBJEKGLGMFBNBOPQUAUNWBVGACRHDEDIFBJEKGLGMFBNBOPQUAUNUTVHVIVJUBUHUBUHTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSUPUQQUCTUOUKUMACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUQQUAQUBWCACACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSUPACACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUPUBUHQUAAQUBUSACACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRSACACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSSACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRSUBUHQUAAQUBUSACACRACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRSACACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRSUBUHQUAAQUBUSAQUBVBACTACHDEDIFBJEKGLGMFBNBOPUBUHUIACRACTACHDEDIFBJEKGLGMFBNBOPQUCUIACRUBUHQUAAQUBUSTACHDEDIFBJEKGLGMFBNBOPUBUHTACHDEDIFBJEKGLGMFBNBOPQUCUBUHQUAQUBWDAQUBUSHDEDIFBJEKGLGMFBNBOPUBUHQUAUNUBUHQUAVAVFAQUBVBUTUTACUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJULACRACUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJULACRUBUHQUAAQUBUSUGACHDEDIFBJEKGLGMFBNBOPUEUBUHUFUDUJUGACHDEDIFBJEKGLGMFBNBOPUEQUCUFUDUJUBUHQUAQUBWEAQUBUSHDEDIFBJEKGLGMFBNBOPUEUBUHQUAUNQUBWFVGAQUBVBUTVHVIVJWGVE $.
sorting-rearrange-69 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitBCell ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-top-is-pattern kore-and-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-sort-20-is-pattern IMP-symbol-94-is-pattern IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-68 IMP-sort-11-is-pattern kore-in-is-pattern and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity sorting-rearrange-68 sorting-rearrange-62 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABUDABKGHGLIFMHNJOJPIFQFRSUEKGHGLIFMHNJOJPIFQFRSUFUGUHUIABTUAUJABEDCABEDCABEDCABEDCDCCAUKABEDCABEDCABEDCDCAUKABEDCABEDCDAUKABEDCDUOUPUCUCUCABABABTABULABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUMABTUAUAABUDABKGHGLIFMHNJOJPIFQFRSUEKGHGLIFMHNJOJPIFQFRSUFUGUHUIABTUAABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABTABULABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUMABTUAUAABUDABKGHGLIFMHNJOJPIFQFRSUEKGHGLIFMHNJOJPIFQFRSUFUGUHUIABTUAUQUJABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCUNABEDCABEABEABEDUNABEURUBUBABEDCABEDCABEDCDCCCDUOUPUCAUSUBABEDCABEDCABEDCDCCCABEDCABABABTABULABKGHGLIFMHNJOJPIFQFRSKGHGLIFMHNJOJPIFQFRSUMABTUAUAUJABEDCABEDCABEDCDCCUNAUTUBVAUB $.
sorting-rearrange-70 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortTCell kore-sort-var-R ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitBCell ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-sort-20-is-pattern IMP-symbol-94-is-pattern IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern kore-equals-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar in-sort-is-pattern kore-valid-is-pattern sorting-cache-68 top-intro rule-weakening and-elim-left-sugar imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp kore-top-is-pattern kore-and-is-pattern imp-reflexivity sorting-rearrange-69 kore-anp-top ) ABFDCABFDCABFDCDCCABTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEUIABFDCABFDCABFDCDCAUJABFDCABFDCDAUJABFDCDUKULUGUGABTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABFDCABFDCDCCTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABUHABFDCABFDCDCCTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABUHUNTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABUHABFDCABFDCDCCUOTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUPUQABFDCABFDCDCCABFDCABABTABKGHGLIEMHNJOJPIEQERSUAKGHGLIEMHNJOJPIEQERSUBUCUDUEABURUSUIABFDCABFDCDCCABFDABFDCABFDCDCCABFDCABFABFDCABFDCDCUMABFDCABFABFABFDUMABFUTUFUFABFDCABFDCDCCDUKULUGAVAUFVBUF $.
substitution-248 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell \unit-sort kore-sort-var-R $= ( IMP-sort-20-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-249 $p #Substitution \kore-sort-SortTCell \kore-sort-SortTCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-20-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-71 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortTCell \unit-sort ( \kore-symbol-LblinitTCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitBCell ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern kore-sort-var-R-elementvariable IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern top-is-pattern typecode-cache-Pattern-0 unit-sort-is-symbol symbol-is-pattern IMP-symbol-94-is-pattern IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern kore-sort-var-x0-elementvariable and-is-pattern IMP-sort-20-is-pattern typecode-cache-Pattern-14 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-58 typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-cache-56 sorting-rearrange-70 substitution-60 substitution-248 substitution-67 substitution-249 functional-substitution-alt ) PPRSUHPUEUERSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKPPRSUHPUEPPUPUOVBUQRSFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKRSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKUDUGUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKPFQUHPUERSUHPUEUDUGUHPUEULFUDPULVCULVDULVEUOPFQUHPUEUEFQUHPUEFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKPFQUHPUEUEFQUHPFVFPFQUHPUEUEPUPUOUQFVGURRSRSUHPUERSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFQUHPUEFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFUIFVHRSUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJRSFUIRSFUIUMUFRSGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCRSFUIFVIRSFUIUMGBCBHDAICJEKELDAMANOTRSFUIUNGBCBHDAICJEKELDAMANOUAUBUCRSFUIUNUSUTVAUDUGUDUGUHPUEUDUGUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFQUHPUEFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUKFUIFUDVJUDUGUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJFQUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUJUDUGFUIUDUGFUIUMUFUDUGGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUFFQGBCBHDAICJEKELDAMANOTGBCBHDAICJEKELDAMANOUAUBUCUDUGFUIFUDVKUDUGFUIUMGBCBHDAICJEKELDAMANOTUDUGFUIUNGBCBHDAICJEKELDAMANOUAUBUCUDUGFUIUNUSUTVAVLUR $.
sorting-cache-163 $p |- ( \imp \top ( \in-sort \kore-symbol-LblinitBCell \kore-sort-SortBCell ) ) $= ( IMP-symbol-90-is-pattern IMP-sort-2-is-pattern in-sort-is-pattern top-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-90-sorting proof-rule-mp ) ABCDABCEABCDFGH $.
sorting-cache-164 $p |- ( \imp \top ( \and ( \in-sort ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-sort-SortKCell ) ( \in-sort \kore-symbol-LblinitBCell \kore-sort-SortBCell ) ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern in-sort-is-pattern top-is-pattern IMP-symbol-93-is-pattern IMP-sort-5-is-pattern IMP-symbol-90-is-pattern IMP-sort-2-is-pattern IMP-sort-11-is-pattern sorting-cache-122 IMP-symbol-93-sorting rule-imp-transitivity sorting-cache-163 rule-and-intro-alt2-sugar ) PFBCBGDAHCIEJEKDALAMNQROSTOPFBCBGDAHCIEJEKDALAMNUAOFBCBGDAHCIEJEKDALAMNQROUBFBCBGDAHCIEJEKDALAMNUCUDUEUF $.
sorting-cache-165 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitBCell ) \kore-sort-SortTCell ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-93-is-pattern in-sort-is-pattern IMP-symbol-90-is-pattern top-is-pattern IMP-sort-5-is-pattern IMP-sort-2-is-pattern and-is-pattern IMP-symbol-16-is-pattern IMP-sort-20-is-pattern sorting-cache-164 IMP-symbol-16-sorting rule-imp-transitivity ) RFBCBGDAHCIEJEKDALAMNOSPQTPUAFBCBGDAHCIEJEKDALAMNOQUBUCPUDFBCBGDAHCIEJEKDALAMNOQUEUF $.
equality-elim-1 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) \kore-symbol-LblinitBCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-6-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-element-var-x0-elementvariable IMP-sort-18-is-pattern IMP-symbol-92-is-pattern element-var-is-var IMP-symbol-91-is-pattern IMP-symbol-94-is-pattern IMP-symbol-20-is-pattern substitution-disjoint IMP-symbol-93-is-pattern IMP-symbol-90-is-pattern IMP-symbol-16-is-pattern typecode-cache-Pattern-34 kore-rewrites-star-is-pattern top-is-pattern in-sort-is-pattern substitution-var-same substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid IMP-sort-20-is-pattern kore-valid-is-pattern IMP-sort-11-is-pattern sorting-cache-122 rule-imp-transitivity kore-equals-elim-alt IMP-symbol-20-substitution IMP-symbol-94-sorting sorting-cache-165 sorting-rearrange-71 IMP-symbol-92-sorting sorting-cache-162 sorting-rearrange-65 equality-elim-0 ) UQICDCJEAKDLFMFNEAOAPQUCICDCJEAKDLFMFNEAOAPQUFUGUHBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDHUJBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIUBUDHUJURBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUFUGUHUBUDHUJBBUKRUKICDCJEAKDLFMFNEAOAPQUSULICDCJEAKDLFMFNEAOAPQUCUQULUTICDCJEAKDLFMFNEAOAPQVDVAVEVFBICDCJEAKDLFMFNEAOAPQTICDCJEAKDLFMFNEAOAPQUCUBUDBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQTHUJBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIHUJURBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDHUJBBUKRUKICDCJEAKDLFMFNEAOAPQUSULICDCJEAKDLFMFNEAOAPQTBULUTICDCJEAKDLFMFNEAOAPQVGVAVHVIVJBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQTHUJBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIHUJICDCJEAKDLFMFNEAOAPQTRUABICDCJEAKDLFMFNEAOAPQTRUAUEBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQTHBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIHICDCJEAKDLFMFNEAOAPQTRUABICDCJEAKDLFMFNEAOAPQTRUAUEBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHICDCJEAKDLFMFNEAOAPQTRUAUEBBBGBGHICDCJEAKDLFMFNEAOAPQTBBBGBGHRUIICDCJEAKDLFMFNEAOAPQTRUABICDCJEAKDLFMFNEAOAPQTRUAUEBBGBGHICDCJEAKDLFMFNEAOAPQTRUAUEICDCJEAKDLFMFNEAOAPQTRUAUMUNUOUPBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDHUJBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIHUJICDCJEAKDLFMFNEAOAPQUCUBUDRUABICDCJEAKDLFMFNEAOAPQUCUBUDRUAUEBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDHBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIHICDCJEAKDLFMFNEAOAPQUCUBUDRUABICDCJEAKDLFMFNEAOAPQUCUBUDRUAUEBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHICDCJEAKDLFMFNEAOAPQUCUBUDRUAUEBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDBBBGBGHRUIICDCJEAKDLFMFNEAOAPQUCUBUDRUABICDCJEAKDLFMFNEAOAPQUCUBUDRUAUEBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDRUAUEICDCJEAKDLFMFNEAOAPQUCUBUDRUAUMUNUOUPVBBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDHUJBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIUBUDHUJICDCJEAKDLFMFNEAOAPQUCRUABICDCJEAKDLFMFNEAOAPQUCRUAUEBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDHBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIUBUDHICDCJEAKDLFMFNEAOAPQUCRUABICDCJEAKDLFMFNEAOAPQUCRUAUEBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHICDCJEAKDLFMFNEAOAPQUCRUAUEBBBGBGHICDCJEAKDLFMFNEAOAPQUCUBUDBBBGBGHRUIUBUDICDCJEAKDLFMFNEAOAPQUCRUABICDCJEAKDLFMFNEAOAPQUCRUAUEBBGBGHICDCJEAKDLFMFNEAOAPQUCRUAUERUAICDCJEAKDLFMFNEAOAPQUCICDCJEAKDLFMFNEAOAPQUCUBRUIUBICDCJEAKDLFMFNEAOAPQUCRUAUMUBICDCJEAKDLFMFNEAOAPQUCRUAUEVCUNUOUPBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUFUGUHUBUDHUJBBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIUBUDHUJICDCJEAKDLFMFNEAOAPQUFUGUHRUABICDCJEAKDLFMFNEAOAPQUFUGUHRUAUEBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHICDCJEAKDLFMFNEAOAPQUFUGUHUBUDHBBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHBBBGBGHRUIUBUDHICDCJEAKDLFMFNEAOAPQUFUGUHRUABICDCJEAKDLFMFNEAOAPQUFUGUHRUAUEBBBGBGHICDCJEASDKSLFMFNEAOAAPQTHICDCJEAKDLFMFNEAOAPQUFUGUHRUAUEBBBGBGHICDCJEAKDLFMFNEAOAPQUFUGUHUBUDBBBGBGHRUIUBUDICDCJEAKDLFMFNEAOAPQUFUGUHRUABICDCJEAKDLFMFNEAOAPQUFUGUHRUAUEBBGBGHICDCJEAKDLFMFNEAOAPQUFUGUHRUAUERUAICDCJEAKDLFMFNEAOAPQUFUGUHICDCJEAKDLFMFNEAOAPQUFUGUHUBRUIUBICDCJEAKDLFMFNEAOAPQUFUGUHRUAUMUBICDCJEAKDLFMFNEAOAPQUFUGUHRUAUEVCUNUOUPVB $.
sorting-rearrange-72 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R kore-element-var-VE0 kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell kore-element-var-VE0 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern typecode-cache-Pattern-74 IMP-sort-11-is-pattern in-sort-is-pattern typecode-cache-Pattern-73 top-is-pattern kore-top-is-pattern kore-and-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 IMP-sort-14-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-is-sort-is-pattern rule-imp-transitivity typecode-cache-Pattern-75 typecode-cache-Pattern-76 IMP-sort-5-is-pattern IMP-symbol-93-is-pattern IMP-sort-18-is-pattern string-literal-4-is-pattern kore-dv-is-pattern IMP-symbol-26-is-pattern IMP-symbol-150-is-pattern IMP-symbol-22-is-pattern kore-equals-is-pattern kore-implies-is-pattern kore-valid-is-pattern and-elim-left-sugar sorting-cache-123 sorting-cache-125 rule-and-intro-alt2-sugar IMP-axiom-352 ) ABICFGHJEEABCUAADADADADKADABCUBADKLLADUCADCFUDUEMBNOMOUFUGPUHQRUIPQRUJUKADKLULUMABICFGHJEEADSCFGHBNGHJEEABICFGHJEEABIADSABICFGHJEUNABUOTABCUPUQABCURT $.
substitution-250 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-5-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-251 $p #Substitution ( \kore-symbol-LblinitKCell kore-element-var-x0 ) ( \kore-symbol-LblinitKCell kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-93-substitution ) ADBCBCAEBCADFG $.
sorting-rearrange-73 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortMap ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-inj-is-pattern typecode-cache-Pattern-0 IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern string-literal-4-is-pattern kore-element-var-VE0-elementvariable kore-top-is-pattern IMP-symbol-14-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-and-is-pattern typecode-cache-Pattern-72 element-var-is-var kore-element-var-x0-elementvariable IMP-sort-11-is-pattern IMP-sort-18-is-pattern IMP-symbol-26-is-pattern IMP-symbol-150-is-pattern IMP-symbol-22-is-pattern IMP-sort-5-is-pattern IMP-symbol-93-is-pattern kore-equals-is-pattern typecode-cache-Pattern-74 top-is-pattern substitution-disjoint typecode-cache-Pattern-34 in-sort-is-pattern kore-implies-is-pattern and-is-pattern typecode-cache-Pattern-73 typecode-cache-Pattern-76 kore-valid-is-pattern kore-in-is-pattern kore-element-var-V0-elementvariable typecode-cache-Pattern-78 substitution-kore-and substitution-220 substitution-var-same top-intro rule-weakening rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-126 sorting-cache-135 typecode-cache-Pattern-51 eq-is-pattern exists-is-pattern sorting-cache-122 sorting-rearrange-55 kore-functional sorting-rearrange-72 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-93-substitution substitution-219 substitution-225 substitution-250 substitution-251 substitution-221 functional-substitution-alt ) ABVAABVALEFEIGCMFNHOHPGCQCRSUFURUOUTUTADADADADKADUFADLEFEIGCMFNHOHPGCQCRSBUCVDADKUBUBADUKADLEFEIGCMFNHOHPGCQCRSULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCABVAABVALEFEIGCMFNHOHPGCQCRSUFURUOUTABVRABVALEFEIGCMFNHOHPGCQCRSUFURUOABVSABVAUOVJVKVLVLLEFEIGCMFNHOHPGCQCRSADADADADKADABJVBADKUBUBADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCADADADADKADUFADLEFEIGCMFNHOHPGCQCRSBUCVDADKUBUBADUKADLEFEIGCMFNHOHPGCQCRSULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCADADADADKADABUEVFADKUBUBADUKADUEUQULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCABVAJUNUFURUOUTLEFEIGCMFNHOHPGCQCRSUFURUOUTUEUQUFURUOUTVEJUEABVAUOVEVTLEFEIGCMFNHOHPGCQCRSWAVEWBABVAUOVJVKUFLEFEIGCMFNHOHPGCQCRSUOVEWCVEWDWEVMABJWFLEFEIGCMFNHOHPGCQCRSLEFEIGCMFNHOHPGCQCRSUFURUOUTADADADADKADUFADLEFEIGCMFNHOHPGCQCRSBUCVDADKUBUBADUKADLEFEIGCMFNHOHPGCQCRSULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCJUNUFURUOUTADADADADKADABJVBADKUBUBADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCJUDLEFEIGCMFNHOHPGCQCRSLEFEIGCMFNHOHPGCQCRSUFURUOJUNUFURUOJUDLEFEIGCMFNHOHPGCQCRSLEFEIGCMFNHOHPGCQCRSUFJUNUFJUDLEFEIGCMFNHOHPGCQCRSJUDVIUFLEFEIGCMFNHOHPGCQCRSJUDUPWGUOLEFEIGCMFNHOHPGCQCRSJUDUPWHADADADADKADUFADLEFEIGCMFNHOHPGCQCRSBUCVDADKUBUBADUKADLEFEIGCMFNHOHPGCQCRSULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSADADADADKADABJVBADKUBUBADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSLEFEIGCMFNHOHPGCQCRSJUDADLEFEIGCMFNHOHPGCQCRSJUDUPADADADKADUFADLEFEIGCMFNHOHPGCQCRSBUCVDADKUBUBADUKADLEFEIGCMFNHOHPGCQCRSULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBADADADKADABJVBADKUBUBADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBLEFEIGCMFNHOHPGCQCRSJUDADLEFEIGCMFNHOHPGCQCRSJUDUPADADKADUFADLEFEIGCMFNHOHPGCQCRSBUCVDADKUBADADKADABJVBADKUBLEFEIGCMFNHOHPGCQCRSJUDADLEFEIGCMFNHOHPGCQCRSJUDUPADKLEFEIGCMFNHOHPGCQCRSJUDUPADUFADLEFEIGCMFNHOHPGCQCRSBUCVDADKADABJVBADKLEFEIGCMFNHOHPGCQCRSJUDADLEFEIGCMFNHOHPGCQCRSJUDUPUFADLEFEIGCMFNHOHPGCQCRSBUCUFADJUNBUCLEFEIGCMFNHOHPGCQCRSJUDUFLEFEIGCMFNHOHPGCQCRSJUDUPADLEFEIGCMFNHOHPGCQCRSJUDUPLEFEIGCMFNHOHPGCQCRSJUDVIBUCLEFEIGCMFNHOHPGCQCRSJUDUPWIADKLEFEIGCMFNHOHPGCQCRSJUDUPVGVGADUKADLEFEIGCMFNHOHPGCQCRSULUGFBUCEFEIGCUHTUAUICTUAUJUMADKADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKLEFEIGCMFNHOHPGCQCRSJUDADLEFEIGCMFNHOHPGCQCRSJUDUPUKADLEFEIGCMFNHOHPGCQCRSULUGFBUCEFEIGCUHTUAUICTUAUJUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJLEFEIGCMFNHOHPGCQCRSJUDUKLEFEIGCMFNHOHPGCQCRSJUDUPADLEFEIGCMFNHOHPGCQCRSJUDUPJUDLEFEIGCMFNHOHPGCQCRSLEFEIGCMFNHOHPGCQCRSJUNLEFEIGCMFNHOHPGCQCRSJUDVIWJUGFBUCEFEIGCUHTUAUICTUAUJLEFEIGCMFNHOHPGCQCRSJUDUPVNADKLEFEIGCMFNHOHPGCQCRSJUDUPVGVOVPVQUEUQUEUQUFURUOUTADADADADKADABUEVFADKUBUBADUKADUEUQULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCJUNUFURUOUTADADADADKADABJVBADKUBUBADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSVCJUDJUEWKADADADADKADABUEVFADKUBUBADUKADUEUQULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSADADADADKADABJVBADKUBUBADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUSUEUQJUDAJUEVHADADADKADABUEVFADKUBUBADUKADUEUQULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBADADADKADABJVBADKUBUBADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUBUEUQJUDAJUEVHABJUEWLADUKADUEUQULUGFBUCEFEIGCUHTUAUICTUAUJUMADKADUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUMADKUEUQJUDAJUEVHUKADUEUQULUGFBUCEFEIGCUHTUAUICTUAUJUKADJUNULUGFBUCEFEIGCUHTUAUICTUAUJUEUQJUDJUEWMAJUEVHJUEWNUGFBUCEFEIGCUHTUAUICTUAUJUEUQJUDUPVNAJUEWOVGVOVPVQWPVM $.
substitution-252 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-5-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-253 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-254 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-VE1 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-255 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-element-var-x0 kore-element-var-VE1 $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-256 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-x0 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup kore-element-var-VE1 ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-34 string-literal-4-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-26-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var KSEQ-symbol-0-is-pattern typecode-cache-Pattern-72 IMP-sort-18-is-pattern IMP-symbol-150-is-pattern substitution-253 substitution-254 substitution-var-same substitution-disjoint IMP-symbol-26-substitution substitution-255 KSEQ-symbol-0-substitution IMP-symbol-150-substitution substitution-kore-inj ) NDBECDCFGHIJLONDAMCDCFGHIJLOBEAKABPABQAKBEBECDCFGHIJLAMCDCFGHIJLAKBEBECDCFGHIJAMCDCFGHIJAKBEBECDCFGHAMCDCFGHBEAKRCDCFGHBEAKSTABUAUBUCUD $.
sorting-rearrange-74 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortMap kore-sort-var-R ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 string-literal-4-is-pattern IMP-symbol-14-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-element-var-VE1-elementvariable KSEQ-symbol-1-is-pattern kore-top-is-pattern KSEQ-symbol-0-is-pattern kore-and-is-pattern element-var-is-var IMP-sort-11-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-72 IMP-symbol-26-is-pattern IMP-sort-18-is-pattern IMP-symbol-150-is-pattern typecode-cache-Pattern-34 IMP-symbol-93-is-pattern IMP-sort-5-is-pattern kore-in-is-pattern IMP-symbol-22-is-pattern top-is-pattern substitution-disjoint kore-equals-is-pattern and-is-pattern in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-233 substitution-kore-and substitution-var-same KSEQ-symbol-0-substitution substitution-234 rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable rule-imp-transitivity substitution-kore-in IMP-symbol-22-substitution substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-140 top-intro rule-weakening sorting-rearrange-58 typecode-cache-Pattern-73 sorting-cache-138 sorting-rearrange-73 substitution-in-sort substitution-and IMP-symbol-26-substitution IMP-symbol-150-substitution substitution-kore-inj substitution-232 substitution-229 substitution-252 substitution-256 substitution-255 functional-substitution-alt ) AGVAUNUQAGVAUNUQICDCHEBJDKFLFMEBNBOPUCURUNUQUQAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUMUPAGSUAUSUTAGVAUNUQAGVAUNUQICDCHEBJDKFLFMEBNBOPUCURUNUQAVPAGVAUNUQICDCHEBJDKFLFMEBNBOPUCURUNAVQAGVAUNUQUNVRVSVGVGICDCHEBJDKFLFMEBNBOPAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAUSUTAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUMUPAGSUAUSUTAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPUDUIULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDUDUICDCHEBUFRTUHBRTUMUPAGSUAUSUTAGVAUNUQQUEUCURUNUQICDCHEBJDKFLFMEBNBOPUCURUNUQUDUIUCURUNUQVHQUDAVHVTAGVAUNUQQUEUCURUNUQUQAQWAAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAUSUTAQWBAQWCVIICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPUCURUNUQAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUMUPAGSUAUSUTQUEUCURUNUQAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAUSUTQUBICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPUCURUNQUEUCURUNQUBICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPUCQUEUCQUBICDCHEBJDKFLFMEBNBOPQUBVDUCICDCHEBJDKFLFMEBNBOPQUBUOWDUNICDCHEBJDKFLFMEBNBOPQUBUOWEAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUMUPAGSUAUSAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAUSICDCHEBJDKFLFMEBNBOPQUBAGICDCHEBJDKFLFMEBNBOPQUBUOAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUMUPAGSUAAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAICDCHEBJDKFLFMEBNBOPQUBAGICDCHEBJDKFLFMEBNBOPQUBUOAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPULAGSUAAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAICDCHEBJDKFLFMEBNBOPQUBAGICDCHEBJDKFLFMEBNBOPQUBUOAGSICDCHEBJDKFLFMEBNBOPQUBUOAGUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPULAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSICDCHEBJDKFLFMEBNBOPQUBAGICDCHEBJDKFLFMEBNBOPQUBUOUCAGICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPUCAGICDCHEBJDKFLFMEBNBOPQUEICDCHEBJDKFLFMEBNBOPQUBUCICDCHEBJDKFLFMEBNBOPQUBUOAGICDCHEBJDKFLFMEBNBOPQUBUOICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPQUBUOICDCHEBJDKFLFMEBNBOPQUBVDVJAGSICDCHEBJDKFLFMEBNBOPQUBUOVCVCAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUMUPAGSAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSICDCHEBJDKFLFMEBNBOPQUBAGICDCHEBJDKFLFMEBNBOPQUBUOUKAGICDCHEBJDKFLFMEBNBOPUJUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUMUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMICDCHEBJDKFLFMEBNBOPQUBUKICDCHEBJDKFLFMEBNBOPQUBUOAGICDCHEBJDKFLFMEBNBOPQUBUOICDCHEBJDKFLFMEBNBOPUJICDCHEBJDKFLFMEBNBOPQUBUOQUBICDCHEBJDKFLFMEBNBOPUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRTUGDQUECDCHEBUFRTUHBRTQUBICDCHEBJDKFLFMEBNBOPUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHBRUGDQUECDCHEBUFRTUHBRUGDICDCHEBJDKFLFMEBNBOPCDCHEBUFRTUHUGDQUECDCHEBUFRTUHICDCHEBJDKFLFMEBNBOPQUBUGICDCHEBJDKFLFMEBNBOPQUBUODICDCHEBJDKFLFMEBNBOPQUBUOQUBICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPCDCHEBUFRTQUECDCHEBUFRTQUBICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPCDCHEBUFRQUECDCHEBUFRQUBICDCHEBJDKFLFMEBNBOPICDCHEBJDKFLFMEBNBOPCDCHEBQUECDCHEBICDCHEBJDKFLFMEBNBOPQUBVDCDCHEBICDCHEBJDKFLFMEBNBOPQUBUOWFRICDCHEBJDKFLFMEBNBOPQUBUOVEWGWHRICDCHEBJDKFLFMEBNBOPQUBUOVEVKVLAGSICDCHEBJDKFLFMEBNBOPQUBUOVCVMVNVOUDUIUDUIUCURUNUQAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPUDUIULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDUDUICDCHEBUFRTUHBRTUMUPAGSUAUSUTQUEUCURUNUQAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAUSUTQUBQUDWIAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPUDUIULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDUDUICDCHEBUFRTUHBRTUMUPAGSUAUSAGAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAUSUDUIQUBAQUDVBAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPUDUIULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDUDUICDCHEBUFRTUHBRTUMUPAGSUAAGAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUAAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUAUDUIQUBAQUDVBAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPUDUIULAGSUAAGAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUAUDUIQUBAQUDVBAQUDVFAGUCAGICDCHEBJDKFLFMEBNBOPUDUIULAGSAGUCAGICDCHEBJDKFLFMEBNBOPQUEULAGSUDUIQUBAQUDVBUCAGICDCHEBJDKFLFMEBNBOPUDUIUCAGICDCHEBJDKFLFMEBNBOPQUEUDUIQUBQUDWJAQUDVBICDCHEBJDKFLFMEBNBOPUDUIQUBUOUDUIQUBVDVJAQUDVFVCVCAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDUDUICDCHEBUFRTUHBRTUMUPAGSAGUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUPAGSUDUIQUBAQUDVBUKAGICDCHEBJDKFLFMEBNBOPUJUGDUDUICDCHEBUFRTUHBRTUMUKAGICDCHEBJDKFLFMEBNBOPUJUGDQUECDCHEBUFRTUHBRTUMUDUIQUBQUDWKAQUDVBICDCHEBJDKFLFMEBNBOPUJUDUIQUBUOQUBUDUIUGDUDUICDCHEBUFRTUHBRTUGDQUECDCHEBUFRTUHBRTQUBUDUIUGDUDUICDCHEBUFRTUHBRUGDQUECDCHEBUFRTUHBRQUDWLQUDWMVEVKVLAQUDVFVCVMVNVOWNVI $.
sorting-rearrange-75 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortKCell kore-sort-var-R ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern string-literal-4-is-pattern IMP-symbol-14-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-sort-5-is-pattern IMP-symbol-93-is-pattern IMP-sort-18-is-pattern IMP-symbol-26-is-pattern IMP-symbol-150-is-pattern IMP-symbol-22-is-pattern kore-top-is-pattern kore-and-is-pattern kore-equals-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar kore-valid-is-pattern sorting-cache-68 and-elim-left-sugar top-intro rule-weakening in-sort-is-pattern IMP-sort-11-is-pattern kore-in-is-pattern imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp imp-reflexivity kore-implies-is-pattern sorting-rearrange-74 sorting-rearrange-62 kore-mp-alt kore-anp-top ) ABFDCABFDCABFDCDCCABUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJUMABFDCABFDCABFDCDCAUNABFDCABFDCDAUNABFDCDUPUQULULABUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABFDCABFDCDCCUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABURABFDCABFDCDCCUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABURVAUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABURABFDCABFDCDCCVBUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGVCVDABFDCABFDCDCCABFDCABABUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABUHUIUMABFDCABFDCDCCABFDABFDCABFDCDCCABFDCABFABFDCABFDCDCUOABFDCABFABFABFDUOABFVEUKUKABFDCABFDCDCCDUPUQULABFDCABFDCABFDCABFDCDCCCABABUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABUHUIUMABFDCABFDCABFDCABFDCDCCAUNABFDCABFDCABFDCDCAUNABFDCABFDCDAUNABFDCDUPUQULULULABABABUHABUSABLGHGKIEMHNJOJPIEQERSLGHGKIEMHNJOJPIEQERSUTABUHUIUIABUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABUHUIABFDCABFDCABFDCDCCCABFDCABFDCABFDCDCCCABFDCABABABABUHABUSABLGHGKIEMHNJOJPIEQERSLGHGKIEMHNJOJPIEQERSUTABUHUIUIABUBABLGHGKIEMHNJOJPIEQERSUCUDHLGHGKIEMHNJOJPIEQERSGHGKIEUETUAUFETUAUGUJABUHUIVFUMABFDCABFDCABFDCDCCCABFDABFDCABFDCABFDCDCCCABFDCABFABFDCABFDCABFDCDCCUOABFDUOUKABFDCABFDCABFDCDCCCDUPUQULAVGUKABFDCABFDCABFDCDCCCABFDCABABABUHABUSABLGHGKIEMHNJOJPIEQERSLGHGKIEMHNJOJPIEQERSUTABUHUIUIUMABFDCABFDCABFDCDCCUOAVHUKVIUKUKVJUK $.
substitution-257 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell \unit-sort kore-sort-var-R $= ( IMP-sort-5-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-258 $p #Substitution \kore-sort-SortKCell \kore-sort-SortKCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-5-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-76 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortKCell \unit-sort ( \kore-symbol-LblinitKCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern string-literal-4-is-pattern kore-sort-var-R-elementvariable IMP-symbol-14-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern top-is-pattern typecode-cache-Pattern-0 unit-sort-is-symbol symbol-is-pattern IMP-symbol-93-is-pattern IMP-sort-18-is-pattern IMP-symbol-26-is-pattern IMP-symbol-150-is-pattern IMP-symbol-22-is-pattern kore-sort-var-x0-elementvariable and-is-pattern IMP-sort-5-is-pattern typecode-cache-Pattern-14 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-58 typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-cache-56 sorting-rearrange-75 substitution-60 substitution-257 substitution-67 substitution-258 functional-substitution-alt ) RRTUAUKRUHUHTUAUITUAHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNRRTUAUKRUHRRUSURVEUTTUAGSUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNTUAUITUAHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNUGUJUIUGUJHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNRGSUKRUHTUAUKRUHUGUJUKRUHUOGUGRUOVFUOVGUOVHURRGSUKRUHUHGSUKRUHGSUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNRGSUKRUHUHGSUKRGVIRGSUKRUHUHRUSURUTGVJVATUATUAUKRUHTUAUITUAHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNGSUKRUHGSUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNGULGVKTUAUITUAHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMGSUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMTUAGULTUAGULUPUITUAHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFTUAGULGVLTUAGULUPHBCBFDAICJEKELDAMANOUBTUAGULUQUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFTUAGULUQVBVCVDUGUJUGUJUKRUHUGUJUIUGUJHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNGSUKRUHGSUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUNGULGUGVMUGUJUIUGUJHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMGSUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUMUGUJGULUGUJGULUPUIUGUJHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUIGSHBCBFDAICJEKELDAMANOUBUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUGUJGULGUGVNUGUJGULUPHBCBFDAICJEKELDAMANOUBUGUJGULUQUCCHBCBFDAICJEKELDAMANOBCBFDAUDPQUEAPQUFUGUJGULUQVBVCVDVOVA $.
sorting-cache-166 $p |- ( \imp \top ( \in-sort ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( IMP-sort-14-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern string-literal-4-is-pattern IMP-sort-15-is-pattern in-sort-is-pattern IMP-symbol-14-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-26-is-pattern top-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern and-is-pattern IMP-sort-11-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity KSEQ-symbol-0-is-pattern sorting-cache-122 sorting-cache-13 IMP-symbol-26-sorting sorting-cache-1 KSEQ-symbol-0-sorting ) QHACAEDBICJFKFLDBMBNOACAEDBPCGRSGTHACAEDBICJFKFLDBMBNOACAEDBPRUDSGQHACAEDBICJFKFLDBMBNOACAEDBPCGRSGQHACAEDBICJFKFLDBMBNOUAGACAEDBCGTHACAEDBICJFKFLDBMBNOACAEDBPCGQHACAEDBICJFKFLDBMBNOUAGACAEDBCGUEUFUBHACAEDBICJFKFLDBMBNOACAEDBUGUCUHUBHACAEDBICJFKFLDBMBNOACAEDBPRUIUC $.
sorting-cache-167 $p |- ( \imp \top ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-sort-SortKItem ) ) $= ( kore-inj-is-pattern IMP-sort-14-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern string-literal-4-is-pattern IMP-sort-15-is-pattern IMP-sort-18-is-pattern IMP-symbol-14-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-26-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-is-sort-is-pattern IMP-symbol-150-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-and-intro-alt2-sugar rule-imp-transitivity sorting-cache-14 sorting-cache-11 BASIC-K-sort-0-is-pattern sorting-cache-166 IMP-symbol-150-sorting INJ-symbol-0-sorting ) UBGSCSUCHBCBEDAICJFKFLDAMANOBCBEDAPQRTGUAUCGCHBCBEDAICJFKFLDAMANOBCBEDAPQRTACUAUBGSCSUCHBCBEDAICJFKFLDAMANOBCBEDAPQRTGUAUBGSCSUFUGUDUBHBCBEDAICJFKFLDAMANOBCBEDAPQRUHUAHBCBEDAICJFKFLDAMANOBCBEDAPQRTGUAUIHBCBEDAICJFKFLDAMANOBCBEDAPQRUJUEUDGCHBCBEDAICJFKFLDAMANOBCBEDAPQRTUKUE $.
equality-elim-2 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) \kore-symbol-LblinitBCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-6-is-pattern IMP-sort-15-is-pattern string-literal-4-is-pattern IMP-symbol-14-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern kore-top-is-pattern KSEQ-symbol-1-is-pattern kore-and-is-pattern IMP-sort-18-is-pattern KSEQ-symbol-0-is-pattern kore-element-var-x0-elementvariable IMP-symbol-26-is-pattern IMP-symbol-150-is-pattern element-var-is-var IMP-symbol-90-is-pattern IMP-symbol-93-is-pattern IMP-symbol-22-is-pattern IMP-symbol-91-is-pattern IMP-symbol-16-is-pattern IMP-symbol-20-is-pattern substitution-disjoint IMP-symbol-92-is-pattern typecode-cache-Pattern-34 in-sort-is-pattern kore-rewrites-star-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern IMP-sort-5-is-pattern rule-imp-transitivity substitution-var-same IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid kore-valid-is-pattern IMP-sort-11-is-pattern sorting-cache-122 IMP-symbol-93-sorting and-is-pattern sorting-cache-167 sorting-cache-1 rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting IMP-symbol-22-sorting sorting-rearrange-76 equality-elim-1 kore-equals-elim-alt ) URHCBCGDAIBJFKFLDAMANOUFSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRHCBCGDAIBJFKFLDAMANOUFUEUIUHUJRUOEEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRUAUMUEUIUHUJRUOVFEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUEUIUHUJRUOEEUPUAUPHCBCGDAIBJFKFLDAMANOVGUNHCBCGDAIBJFKFLDAMANOUFURUNVHHCBCGDAIBJFKFLDAMANOVIUSUPSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUQUNSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGURUNUPSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCABUNQUQUNVJSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUQUNUPSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCABUNQUQUNVKVLVMSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQVNUSSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTVOUSVPVQEEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRHCBCGDAIBJFKFLDAMANOUFUEUIUHUJRUOEEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRUAUMUEUIUHUJRUOHCBCGDAIBJFKFLDAMANOUFUAUDEHCBCGDAIBJFKFLDAMANOUFUAUDUKEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRHCBCGDAIBJFKFLDAMANOUFUEUIUHUJREEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRUAUMUEUIUHUJRHCBCGDAIBJFKFLDAMANOUFUAUDEHCBCGDAIBJFKFLDAMANOUFUAUDUKEEEPEPRHCBCGDASBISJFKFLDAMAANOULRHCBCGDAIBJFKFLDAMANOUFUAUDUKEEEPEPRHCBCGDAIBJFKFLDAMANOUFUEUIUHUJEEEPEPRUAUMUEUIUHUJHCBCGDAIBJFKFLDAMANOUFUAUDEHCBCGDAIBJFKFLDAMANOUFUAUDUKEEPEPRHCBCGDAIBJFKFLDAMANOUFUAUDUKUAUDHCBCGDAIBJFKFLDAMANOUFHCBCGDAIBJFKFLDAMANOUFUEUIUHUAUMUEUIUHUAUDHCBCGDAIBJFKFLDAMANOUFHCBCGDAIBJFKFLDAMANOUFUEUAUMUEHCBCGDAIBJFKFLDAMANOUFUAUDUTUEHCBCGDAIBJFKFLDAMANOUFUAUDUKVAUHHCBCGDAIBJFKFLDAMANOUFUAUDUKVBVCVDVEEEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUEUIUHUJRUOEEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRUAUMUEUIUHUJRUOSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDESBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUKEEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUEUIUHUJREEEEPEPRHCBCGDASBISJFKFLDAMAANOULREEEPEPRUAUMUEUIUHUJRSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDESBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUKEEEPEPRHCBCGDASBISJFKFLDAMAANOULRSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUKEEEPEPRSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUEUIUHUJEEEPEPRUAUMUEUIUHUJSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDESBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUKEEPEPRSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUKUAUDSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUEUIUHUAUMUEUIUHUAUDSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUEUAUMUESBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUTUESBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUKVAUHSBHCBCGDAIBJFKFLDAMANOCBCGDAUBQTUCAQTUGUAUDUKVBVCVDVEVR $.

$( NOTE: domain value reasoning checked by external tool $)
LblMapColnlookup-domain-fact-0 $a |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortKItem kore-sort-var-R ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $.
sorting-rearrange-77 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortKItem \unit-sort ( \kore-symbol-LblMap'Coln'lookup ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern kore-sort-var-R-elementvariable string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern top-is-pattern typecode-cache-Pattern-0 unit-sort-is-symbol symbol-is-pattern IMP-symbol-14-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-26-is-pattern kore-sort-var-x0-elementvariable and-is-pattern typecode-cache-Pattern-14 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-58 typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-cache-56 LblMapColnlookup-domain-fact-0 substitution-60 substitution-143 substitution-67 substitution-144 functional-substitution-alt ) MMOPUDMUBUBOPBOPQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGMMOPUDMUBMMULUKURUMOPFNBFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGOPBOPQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGUAUCBUAUCQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGMFNUDMUBOPUDMUBUAUCUDMUBUHFUAMUHUSUHUTUHVAUKMFNUDMUBUBFNUDMUBFNBFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGMFNUDMUBUBFNUDMFVBMFNUDMUBUBMULUKUMFVCUNOPOPUDMUBOPBOPQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGFNUDMUBFNBFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGFUEFVDOPBOPQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFFNBFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFOPFUEOPFUEUIBOPQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALABFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAOPFUEFVEOPFUEUIQCBCGDAHBIEJEKDALARSCBCGDATOPFUEUJHBIEJEKDALAOPFUEUJUOUPUQUAUCUAUCUDMUBUAUCBUAUCQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGFNUDMUBFNBFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUGFUEFUAVFUAUCBUAUCQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFFNBFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUFUAUCFUEUAUCFUEUIBUAUCQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALABFNQCBCGDAHBIEJEKDALARSCBCGDATHBIEJEKDALAUAUCFUEFUAVGUAUCFUEUIQCBCGDAHBIEJEKDALARSCBCGDATUAUCFUEUJHBIEJEKDALAUAUCFUEUJUOUPUQVHUN $.
equality-elim-3 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ) \kore-symbol-dotk ) ) \kore-symbol-LblinitBCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-inj-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-14-is-pattern kore-dv-is-pattern IMP-sort-15-is-pattern IMP-sort-6-is-pattern string-literal-4-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-element-var-x0-elementvariable IMP-sort-18-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-symbol-14-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern element-var-is-var IMP-symbol-26-is-pattern IMP-symbol-150-is-pattern IMP-symbol-90-is-pattern IMP-symbol-22-is-pattern substitution-disjoint IMP-symbol-91-is-pattern typecode-cache-Pattern-34 IMP-symbol-16-is-pattern IMP-symbol-20-is-pattern IMP-symbol-92-is-pattern kore-rewrites-star-is-pattern in-sort-is-pattern KSEQ-symbol-0-substitution top-is-pattern IMP-sort-11-is-pattern substitution-var-same IMP-symbol-150-substitution substitution-kore-inj IMP-symbol-22-substitution IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid kore-valid-is-pattern and-is-pattern sorting-cache-122 sorting-cache-13 rule-and-intro-alt2-sugar IMP-symbol-26-sorting rule-imp-transitivity sorting-cache-86 sorting-rearrange-77 equality-elim-2 kore-equals-elim-alt ) BSCBCGDAHBIEJEKDALATUACBCGDAUCHBIEJEKDALAFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMNUFUEUJUHUKRUMFFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBOUIMNUDAMNUFUEUJUHUKRUMVGFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBHBIEJEKDALAMNUDAMNUFUEUJUHUKRUMFFUPOUPSCBCGDAHBIEJEKDALATUAUQUNCBCGDABUNVHSCBCGDAHBIEJEKDALATUACBCGDAUCBUNUPSCBCGDAHBIEJEKDALATUAUQUNCBCGDABUNVIVJVKSCBCGDAHBIEJEKDALATUACBCGDAVLVMVNVOVPFFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMNUFUEUJUHUKRUMFFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBOUIMNUDAMNUFUEUJUHUKRUMSCBCGDAHBIEJEKDALATUACBCGDAUCOUBFSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMNUFUEUJUHUKRFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBOUIMNUDAMNUFUEUJUHUKRSCBCGDAHBIEJEKDALATUACBCGDAUCOUBFSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGFFFQFQRPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMNUFUEUJUHUKFFFQFQRPBOUIMNUDAMNUFUEUJUHUKSCBCGDAHBIEJEKDALATUACBCGDAUCOUBFSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGFFQFQRSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGOUBSCBCGDAHBIEJEKDALATUACBCGDAUCPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMNUFUEUJUHPBOUIMNUDAMNUFUEUJUHOUBSCBCGDAHBIEJEKDALATUACBCGDAUCPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMNUFUEPBOUIMNUDAMNUFUEOUBSCBCGDAHBIEJEKDALATUACBCGDAUCPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMNPBOUIMNUDAMNOUBSCBCGDAHBIEJEKDALATUACBCGDAUCPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDAMPBOUIMNUDAMPBSCBCGDAHBIEJEKDALATUACBCGDAUCMNUDPBOUIMNUDSCBCGDAHBIEJEKDALATUACBCGDAUCOUBPSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGBSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGOUBSCBCGDAHBIEJEKDALATUACBCGDAUCSCBCGDAHBIEJEKDALATUACBCGDAUCMNOUIMNOUBSCBCGDAHBIEJEKDALATUACBCGDAUCSCBCGDAHBIEJEKDALATUACBCGDAUCMOUIMSCBCGDAHBIEJEKDALATUACBCGDAUCOUBURMSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGUOUSUTMSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGUOVAUESCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGVBUHSCBCGDAHBIEJEKDALATUACBCGDAUCOUBUGVCVDVEVFFFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBHBIEJEKDALAMNUDAMNUFUEUJUHUKRUMFFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBOUIMNUDAMNUFUEUJUHUKRUMHBIEJEKDALAOUBFHBIEJEKDALAOUBUGFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBHBIEJEKDALAMNUDAMNUFUEUJUHUKRFFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRFFFQFQRPBOUIMNUDAMNUFUEUJUHUKRHBIEJEKDALAOUBFHBIEJEKDALAOUBUGFFFQFQRSCBCGDAPBHPIEJEKDALAATUAULRHBIEJEKDALAOUBUGFFFQFQRPBHBIEJEKDALAMNUDAMNUFUEUJUHUKFFFQFQRPBOUIMNUDAMNUFUEUJUHUKHBIEJEKDALAOUBFHBIEJEKDALAOUBUGFFQFQRHBIEJEKDALAOUBUGOUBHBIEJEKDALAPBHBIEJEKDALAMNUDAMNUFUEUJUHPBOUIMNUDAMNUFUEUJUHOUBHBIEJEKDALAPBHBIEJEKDALAMNUDAMNUFUEPBOUIMNUDAMNUFUEOUBHBIEJEKDALAPBHBIEJEKDALAMNUDAMNPBOUIMNUDAMNOUBHBIEJEKDALAPBHBIEJEKDALAMNUDAMPBOUIMNUDAMPBHBIEJEKDALAMNUDPBOUIMNUDHBIEJEKDALAOUBPHBIEJEKDALAOUBUGBHBIEJEKDALAOUBUGOUBHBIEJEKDALAHBIEJEKDALAMNOUIMNOUBHBIEJEKDALAHBIEJEKDALAMOUIMHBIEJEKDALAOUBURMHBIEJEKDALAOUBUGUOUSUTMHBIEJEKDALAOUBUGUOVAUEHBIEJEKDALAOUBUGVBUHHBIEJEKDALAOUBUGVCVDVEVFVQ $.
typecode-cache-Pattern-82 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-78 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern top-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-82 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-86 sorting-rearrange-46 kore-functional rule-imp-transitivity ) ABHFCOIGJDKDLMENEPCQABHFRSGIGJDKDLMENEFCTCUAUBUC $.
sorting-cache-168 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-82 typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-169 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortK ) ) $= ( typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-82 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-170 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-82 typecode-cache-Pattern-49 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern and-elim-left-sugar sorting-cache-169 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ACGBHIEFDDCJKEFACGBHIEFDDACGCJKEACGBHIEFDLACMNACGBHIEFDDFOPQ $.
typecode-cache-Pattern-83 $p #Pattern ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-49 BASIC-K-sort-1-is-pattern typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-cache-171 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-49 BASIC-K-sort-1-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-82 rule-imp-transitivity typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-83 sorting-cache-168 typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-170 ) ACIBEFDHGGAKLBCOACIBEFDHGGACIAKLACIBEFDHGMACPJACIBEFDHGGBEFDCQRDHGACIBEFDHGGBEFDHGBEFDACIBEFDHGSBEFDHGBEFDBEFDBEFDHMBEFDTJJABCUANN $.
typecode-cache-Pattern-84 $p #Pattern ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) $= ( typecode-cache-Pattern-49 typecode-cache-Pattern-47 KSEQ-symbol-0-is-pattern ) ACBDE $.
typecode-cache-Pattern-85 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 typecode-cache-Pattern-84 kore-equals-is-pattern ) EAFBGCDHI $.
sorting-rearrange-79 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-82 typecode-cache-Pattern-49 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-83 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-85 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-171 KSEQ-axiom-2 rule-imp-transitivity ) ADGCHIJKEEAFLCDMEAFNAFABCDOBPQACDRABCDST $.
typecode-cache-Pattern-86 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) kore-element-var-V2 ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-47 KSEQ-symbol-0-is-pattern kore-equals-is-pattern ) FAGBHIJKDLDMNEOECPQR $.
typecode-cache-Pattern-87 $p #Pattern ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) $= ( typecode-cache-Pattern-34 typecode-cache-Pattern-47 KSEQ-symbol-0-is-pattern ) BCADE $.
typecode-cache-Pattern-88 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 typecode-cache-Pattern-87 kore-equals-is-pattern ) EAFBGCDHI $.
substitution-259 $p #Substitution \kore-sort-SortKItem \kore-sort-SortKItem kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-1-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-260 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-34 BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-49 substitution-var-same substitution-259 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-261 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortKItem ) \top ) ( \and ( \in-sort kore-element-var-V1 \kore-sort-SortKItem ) \top ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-34 BASIC-K-sort-1-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-49 element-var-is-var substitution-260 substitution-161 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-262 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-263 $p #Substitution ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-47 typecode-cache-Pattern-49 substitution-var-same substitution-165 KSEQ-symbol-0-substitution ) AECDCDBFAGBFCDAEHABCIJ $.
substitution-264 $p #Substitution ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 typecode-cache-Pattern-87 typecode-cache-Pattern-84 typecode-cache-Pattern-34 element-var-is-var substitution-262 substitution-163 substitution-164 substitution-263 substitution-kore-equals ) FAGBHDEIFAGBHCDJEKCLCEMACENBCEOCDEPQ $.
substitution-265 $p #Substitution ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) ) ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-88 typecode-cache-Pattern-85 typecode-cache-Pattern-34 element-var-is-var substitution-262 substitution-163 substitution-264 substitution-kore-exists-alt ) FAGABDEHFAGABCDIEJBCKCELACEMABCDENO $.
substitution-266 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-x0 kore-element-var-V2 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq kore-element-var-V1 kore-element-var-V2 ) ) ) ) kore-element-var-x0 kore-element-var-V1 $= ( typecode-cache-Pattern-0 BASIC-K-sort-0-is-pattern kore-exists-is-pattern typecode-cache-Pattern-88 typecode-cache-Pattern-85 typecode-cache-Pattern-34 element-var-is-var substitution-163 substitution-265 substitution-kore-valid ) AFGAFABDEIBHAFGAFABCDJBHEKCLACEMABCDENO $.
sorting-cache-172 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) $= ( typecode-cache-Pattern-82 top-is-pattern typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern sorting-cache-168 sorting-cache-169 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-173 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-82 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-21-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-174 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-82 IMP-sort-15-is-pattern IMP-sort-10-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-15-sort IMP-sort-10-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-175 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-82 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-174 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-176 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) $= ( in-sort-is-pattern IMP-sort-15-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-sort-16-is-pattern typecode-cache-Pattern-82 string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern and-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp sorting-cache-175 rule-and-intro-alt2-sugar IMP-symbol-54-sorting rule-imp-transitivity ) ABHEGCDFDIJKFCLEDFDIJKMNCABHEGCDFDIJKFCEGCABHEGCOEGCABHPQRABSTEDFDIJKUAUB $.
sorting-cache-177 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-15-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern and-is-pattern in-sort-is-pattern typecode-cache-Pattern-82 sorting-cache-173 sorting-cache-176 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABODGEGMHCICJKFLDNMDEHCICJKFLFENABODGEGMHCICJKFLDNABPABQRDEHCICJKFLST $.
sorting-rearrange-80 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) kore-element-var-V2 ) ) ) ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern kore-element-var-V1-elementvariable IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-0 element-var-is-var BASIC-K-sort-0-is-pattern top-is-pattern in-sort-is-pattern and-is-pattern kore-exists-is-pattern substitution-disjoint kore-valid-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-82 typecode-cache-Pattern-49 typecode-cache-Pattern-86 typecode-cache-Pattern-85 typecode-cache-Pattern-47 typecode-cache-Pattern-34 typecode-cache-Pattern-51 rule-and-intro-alt2-sugar typecode-cache-Pattern-88 kore-element-var-Val-elementvariable substitution-var-same substitution-imp sorting-cache-172 sorting-cache-177 top-intro rule-weakening sorting-rearrange-78 sorting-rearrange-79 substitution-in-sort substitution-and KSEQ-symbol-0-is-pattern typecode-cache-Pattern-84 KSEQ-symbol-0-substitution substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-261 substitution-266 functional-substitution-alt rule-imp-transitivity ) ACUDACUDHFIDJDKLEMEFRQSSANPANABCUFBTUBACUDACUDHFIDJDKLEMEFRQSACUPACUDHFIDJDKLEMEFRQACUQACUDQURUSUKUKHFIDJDKLEMEANPANABGCUGBTUBANPANABCUFBTUBANPANABCUCULBTUBACUDGUEFRQSHFIDJDKLEMEFRQSUCUIFRQSUMGUCACUMUTABGCVAHFIDJDKLEMEHFIDJDKLEMEFRQSANPANABCUFBTUBGUEFRQSANPANABGCUGBTUBGOHFIDJDKLEMEHFIDJDKLEMEFRQGUEFRQGOHFIDJDKLEMEHFIDJDKLEMEFGUEFGOHFIDJDKLEMEGOUNFHFIDJDKLEMEGOUAVBQHFIDJDKLEMEGOUAVCANPANABCUFBTANPANABGCUGBTHFIDJDKLEMEGOANHFIDJDKLEMEGOUAPANABCUFPANABGCUGHFIDJDKLEMEBGOPHFIDJDKLEMEGOUAANHFIDJDKLEMEGOUAPANBUJHFIDJDKLEMECUHVDPANBUJGCVEHFIDJDKLEMEGOPHFIDJDKLEMEGOUAANHFIDJDKLEMEGOUABUJHFIDJDKLEMEGOUAGOHFIDJDKLEMEHFIDJDKLEMECUHGUECUHHFIDJDKLEMEGOUNCUHHFIDJDKLEMEGOUAVFVGVHVIUOUCUIUCUIFRQSANPANABCUCULBTUBGUEFRQSANPANABGCUGBTUBGOGUCVJABGCUCVKUOVLVM $.
typecode-cache-Pattern-89 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 KSEQ-symbol-1-is-pattern kore-equals-is-pattern ) CADBEFG $.
sorting-rearrange-81 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-89 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar KSEQ-axiom-3 rule-imp-transitivity ) CADFCEEADFCEADGADABHBIJCADFCEEADFCAKCADFCEECLMNABOP $.
typecode-cache-Pattern-90 $p #Pattern ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 \kore-symbol-dotk ) $= ( BASIC-K-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-51 KSEQ-symbol-1-is-pattern kore-equals-is-pattern ) BCDAEFG $.
typecode-cache-Pattern-91 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 \kore-symbol-dotk ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-51 KSEQ-symbol-1-is-pattern kore-equals-is-pattern ) CBDAEFG $.
substitution-267 $p #Substitution \kore-sort-SortK \kore-sort-SortK \unit-sort kore-sort-var-R $= ( BASIC-K-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-268 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk \unit-sort kore-sort-var-R $= ( KSEQ-symbol-1-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-269 $p #Substitution ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 \kore-symbol-dotk ) ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-51 KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-0 substitution-267 substitution-var-same substitution-214 substitution-268 substitution-kore-equals ) ECDBFGEAIBFGCDAHAJCDAHKABLAMN $.
substitution-270 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-sort-var-x0 kore-sort-var-R $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-271 $p #Substitution \kore-symbol-dotk \kore-symbol-dotk kore-sort-var-x0 kore-sort-var-R $= ( KSEQ-symbol-1-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-272 $p #Substitution ( \kore-equals \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 \kore-symbol-dotk ) ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-51 KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-0 substitution-270 substitution-var-same substitution-215 substitution-271 substitution-kore-equals ) ECDBFGEAIBFGCDAHACJCDAHKABCLACMN $.
substitution-273 $p #Substitution ( \kore-exists \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-x0 kore-element-var-V0 \kore-symbol-dotk ) ) ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 \kore-symbol-dotk ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-91 typecode-cache-Pattern-0 typecode-cache-Pattern-89 substitution-270 substitution-var-same substitution-272 substitution-kore-exists-alt ) ECDBCGEAHABICDBAFACJCDAFKABCLM $.
sorting-rearrange-82 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortK \unit-sort kore-element-var-V0 ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 \kore-symbol-dotk ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern kore-sort-var-x0-elementvariable BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 kore-exists-is-pattern typecode-cache-Pattern-14 and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern element-var-is-var typecode-cache-Pattern-89 typecode-cache-Pattern-90 x-is-element-var typecode-cache-Pattern-91 substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-81 substitution-60 substitution-267 substitution-269 substitution-kore-exists-alt substitution-67 substitution-273 functional-substitution-alt rule-imp-transitivity ) EECDLEKKCDGCDAPAIMEECDLEKEEUCTUDUECDBHGBHBAOAIMCDGCDAPAIMFJGFJAFRAIMEBHLEKCDLEKFJLEKQBFEQUFQUGQUHTBAUICDCDLEKCDGCDAPAIMBHLEKBHGBHBAOAIMBNBUJCDGCDAPAIBHGBHBAOAICDBNCDBNSGCDAPGBHBAOCDABNBUKCDBNSBAULUMUAUBFJFJLEKFJGFJAFRAIMBHLEKBHGBHBAOAIMBNBFUNFJGFJAFRAIBHGBHBAOAIFJBNFJBNSBAFUOUAUBUPUQ $.
sorting-rearrange-83 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 \kore-symbol-dotk ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern typecode-cache-Pattern-51 eq-is-pattern exists-is-pattern top-intro rule-weakening BASIC-K-sort-0-is-pattern sorting-cache-1 sorting-rearrange-82 kore-functional rule-imp-transitivity ) ADECFCBHGIBJADECFCKLMGCBNBOPQ $.
sorting-cache-178 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-179 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \in-sort kore-element-var-V2 \kore-sort-SortK ) ) $= ( typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-180 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-47 BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-178 sorting-cache-179 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-92 $p #Pattern ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) kore-element-var-x0 ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-34 KSEQ-symbol-0-is-pattern kore-equals-is-pattern ) FAGBHIJKDLDMNEOECPQR $.
substitution-274 $p #Substitution ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) \kore-symbol-dotk kore-element-var-V2 $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-47 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-275 $p #Substitution kore-sort-var-R kore-sort-var-R \kore-symbol-dotk kore-element-var-V2 $= ( typecode-cache-Pattern-0 KSEQ-symbol-1-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-276 $p #Substitution kore-element-var-V0 kore-element-var-V0 \kore-symbol-dotk kore-element-var-V2 $= ( typecode-cache-Pattern-51 KSEQ-symbol-1-is-pattern element-var-is-var substitution-disjoint ) ACDBEF $.
substitution-277 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-V2 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-278 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortK ) ( \in-sort kore-element-var-V2 \kore-sort-SortK ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-34 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-47 substitution-var-same substitution-277 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-279 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-V2 \kore-sort-SortK ) \top ) kore-element-var-x0 kore-element-var-V2 $= ( typecode-cache-Pattern-34 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-47 element-var-is-var substitution-278 substitution-206 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-280 $p #Substitution ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) kore-element-var-V2 ) ) kore-element-var-x0 kore-element-var-V2 $= ( IMP-sort-15-is-pattern kore-inj-is-pattern typecode-cache-Pattern-34 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern element-var-is-var BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-51 KSEQ-symbol-0-is-pattern typecode-cache-Pattern-47 substitution-277 substitution-208 substitution-209 substitution-disjoint substitution-var-same KSEQ-symbol-0-substitution substitution-kore-equals ) PAQBRHIJEKELMFNFDGSPAQBRHIJEKELMFNFCTSDGCOCDUAACDUBBCDUCCODGHIJEKELMFNFDGHIJEKELMFNFCTHIJEKELMFNFDGCOUDDGCOUEUFUG $.
sorting-cache-181 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) ) $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp ) BCDAEFGHBCDIBCDAEFGHJKL $.
sorting-cache-182 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern sorting-cache-181 top-intro rule-weakening rule-and-intro-alt2-sugar ) ACDBEFGHBAIACDBEBJKL $.
sorting-rearrange-84 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( typecode-cache-Pattern-0 kore-element-var-V2-elementvariable BASIC-K-sort-0-is-pattern KSEQ-symbol-1-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern and-is-pattern top-is-pattern kore-element-var-x0-elementvariable kore-exists-is-pattern element-var-is-var in-sort-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern kore-valid-is-pattern typecode-cache-Pattern-86 typecode-cache-Pattern-51 KSEQ-symbol-0-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-47 kore-equals-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-92 substitution-275 substitution-disjoint rule-imp-transitivity substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-208 sorting-cache-68 sorting-cache-182 rule-and-intro-alt2-sugar sorting-rearrange-83 typecode-cache-Pattern-82 sorting-cache-180 sorting-rearrange-80 substitution-274 substitution-276 substitution-var-same KSEQ-symbol-0-substitution substitution-kore-equals substitution-279 substitution-277 substitution-280 functional-substitution-alt ) ACUFJIACUFJIFENJIIACEACEACBUDOPQGRGSTHUAHFUEUHBLUBACUFJIACUFJIFENJIAURAUSUTFACEACABDUCBLUBACEACEACBUDOPQGRGSTHUAHFUEUHBLUBACEACABKUJBLUBACUFJIDUGENJIFENJIKUIENJIBDKABVAACUFJIDUGENJIIADVBACEACABDUCBLUBADVCABDVDUMFFENJIACEACEACBUDOPQGRGSTHUAHFUEUHBLUBDUGENJIACEACABDUCBLUBDMDVEACEACEACBUDOPQGRGSTHUAHFUEUHBLACEACABDUCBLFDMADUKEACEACBUDOPQGRGSTHUAHFUEUHEACABDUCFBDMEFDMULADUKEACBUDOPQGRGSTHUAHFUEEACBUDOPQGRGSTHUAHDUGUEFDMEFDMULADUKBDVFDMFOPQGRGSTHUAHFOPQGRGSTHUAHDUGOPQGRGSTHUAHFDMULFDMVGVHVIUNUOUPKUIKUIENJIACEACABKUJBLUBDUGENJIACEACABDUCBLUBDMDKVJACEACABKUJBLACEACABDUCBLKUIDMADKUQEACABKUJEACABDUCKUIBDMDKVKADKUQABDKVLUNUOUPVMUM $.
sorting-rearrange-85 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-equals \kore-sort-SortK kore-sort-var-R kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern BASIC-K-sort-0-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern typecode-cache-Pattern-51 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-84 rule-imp-transitivity ) CADFCEEADFCEADGADGADBJKLMHNHOPIQIRSTBUAUBCADFCEEADFCAUCCADFCEECUDUEUFABUGUH $.
sorting-rearrange-86 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortK \unit-sort kore-element-var-V0 ( \kore-equals \kore-sort-SortK \unit-sort kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ) ) ) $= ( kore-sort-var-R-elementvariable IMP-sort-15-is-pattern kore-inj-is-pattern BASIC-K-sort-0-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-51 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-267 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-270 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-85 substitution-60 substitution-214 substitution-67 substitution-215 functional-substitution-alt rule-imp-transitivity ) UAUAFGUFUAUEUEFGEFGEFGATJKLCMCNODPDQRUBAUDUGUAUAFGUFUAUEUAUAURUJUSUTFGBIEBIEBIATJKLCMCNODPDQRUBAUDUGFGEFGEFGATJKLCMCNODPDQRUBAUDUGHSEHSEHSATJKLCMCNODPDQRUBAUDUGUABIUFUAUEFGUFUAUEHSUFUAUEUIBHUAUIVAUIVBUIVCUJBAVDFGFGUFUAUEFGEFGEFGATJKLCMCNODPDQRUBAUDUGBIUFUAUEBIEBIEBIATJKLCMCNODPDQRUBAUDUGBUCBVEFGEFGEFGATJKLCMCNODPDQRUBAUDBIEBIEBIATJKLCMCNODPDQRUBAUDFGBUCFGBUCUHEFGEFGATJKLCMCNODPDQRUBEBIEBIATJKLCMCNODPDQRUBFGABUCBUKFGBUCUHEFGATJKLCMCNODPDQREBIATJKLCMCNODPDQRFGBUCBUKFGBUCUHBAVFJKLCMCNODPDQRFGBUCULUMUNUOUPHSHSUFUAUEHSEHSEHSATJKLCMCNODPDQRUBAUDUGBIUFUAUEBIEBIEBIATJKLCMCNODPDQRUBAUDUGBUCBHVGHSEHSEHSATJKLCMCNODPDQRUBAUDBIEBIEBIATJKLCMCNODPDQRUBAUDHSBUCHSBUCUHEHSEHSATJKLCMCNODPDQRUBEBIEBIATJKLCMCNODPDQRUBHSABUCBHUQHSBUCUHEHSATJKLCMCNODPDQREBIATJKLCMCNODPDQRHSBUCBHUQHSBUCUHBAHVHJKLCMCNODPDQRHSBUCULUMUNUOUPVIVJ $.
sorting-cache-183 $p |- ( \imp \top ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern in-sort-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern top-is-pattern and-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-86 sorting-cache-1 rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) MECFAGAHIBJBCDKLDNECFAGAHIBJBKOLDMECFAGAHIBJBCDKLDPQRECFAGAHIBJBKST $.
typecode-cache-Pattern-93 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-72 IMP-sort-18-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
sorting-rearrange-87 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern top-is-pattern typecode-cache-Pattern-93 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-51 eq-is-pattern exists-is-pattern top-intro rule-weakening BASIC-K-sort-0-is-pattern sorting-cache-183 sorting-rearrange-86 kore-functional rule-imp-transitivity ) ABGFCQHIJDKDLMENEOPRCSABGFTUAUBHIJDKDLMENEOPFCUCCUDUEUF $.
sorting-cache-184 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-93 typecode-cache-Pattern-72 IMP-sort-18-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABEACDACDACDBFGHIJKACDLM $.
sorting-cache-185 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) ) $= ( typecode-cache-Pattern-72 IMP-sort-18-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-93 typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBCDEFGBCDEAJKBCDEFGLBCDEFGBCDEBCDEBCDEFMBCDENHH $.
sorting-cache-186 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) \top ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-93 typecode-cache-Pattern-74 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-72 IMP-sort-18-is-pattern and-elim-left-sugar sorting-cache-185 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) ABGCHIEFDDBJKEFABGCHIEFDDABGBJKEABGCHIEFDLABMNABGCHIEFDDFOPQ $.
typecode-cache-Pattern-94 $p #Pattern ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-74 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-72 IMP-sort-18-is-pattern top-is-pattern ) BEFCAGHCIDD $.
sorting-cache-187 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-74 BASIC-K-sort-0-is-pattern and-is-pattern top-is-pattern typecode-cache-Pattern-93 rule-imp-transitivity typecode-cache-Pattern-0 kore-is-sort-is-pattern and-elim-left-sugar rule-and-intro-alt2-sugar typecode-cache-Pattern-94 sorting-cache-184 typecode-cache-Pattern-72 IMP-sort-18-is-pattern and-elim-right-sugar imp-reflexivity sorting-cache-186 ) ABICEFDHGGAKLBCOABICEFDHGGABIAKLABICEFDHGMABPJABICEFDHGGCEFDBQRDHGABICEFDHGGCEFDHGCEFDABICEFDHGSCEFDHGCEFDCEFDCEFDHMCEFDTJJABCUANN $.
typecode-cache-Pattern-95 $p #Pattern ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-74 IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-in-is-pattern ) DAECFGHBIJKLM $.
typecode-cache-Pattern-96 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-74 IMP-symbol-150-is-pattern typecode-cache-Pattern-72 kore-equals-is-pattern ) DAECFGBHI $.
typecode-cache-Pattern-97 $p #Pattern ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-x0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-34 IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-in-is-pattern ) DAECFGHBIJKLM $.
typecode-cache-Pattern-98 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) kore-element-var-VE1 ) $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-34 IMP-symbol-150-is-pattern typecode-cache-Pattern-72 kore-equals-is-pattern ) DAECFGBHI $.
substitution-281 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-VE0 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-282 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortK ) ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-281 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-283 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortK ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-282 substitution-218 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-284 $p #Substitution ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-x0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-in \kore-sort-SortK kore-sort-var-R kore-element-var-VE0 ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-72 kore-inj-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern element-var-is-var BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-74 substitution-281 substitution-220 substitution-var-same substitution-disjoint substitution-kore-in ) MANDEFGBHIJKMANCOFGBHIJKDECLCDPACDQDECLRFGBHIJKDECLST $.
substitution-285 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-286 $p #Substitution ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-150-substitution ) ADBCBCAEBCADFG $.
substitution-287 $p #Substitution ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) kore-element-var-VE1 ) ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-34 IMP-symbol-150-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-74 element-var-is-var substitution-285 substitution-220 substitution-286 substitution-222 substitution-kore-equals ) EAFDGHBIEAFCJHBIDGCKCDLACDMCDNBCDOP $.
substitution-288 $p #Substitution ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-x0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm kore-element-var-VE0 ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-0 kore-top-is-pattern typecode-cache-Pattern-98 typecode-cache-Pattern-96 typecode-cache-Pattern-34 element-var-is-var substitution-220 substitution-287 substitution-221 substitution-kore-and ) AEABDGAEFAEABCHAEFDICJACDKABCDLACDMN $.
sorting-cache-188 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) $= ( typecode-cache-Pattern-93 top-is-pattern typecode-cache-Pattern-72 IMP-sort-18-is-pattern in-sort-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern sorting-cache-184 sorting-cache-185 top-intro rule-weakening ) ABCAIJBEFGDKABLABCBEFGDABMABCDNOHH $.
sorting-cache-189 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-93 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-21-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-190 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-93 IMP-sort-15-is-pattern IMP-sort-10-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-15-sort IMP-sort-10-sort rule-and-intro-alt2-sugar ) ABDECFCECABDECGECABDHJIFCABDFCGFCABDHKIL $.
sorting-cache-191 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-93 kore-is-sort-is-pattern and-is-pattern kore-inj-is-pattern sorting-cache-190 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABHCIGIJCDECFJCGCDEKGFABHCIGIJCDECFABLCDECFABHCDECFMCDECFABHNCDOPQCGCDERS $.
sorting-cache-192 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) $= ( in-sort-is-pattern IMP-sort-15-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-sort-16-is-pattern typecode-cache-Pattern-93 string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern and-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp sorting-cache-191 rule-and-intro-alt2-sugar IMP-symbol-54-sorting rule-imp-transitivity ) ABHEGCDFDIJKFCLEDFDIJKMNCABHEGCDFDIJKFCEGCABHEGCOEGCABHPQRABSTEDFDIJKUAUB $.
sorting-cache-193 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortKItem ) ) $= ( IMP-sort-15-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern and-is-pattern in-sort-is-pattern typecode-cache-Pattern-93 sorting-cache-189 sorting-cache-192 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) ABODGEGMHCICJKFLDNMDEHCICJKFLFENABODGEGMHCICJKFLDNABPABQRDEHCICJKFLST $.
sorting-cache-194 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern in-sort-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-1-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-93 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern and-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-193 imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) ABIJGKCLCMNDODGEFHEPJGKCLCMNDODFQHEABIJGKCLCMNDODGEFHEABRFHEABIFHESFHEABITUAUBUCJGKCLCMNDODFUDUE $.
sorting-rearrange-88 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) kore-element-var-VE1 ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 kore-inj-is-pattern IMP-sort-15-is-pattern kore-element-var-VE0-elementvariable kore-top-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-and-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern element-var-is-var kore-element-var-x0-elementvariable BASIC-K-sort-0-is-pattern IMP-sort-18-is-pattern typecode-cache-Pattern-72 substitution-disjoint top-is-pattern in-sort-is-pattern and-is-pattern kore-implies-is-pattern typecode-cache-Pattern-95 kore-valid-is-pattern typecode-cache-Pattern-96 typecode-cache-Pattern-74 typecode-cache-Pattern-93 IMP-symbol-150-is-pattern kore-in-is-pattern typecode-cache-Pattern-34 kore-equals-is-pattern typecode-cache-Pattern-97 substitution-kore-and typecode-cache-Pattern-98 substitution-220 substitution-var-same rule-and-intro-alt2-sugar kore-element-var-V0-elementvariable rule-imp-transitivity substitution-kore-implies substitution-kore-valid substitution-imp substitution-221 sorting-cache-188 sorting-cache-194 top-intro rule-weakening sorting-rearrange-87 kore-is-sort-is-pattern typecode-cache-Pattern-94 sorting-cache-187 IMP-axiom-425 substitution-in-sort substitution-and substitution-kore-in IMP-symbol-150-substitution substitution-kore-equals substitution-283 substitution-284 substitution-288 functional-substitution-alt ) ABULABULLHMENEOPDQDIJTUEUDUFUFACACACACGACTACLHMENEOPDQDIJUAHBUBDIJUNACGKKACUAACLHMENEOPDQDIJUMBUBUPACGKUGUIABULABULLHMENEOPDQDIJTUEUDUFABVIABULLHMENEOPDQDIJTUEUDABVJABULUDVKVLVBVBLHMENEOPDQDIJACACACACGACABFUHACGKKACABFUJACGKUGUIACACACACGACTACLHMENEOPDQDIJUAHBUBDIJUNACGKKACUAACLHMENEOPDQDIJUMBUBUPACGKUGUIACACACACGACABSUQACGKKACABSUSACGKUGUIABULFUKTUEUDUFLHMENEOPDQDIJTUEUDUFSUOTUEUDUFVCFSABVCVMABULFUKTUEUDUFUFACVNBFVOUFACACACACGACABFUHACGKKACABFUJACGKUGUIABFVPABFVQVDLHMENEOPDQDIJLHMENEOPDQDIJTUEUDUFACACACACGACTACLHMENEOPDQDIJUAHBUBDIJUNACGKKACUAACLHMENEOPDQDIJUMBUBUPACGKUGUIFUKTUEUDUFACACACACGACABFUHACGKKACABFUJACGKUGUIFRLHMENEOPDQDIJLHMENEOPDQDIJTUEUDFUKTUEUDFRLHMENEOPDQDIJLHMENEOPDQDIJTFUKTFRLHMENEOPDQDIJFRVATLHMENEOPDQDIJFRUCVRUDLHMENEOPDQDIJFRUCVSACACACACGACTACLHMENEOPDQDIJUAHBUBDIJUNACGKKACUAACLHMENEOPDQDIJUMBUBUPACGKUGACACACACGACABFUHACGKKACABFUJACGKUGLHMENEOPDQDIJFRACLHMENEOPDQDIJFRUCACACACGACTACLHMENEOPDQDIJUAHBUBDIJUNACGKKACUAACLHMENEOPDQDIJUMBUBUPACGKACACACGACABFUHACGKKACABFUJACGKLHMENEOPDQDIJFRACLHMENEOPDQDIJFRUCACACGACTACLHMENEOPDQDIJUAHBUBDIJUNACGKACACGACABFUHACGKLHMENEOPDQDIJFRACLHMENEOPDQDIJFRUCACGLHMENEOPDQDIJFRUCACTACLHMENEOPDQDIJUAHBUBDIJUNACGACABFUHACGLHMENEOPDQDIJFRACLHMENEOPDQDIJFRUCTACLHMENEOPDQDIJUAHBUBDIJTACFUKUAHBUBDIJLHMENEOPDQDIJFRTLHMENEOPDQDIJFRUCACLHMENEOPDQDIJFRUCLHMENEOPDQDIJFRVAUAHBUBDIJLHMENEOPDQDIJFRUCVTACGLHMENEOPDQDIJFRUCURURACUAACLHMENEOPDQDIJUMBUBUPACGACABFUJACGLHMENEOPDQDIJFRACLHMENEOPDQDIJFRUCUAACLHMENEOPDQDIJUMBUBUAACFUKUMBUBLHMENEOPDQDIJFRUALHMENEOPDQDIJFRUCACLHMENEOPDQDIJFRUCFRLHMENEOPDQDIJLHMENEOPDQDIJFUKLHMENEOPDQDIJFRVAWABUBLHMENEOPDQDIJFRUCWBACGLHMENEOPDQDIJFRUCURVEVFVGSUOSUOTUEUDUFACACACACGACABSUQACGKKACABSUSACGKUGUIFUKTUEUDUFACACACACGACABFUHACGKKACABFUJACGKUGUIFRFSWCACACACACGACABSUQACGKKACABSUSACGKUGACACACACGACABFUHACGKKACABFUJACGKUGSUOFRAFSUTACACACGACABSUQACGKKACABSUSACGKACACACGACABFUHACGKKACABFUJACGKSUOFRAFSUTACACGACABSUQACGKACACGACABFUHACGKSUOFRAFSUTAFSVHACABSUQACGACABFUHACGSUOFRAFSUTABFSWDAFSVHURURABFSWEVEVFVGWFVD $.
typecode-cache-Pattern-99 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-From ) ) $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-21-is-pattern typecode-cache-Pattern-39 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
sorting-rearrange-89 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-From \kore-sort-SortStmt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-From ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-39 IMP-sort-21-is-pattern in-sort-is-pattern typecode-cache-Pattern-67 IMP-sort-18-is-pattern typecode-cache-Pattern-99 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-104 IMP-axiom-30 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-100 $p #Pattern ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-x0 ) ) $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-21-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern kore-equals-is-pattern ) DAEBFGDCHIJ $.
substitution-289 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-element-var-x0 kore-element-var-From $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-290 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-x0 ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-From ) kore-element-var-x0 kore-element-var-From $= ( typecode-cache-Pattern-34 IMP-sort-21-is-pattern IMP-sort-18-is-pattern element-var-is-var typecode-cache-Pattern-39 substitution-193 substitution-289 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-291 $p #Substitution ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-From ) ) kore-element-var-x0 kore-element-var-From $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-21-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern typecode-cache-Pattern-39 element-var-is-var substitution-289 substitution-111 substitution-113 substitution-290 substitution-kore-equals ) EAFBGHEDIJEAFBGHECKJDICLCDMACDNBCDOCDPQ $.
substitution-292 $p #Substitution ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm kore-element-var-From ) ) ) kore-element-var-x0 kore-element-var-From $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-100 typecode-cache-Pattern-99 typecode-cache-Pattern-34 element-var-is-var substitution-289 substitution-111 substitution-291 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
sorting-rearrange-90 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-inj-is-pattern kore-element-var-From-elementvariable IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern IMP-sort-18-is-pattern IMP-sort-21-is-pattern element-var-is-var top-is-pattern and-is-pattern kore-exists-is-pattern in-sort-is-pattern kore-element-var-x0-elementvariable substitution-disjoint typecode-cache-Pattern-23 kore-valid-is-pattern typecode-cache-Pattern-39 typecode-cache-Pattern-99 kore-is-sort-is-pattern kore-equals-is-pattern typecode-cache-Pattern-34 typecode-cache-Pattern-100 substitution-var-same substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-85 rule-and-intro-alt2-sugar sorting-rearrange-25 sorting-rearrange-89 substitution-in-sort substitution-and substitution-kore-inj substitution-kore-equals substitution-kore-exists-alt substitution-195 substitution-111 substitution-292 functional-substitution-alt rule-imp-transitivity ) ADUEOPADUEOPGCHCIJEKMROPPADLADLADBUAMLGCHCIJEKEUFBQUBADUEOPADUEOPGCHCIJEKMROPAULAUMUNGCHCIJEKADLADABFUDBQUBADLADLADBUAMLGCHCIJEKEUFBQUBADLADABSUHBQUBADUEOPFUCMROPGCHCIJEKMROPSUGMROPBFSABUOABFUPGCHCIJEKGCHCIJEKMROPADLADLADBUAMLGCHCIJEKEUFBQUBFUCMROPADLADABFUDBQUBFNGCHCIJEKGCHCIJEKMROFUCMROFNGCHCIJEKGCHCIJEKMFUCMFNGCHCIJEKFNUIMGCHCIJEKFNTUQOGCHCIJEKFNTURADLADLADBUAMLGCHCIJEKEUFBQADLADABFUDBQGCHCIJEKFNADGCHCIJEKFNTLADLADBUAMLGCHCIJEKEUFLADABFUDGCHCIJEKBFNLGCHCIJEKFNTADGCHCIJEKFNTLADBUAMLGCHCIJEKELADBUAMLFUCEGCHCIJEKFNLGCHCIJEKFNTADGCHCIJEKFNTBUAGCHCIJEKFNTMLGCHCIJEKMLFUCGCHCIJEKFNMGCHCIJEKFNTLGCHCIJEKFNTGCHCIJEKFNUIUSUTVAUJUKSUGSUGMROPADLADABSUHBQUBFUCMROPADLADABFUDBQUBFNFSVBADLADABSUHBQADLADABFUDBQSUGFNAFSVCABFSVDUJUKVEVF $.
sorting-rearrange-91 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortPgm kore-sort-var-R kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern IMP-sort-18-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern typecode-cache-Pattern-23 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern kore-equals-is-pattern kore-exists-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-90 rule-imp-transitivity ) CADFCEEADFCEADGADGADBJKGLHMHNOIPIQBRSCADFCEEADFCATCADFCEECUAUBUCABUDUE $.
substitution-293 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm \unit-sort kore-sort-var-R $= ( IMP-sort-18-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-294 $p #Substitution \kore-sort-SortPgm \kore-sort-SortPgm kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-18-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-92 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortPgm \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortPgm \unit-sort kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) $= ( IMP-sort-18-is-pattern kore-sort-var-R-elementvariable IMP-sort-15-is-pattern kore-inj-is-pattern unit-sort-is-symbol symbol-is-pattern kore-sort-var-x0-elementvariable typecode-cache-Pattern-0 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 top-is-pattern kore-equals-is-pattern element-var-is-var kore-exists-is-pattern and-is-pattern kore-is-sort-is-pattern kore-valid-is-pattern substitution-var-same x-is-element-var rule-weakening substitution-293 substitution-disjoint substitution-kore-equals substitution-kore-exists-alt substitution-kore-valid substitution-imp substitution-294 top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-91 substitution-60 substitution-62 substitution-67 substitution-69 functional-substitution-alt rule-imp-transitivity ) RRFGUCRUBUBFGBFGBFGAQJBKDLDMNEOESAUAUDRRFGUCRUBRRUOUGUPUQFGCIBCIBCIAQJBKDLDMNEOESAUAUDFGBFGBFGAQJBKDLDMNEOESAUAUDHPBHPBHPAQJBKDLDMNEOESAUAUDRCIUCRUBFGUCRUBHPUCRUBUFCHRUFURUFUSUFUTUGCAVAFGFGUCRUBFGBFGBFGAQJBKDLDMNEOESAUAUDCIUCRUBCIBCIBCIAQJBKDLDMNEOESAUAUDCTCVBFGBFGBFGAQJBKDLDMNEOESAUACIBCIBCIAQJBKDLDMNEOESAUAFGCTFGCTUEBFGBFGAQJBKDLDMNEOESBCIBCIAQJBKDLDMNEOESFGACTCUHFGCTUEBFGAQJBKDLDMNEOEBCIAQJBKDLDMNEOEFGCTCUHFGCTUECAVCJBKDLDMNEOEFGCTUIUJUKULUMHPHPUCRUBHPBHPBHPAQJBKDLDMNEOESAUAUDCIUCRUBCIBCIBCIAQJBKDLDMNEOESAUAUDCTCHVDHPBHPBHPAQJBKDLDMNEOESAUACIBCIBCIAQJBKDLDMNEOESAUAHPCTHPCTUEBHPBHPAQJBKDLDMNEOESBCIBCIAQJBKDLDMNEOESHPACTCHUNHPCTUEBHPAQJBKDLDMNEOEBCIAQJBKDLDMNEOEHPCTCHUNHPCTUECAHVEJBKDLDMNEOEHPCTUIUJUKULUMVFVG $.
sorting-rearrange-93 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \exists kore-element-var-Val ( \eq kore-element-var-Val ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( top-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern IMP-sort-18-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern and-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-23 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-21 sorting-rearrange-92 kore-functional rule-imp-transitivity ) AGHCICBPJFKDLDMNEOEQBRAGHCICSTFJFKDLDMNEOECBUABUBUCUD $.
sorting-cache-195 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-72 IMP-sort-18-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-196 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) ) $= ( typecode-cache-Pattern-72 IMP-sort-18-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-197 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-72 IMP-sort-18-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-195 sorting-cache-196 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
substitution-295 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortPgm ) ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-18-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-var-same substitution-253 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-296 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortPgm ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortPgm ) \top ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-18-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-295 substitution-231 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-297 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-VE1 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-298 $p #Substitution ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-253 substitution-254 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-299 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-x0 ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem kore-element-var-VE1 ) \kore-symbol-dotk ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-298 substitution-255 KSEQ-symbol-0-substitution ) AHBCDEBCFGDEAIFGABJABKL $.
sorting-cache-198 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-is-sort \kore-sort-SortPgm ) ) $= ( kore-is-sort-is-pattern IMP-sort-18-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 IMP-sort-18-sort proof-rule-mp ) CBADBEFCBGCBADBEFHIJ $.
sorting-cache-199 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortPgm ) ) ) $= ( kore-is-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern and-is-pattern IMP-sort-21-is-pattern IMP-sort-18-is-pattern sorting-cache-108 sorting-cache-198 rule-and-intro-alt2-sugar ) ACBDEFBGBAHAIJ $.
sorting-cache-200 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortPgm ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) ) $= ( kore-is-sort-is-pattern and-is-pattern IMP-sort-21-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 top-is-pattern IMP-sort-18-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern sorting-cache-199 sorting-cache-84 rule-and-intro-alt2-sugar ) AFBGCDBHBCIEJEKLMNDOAPAQR $.
sorting-cache-201 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortPgm ) ) $= ( IMP-sort-15-is-pattern IMP-sort-21-is-pattern IMP-sort-18-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern and-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 top-is-pattern sorting-cache-200 INJ-symbol-0-sorting rule-imp-transitivity ) ANFOGCFDFGHBIBJKELCMGCDHBIBJKELEDMAPCDHBIBJKELQR $.
sorting-rearrange-94 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-inj-is-pattern typecode-cache-Pattern-0 IMP-sort-15-is-pattern IMP-sort-18-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern kore-element-var-VE1-elementvariable BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-top-is-pattern kore-and-is-pattern element-var-is-var kore-element-var-x0-elementvariable typecode-cache-Pattern-72 BASIC-K-sort-0-is-pattern IMP-symbol-150-is-pattern typecode-cache-Pattern-34 kore-in-is-pattern top-is-pattern kore-equals-is-pattern substitution-disjoint and-is-pattern in-sort-is-pattern kore-implies-is-pattern kore-valid-is-pattern kore-is-sort-is-pattern substitution-233 substitution-kore-and substitution-var-same substitution-234 rule-and-intro-alt2-sugar kore-element-var-Val-elementvariable rule-imp-transitivity substitution-kore-in substitution-kore-equals substitution-kore-implies substitution-kore-valid substitution-imp sorting-cache-68 sorting-cache-201 top-intro rule-weakening sorting-rearrange-93 typecode-cache-Pattern-93 sorting-cache-197 sorting-rearrange-88 substitution-in-sort substitution-and substitution-kore-inj KSEQ-symbol-0-substitution substitution-296 substitution-297 substitution-299 substitution-253 functional-substitution-alt ) ACULUEUHACULUEUHFEGDHDIJBKBEUIUEUHUHACACACACPACUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUDACPQQACEACFMGDHDIJBKBNOUBFEGDHDIJBKBUFACPQUJUKACULUEUHACULUEUHFEGDHDIJBKBEUIUEUHAVEACULUEUHFEGDHDIJBKBEUIUEAVFACULUEUHUEVGVHUQUQFEGDHDIJBKBACACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQUJUKACACACACPACUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUDACPQQACEACFMGDHDIJBKBNOUBFEGDHDIJBKBUFACPQUJUKACACACACPACUAACFMGDHDIJBKBNOEMSUCBNOUDACPQQACEACFMGDHDIJBKBNOUBSUCUFACPQUJUKACULUEUHLTEUIUEUHFEGDHDIJBKBEUIUEUHSUCEUIUEUHURLSAURVIACULUEUHLTEUIUEUHUHALVJACACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQUJUKALVKALVLUSFEGDHDIJBKBFEGDHDIJBKBEUIUEUHACACACACPACUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUDACPQQACEACFMGDHDIJBKBNOUBFEGDHDIJBKBUFACPQUJUKLTEUIUEUHACACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQUJUKLRFEGDHDIJBKBFEGDHDIJBKBEUIUELTEUIUELRFEGDHDIJBKBFEGDHDIJBKBELTELRFEGDHDIJBKBLRUOEFEGDHDIJBKBLRUGVMUEFEGDHDIJBKBLRUGVNACACACACPACUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUDACPQQACEACFMGDHDIJBKBNOUBFEGDHDIJBKBUFACPQUJACACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQUJFEGDHDIJBKBLRACFEGDHDIJBKBLRUGACACACPACUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUDACPQQACEACFMGDHDIJBKBNOUBFEGDHDIJBKBUFACPQACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQFEGDHDIJBKBLRACFEGDHDIJBKBLRUGACACPACUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUDACPQACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQFEGDHDIJBKBLRACFEGDHDIJBKBLRUGACPFEGDHDIJBKBLRUGACUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUDACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPFEGDHDIJBKBLRACFEGDHDIJBKBLRUGUAACFMGDHDIJBKBNOEMFEGDHDIJBKBBNOUAACFMGDHDIJBKBNOEMLTBNOFEGDHDIJBKBLRUAFEGDHDIJBKBLRUGACFEGDHDIJBKBLRUGFMGDHDIJBKBNOFEGDHDIJBKBLRUGLRFEGDHDIJBKBEMFEGDHDIJBKBBNEMLTBNEMFEGDHDIJBKBEMLTFEGDHDIJBKBLREFEGDHDIJBKBLRUGMFEGDHDIJBKBLRUGFEGDHDIJBKBLRUOVONFEGDHDIJBKBLRUGVPUTACPFEGDHDIJBKBLRUGUNUNACEACFMGDHDIJBKBNOUBFEGDHDIJBKBUFACPACEACFMGDHDIJBKBNOUBLTUFACPFEGDHDIJBKBLRACFEGDHDIJBKBLRUGEACFMGDHDIJBKBNOUBFEGDHDIJBKBEACFMGDHDIJBKBNOUBLTFEGDHDIJBKBLREFEGDHDIJBKBLRUGACFEGDHDIJBKBLRUGFMGDHDIJBKBNOUBFEGDHDIJBKBLRUGFEGDHDIJBKBLRUOVAACPFEGDHDIJBKBLRUGUNVBVCVDSUCSUCEUIUEUHACACACACPACUAACFMGDHDIJBKBNOEMSUCBNOUDACPQQACEACFMGDHDIJBKBNOUBSUCUFACPQUJUKLTEUIUEUHACACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQUJUKLRLSVQACACACACPACUAACFMGDHDIJBKBNOEMSUCBNOUDACPQQACEACFMGDHDIJBKBNOUBSUCUFACPQUJACACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQUJSUCLRALSUMACACACPACUAACFMGDHDIJBKBNOEMSUCBNOUDACPQQACEACFMGDHDIJBKBNOUBSUCUFACPQACACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQQACEACFMGDHDIJBKBNOUBLTUFACPQSUCLRALSUMACACPACUAACFMGDHDIJBKBNOEMSUCBNOUDACPQACACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPQSUCLRALSUMALSUPACUAACFMGDHDIJBKBNOEMSUCBNOUDACPACUAACFMGDHDIJBKBNOEMLTBNOUDACPSUCLRALSUMUAACFMGDHDIJBKBNOEMSUCBNOUAACFMGDHDIJBKBNOEMLTBNOSUCLRLSVRALSUMFMGDHDIJBKBNOSUCLRUGLSVSUTALSUPUNUNACEACFMGDHDIJBKBNOUBSUCUFACPACEACFMGDHDIJBKBNOUBLTUFACPSUCLRALSUMEACFMGDHDIJBKBNOUBSUCEACFMGDHDIJBKBNOUBLTSUCLRLSVTALSUMFMGDHDIJBKBNOUBSUCLRUGSUCLRUOVAALSUPUNVBVCVDWAUS $.
sorting-cache-202 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortPgm ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-18-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) AECDBAECDBDBBFCGCFCAECDBAECDBDBBFCHFCAECDBAECDBDBBIKJGCAECDBAECDBDBBGCHGCAECDBAECDBDBBILJM $.
sorting-cache-203 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortPgm ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 IMP-sort-21-is-pattern IMP-sort-18-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-21-sort IMP-sort-18-sort rule-and-intro-alt2-sugar ) AECDBAECDBDBBFCGCFCAECDBAECDBDBBFCHFCAECDBAECDBDBBIKJGCAECDBAECDBDBBGCHGCAECDBAECDBDBBILJM $.
sorting-cache-204 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortInt ) ( \kore-is-sort \kore-sort-SortAExp ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 IMP-sort-15-is-pattern IMP-sort-10-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-15-sort IMP-sort-10-sort rule-and-intro-alt2-sugar ) AECDBAECDBDBBFCGCFCAECDBAECDBDBBFCHFCAECDBAECDBDBBIKJGCAECDBAECDBDBBGCHGCAECDBAECDBDBBILJM $.
sorting-cache-205 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) \kore-sort-SortAExp ) ) $= ( and-is-pattern IMP-sort-15-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern IMP-sort-10-is-pattern kore-inj-is-pattern sorting-cache-204 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AFDEBAFDEBEBBCDJDBCGHCIBCJCGHKJIAFDEBAFDEBEBBCDJDBCGHCIALCGHCIAFDEBAFDEBEBBCGHCIMCGHCIAFDEBAFDEBEBBNCGOPQCJCGHRS $.
sorting-cache-206 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \in-sort ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortStmt ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern in-sort-is-pattern IMP-sort-15-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-sort-16-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern IMP-symbol-54-is-pattern IMP-sort-21-is-pattern imp-is-pattern proof-rule-prop-1 IMP-symbol-83-sorting proof-rule-mp sorting-cache-205 rule-and-intro-alt2-sugar IMP-symbol-54-sorting rule-imp-transitivity ) ADECBADECBCBBHJFGIGKLMIFBHGIGKLMNOFADECBADECBCBBHJFGIGKLMIFHJFADECBADECBCBBHJFPHJFADECBADECBCBBQRSATUAHGIGKLMUBUC $.
sorting-cache-207 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortPgm ) ) $= ( and-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern top-is-pattern IMP-sort-21-is-pattern IMP-sort-18-is-pattern kore-inj-is-pattern typecode-cache-Pattern-0 IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern sorting-cache-203 sorting-cache-206 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AICEBAICEBEBBFCGCBJDKDLMHNFOBFGJDKDLMHNHGOAICEBAICEBEBBFCGCBJDKDLMHNFOAPAQRFGJDKDLMHNST $.
sorting-cache-208 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-sort-SortKItem ) ) $= ( and-is-pattern IMP-sort-18-is-pattern kore-inj-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern top-is-pattern BASIC-K-sort-1-is-pattern typecode-cache-Pattern-0 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern sorting-cache-202 sorting-cache-207 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AIEGBAIEGBGBBCEHEBJCKFLFMNDODCPBCHJCKFLFMNDODDHPAIEGBAIEGBGBBCEHEBJCKFLFMNDODCPAQARSCHJCKFLFMNDODTUA $.
sorting-cache-209 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \and ( \kore-is-sort \kore-sort-SortStmt ) ( \kore-is-sort \kore-sort-SortKItem ) ) ) $= ( and-is-pattern kore-is-sort-is-pattern top-is-pattern typecode-cache-Pattern-0 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern imp-is-pattern proof-rule-prop-1 proof-rule-mp IMP-sort-21-sort BASIC-K-sort-1-sort rule-and-intro-alt2-sugar ) AECDBAECDBDBBFCGCFCAECDBAECDBDBBFCHFCAECDBAECDBDBBIKJGCAECDBAECDBDBBGCHGCAECDBAECDBDBBILJM $.
sorting-cache-210 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \in-sort ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortKItem ) ) $= ( and-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern top-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern kore-inj-is-pattern typecode-cache-Pattern-0 IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern in-sort-is-pattern sorting-cache-209 sorting-cache-206 rule-and-intro-alt2-sugar INJ-symbol-0-sorting rule-imp-transitivity ) AICEBAICEBEBBFCGCBJDKDLMHNFOBFGJDKDLMHNHGOAICEBAICEBEBBFCGCBJDKDLMHNFOAPAQRFGJDKDLMHNST $.
sorting-rearrange-95 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-implies kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-0 IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-18-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-top-is-pattern kore-element-var-x0-elementvariable and-is-pattern top-is-pattern kore-and-is-pattern element-var-is-var kore-is-sort-is-pattern BASIC-K-sort-0-is-pattern substitution-disjoint kore-in-is-pattern kore-equals-is-pattern IMP-symbol-150-is-pattern typecode-cache-Pattern-34 kore-implies-is-pattern rule-imp-transitivity kore-valid-is-pattern substitution-kore-and top-intro rule-weakening rule-and-intro-alt2-sugar sorting-cache-68 unit-sort-is-symbol symbol-is-pattern and-elim-left-sugar substitution-var-same KSEQ-symbol-0-substitution substitution-kore-in substitution-kore-implies substitution-kore-valid sorting-cache-208 sorting-cache-210 sorting-rearrange-27 imp-reflexivity sorting-rearrange-94 kore-equals-elim-alt ) ADUARQADUARQADUARQRQQADADADADOADUBADEKFCGCHIBJBMNEKFCGCHIBJBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHUJADUARQADUARQADUARQRQAUOADUARQADUARQRAUOADUARQRULUMUNUNKLKELFCGCHIBJBBEKFCGCHIBJBADADADOADUBADEKFCGCHIBJBMNLKELFCGCHIBJBBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHADADADADOADUBADEKFCGCHIBJBMNPUGMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHUJADADADOADUBADEKFCGCHIBJBMNEKFCGCHIBJBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHADADADUARQADUARQRQQPAVDAVEADUARQADUARQRQQRUPUQKUPUQLKELFCGCHIBJBBEKFCGCHIBJBUEUJADUARQADUARQRQQRULUMVFUIADUARQADUARQRQQADUARQADADADADOADUBADEKFCGCHIBJBMNLKELFCGCHIBJBBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHUJADUARQADUARQRQQADUARADUARQADUARQRQQADUARQADUAADUARQADUARQRQURADUARQADUAADUAADUARURADUAVGUIUIADUARQADUARQRQQRULUMUNAVHUIADADADADOADUBADEKFCGCHIBJBMNLKELFCGCHIBJBBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHADADADADOADUBADEKFCGCHIBJBMNPUGMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHLKELFCGCHIBJBBPTADLKELFCGCHIBJBBPTUCADADADOADUBADEKFCGCHIBJBMNLKELFCGCHIBJBBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSADADADOADUBADEKFCGCHIBJBMNPUGMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSLKELFCGCHIBJBBPTADLKELFCGCHIBJBBPTUCADADOADUBADEKFCGCHIBJBMNLKELFCGCHIBJBBMNUDADOSADADOADUBADEKFCGCHIBJBMNPUGMNUDADOSLKELFCGCHIBJBBPTADLKELFCGCHIBJBBPTUCADOLKELFCGCHIBJBBPTUCADUBADEKFCGCHIBJBMNLKELFCGCHIBJBBMNUDADOADUBADEKFCGCHIBJBMNPUGMNUDADOLKELFCGCHIBJBBPTADLKELFCGCHIBJBBPTUCUBADEKFCGCHIBJBMNLKELFCGCHIBJBBMNUBADEKFCGCHIBJBMNPUGMNLKELFCGCHIBJBBPTUBLKELFCGCHIBJBBPTUCADLKELFCGCHIBJBBPTUCEKFCGCHIBJBMNLKELFCGCHIBJBBPTUCPTLKELFCGCHIBJBBLKELFCGCHIBJBBMPUGMLKELFCGCHIBJBBPTUSMLKELFCGCHIBJBBPTUCUTVAADOLKELFCGCHIBJBBPTUCUKUKADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSLKELFCGCHIBJBBPTUCVBVCADADADADOADUBADEKFCGCHIBJBMNEKFCGCHIBJBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHADADADADOADUBADEKFCGCHIBJBMNPUGMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSUHEKFCGCHIBJBPTADEKFCGCHIBJBPTUCADADADOADUBADEKFCGCHIBJBMNEKFCGCHIBJBMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSADADADOADUBADEKFCGCHIBJBMNPUGMNUDADOSSADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSEKFCGCHIBJBPTADEKFCGCHIBJBPTUCADADOADUBADEKFCGCHIBJBMNEKFCGCHIBJBMNUDADOSADADOADUBADEKFCGCHIBJBMNPUGMNUDADOSEKFCGCHIBJBPTADEKFCGCHIBJBPTUCADOEKFCGCHIBJBPTUCADUBADEKFCGCHIBJBMNEKFCGCHIBJBMNUDADOADUBADEKFCGCHIBJBMNPUGMNUDADOEKFCGCHIBJBPTADEKFCGCHIBJBPTUCUBADEKFCGCHIBJBMNEKFCGCHIBJBMNUBADEKFCGCHIBJBMNPUGMNEKFCGCHIBJBPTUBEKFCGCHIBJBPTUCADEKFCGCHIBJBPTUCEKFCGCHIBJBMNEKFCGCHIBJBPTUCPTEKFCGCHIBJBEKFCGCHIBJBMPUGMEKFCGCHIBJBPTUSMEKFCGCHIBJBPTUCUTVAADOEKFCGCHIBJBPTUCUKUKADLADEKFCGCHIBJBMNUFELFCGCHIBJBUEADOSEKFCGCHIBJBPTUCVBVCVIUI $.
sorting-cache-211 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) ) $= ( top-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp ) DEFAGHBCBCDEFIDEFAGHBCBCJKL $.
sorting-cache-212 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \in-sort ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) \kore-sort-SortK ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern BASIC-K-sort-1-is-pattern and-is-pattern in-sort-is-pattern top-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-156 sorting-cache-211 rule-and-intro-alt2-sugar KSEQ-symbol-0-sorting rule-imp-transitivity ) APQGEGEHDIBJBKLCMCDFNOFEHDIBJBKLCMCNROFAPQGEGEHDIBJBKLCMCDFNOFASATUAHDIBJBKLCMCNUBUC $.
sorting-rearrange-96 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-0 top-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern BASIC-K-sort-0-is-pattern kore-in-is-pattern kore-top-is-pattern in-sort-is-pattern rule-imp-transitivity kore-valid-is-pattern rule-and-intro-alt2-sugar sorting-cache-68 rule-weakening top-intro and-elim-left-sugar imp-is-pattern proof-rule-prop-1 proof-rule-mp predicate-intro-top rule-predicate-intro-and kore-and-is-pattern kore-in-sorting kore-top-sorting imp-reflexivity kore-is-sort-is-predicate sorting-cache-212 kore-in-reflexivity kore-top-valid kore-and-intro-alt ) ACEDBACEDBACEDBACEDBDBBBACACQACHIJFKFLMGNGOPHIJFKFLMGNGOPRACSUMUBACEDBACEDBACEDBACEDBDBBAUDACEDBACEDBACEDBDBAUDACEDBACEDBDAUDACEDBDUFUEUCUCUCACQACHIJFKFLMGNGOPHIJFKFLMGNGOPRACSACEDBACEDBACEDBDBBBQACHIJFKFLMGNGOPHIJFKFLMGNGOPRACTACEDBACEDBACEDBDBBBQACHIJFKFLMGNGOPHIJFKFLMGNGOPRACTUHQACHIJFKFLMGNGOPHIJFKFLMGNGOPRACTACEDBACEDBACEDBDBBBUIQACHIJFKFLMGNGOPHIJFKFLMGNGOPUNUJACSACTACEDBACEDBACEDBDBBBACSACTUHACSACTACEDBACEDBACEDBDBBBUIACUOUJACEDBACEDBACEDBDBBBACEDBACQACHIJFKFLMGNGOPHIJFKFLMGNGOPRUBACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBUGACEDBACEACEACEDUGACEUPUAUAACEDBACEDBACEDBDBBBDUFUEUCACEDBACEDBDBACQACHIJFKFLMGNGOPHIJFKFLMGNGOPRUBACEDBACEDBDAUDACEDBDUFUEUCQACHIJFKFLMGNGOPACEDBDBACEDBDACEDACUQUKULUKULAURUSUAUAACEDBACEDBACEDBDBBBACEDBACACSUBACEDBACEDBACEDBDBBUGACEDBACACSUBACUTUEUAVAUA $.
sorting-rearrange-97 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-and kore-sort-var-R ( \kore-in \kore-sort-SortK kore-sort-var-R ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-top kore-sort-var-R ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-top-is-pattern in-sort-is-pattern BASIC-K-sort-0-is-pattern kore-in-is-pattern rule-imp-transitivity kore-and-is-pattern rule-and-intro-alt2-sugar kore-valid-is-pattern sorting-cache-68 rule-weakening imp-is-pattern proof-rule-prop-1 proof-rule-mp and-elim-left-sugar top-intro kore-top-sorting kore-in-sorting kore-and-sorting imp-reflexivity kore-top-valid sorting-rearrange-96 kore-and-intro-alt ) ABEDCABEDCABEDCABEDCDCCCABABABQABSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABQUBUBUDABEDCABEDCABEDCABEDCDCCAUEABEDCABEDCABEDCDCAUEABEDCABEDCDAUEABEDCDUKUFUCUCUCABABQABSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABQUBABEDCABEDCABEDCDCCCABQABRABEDCABEDCABEDCDCCCABQABRUGABQABRABEDCABEDCABEDCDCCCUHABULUIABEDCABEDCABEDCDCCCSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABRABQABRCABSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABQUBABRABEDCABEDCABEDCDCCCSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABRABQABRSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABRABEDCABEDCABEDCDCCCSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABRUGSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABRABEDCABEDCABEDCDCCCUHSABHIJFKFLMGNGOPHIJFKFLMGNGOPUMUIABQABRABEDCABEDCABEDCDCCCABQABRUGABQABRABEDCABEDCABEDCDCCCUHABULUIUCABSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABQUNUAABEDCABEDCABEDCDCCCABEDCABABQUDABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCUJABEDCABEABEABEDUJABEUOUAUAABEDCABEDCABEDCDCCCDUKUFUCABEDCABABQUDABUPUFUAABEDCABEDCABEDCDCCCABEDCABABSABHIJFKFLMGNGOPHIJFKFLMGNGOPTABQUBUDABEDCABEDCABEDCDCCUJAUQUAURUA $.
sorting-rearrange-98 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-sort-18-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-symbol-150-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-68 BASIC-K-sort-0-is-pattern kore-in-is-pattern and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity sorting-rearrange-95 sorting-rearrange-97 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABSABHNIFJFKLGMGOPUBHSIFJFKLGMGUCABQRUDABEDCABEDCABEDCABEDCDCCAUEABEDCABEDCABEDCDCAUEABEDCABEDCDAUEABEDCDUIUJUAUAUAABABABQABUFABHNIFJFKLGMGOPHNIFJFKLGMGOPUGABQRRABSABHNIFJFKLGMGOPUBHSIFJFKLGMGUCABQRABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABQABUFABHNIFJFKLGMGOPHNIFJFKLGMGOPUGABQRRABSABHNIFJFKLGMGOPUBHSIFJFKLGMGUCABQRUKUDABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCUHABEDCABEABEABEDUHABEULTTABEDCABEDCABEDCDCCCDUIUJUAAUMTABEDCABEDCABEDCDCCCABEDCABABABQABUFABHNIFJFKLGMGOPHNIFJFKLGMGOPUGABQRRUDABEDCABEDCABEDCDCCUHAUNTUOT $.
sorting-rearrange-99 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortPgm kore-sort-var-R ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern IMP-sort-15-is-pattern kore-inj-is-pattern IMP-sort-18-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-150-is-pattern kore-equals-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar in-sort-is-pattern kore-valid-is-pattern sorting-cache-68 top-intro rule-weakening and-elim-left-sugar imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp kore-top-is-pattern kore-and-is-pattern imp-reflexivity sorting-rearrange-98 kore-anp-top ) ABEDCABEDCABEDCDCCABHABIOJFKFLMGNGPQRIHJFKFLMGNGSUCABEDCABEDCABEDCDCAUDABEDCABEDCDAUDABEDCDUEUFUAUAABHABIOJFKFLMGNGPQRIHJFKFLMGNGSABEDCABEDCDCCHABIOJFKFLMGNGPQRIHJFKFLMGNGSABUBABEDCABEDCDCCHABIOJFKFLMGNGPQRIHJFKFLMGNGSABUBUHHABIOJFKFLMGNGPQRIHJFKFLMGNGSABUBABEDCABEDCDCCUIHABIOJFKFLMGNGPQRIHJFKFLMGNGUJUKABEDCABEDCDCCABEDCABABHABIOJFKFLMGNGPQRIHJFKFLMGNGSABULUMUCABEDCABEDCDCCABEDABEDCABEDCDCCABEDCABEABEDCABEDCDCUGABEDCABEABEABEDUGABEUNTTABEDCABEDCDCCDUEUFUAAUOTUPT $.
sorting-rearrange-100 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortPgm \unit-sort ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern kore-sort-var-R-elementvariable IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern IMP-sort-18-is-pattern top-is-pattern typecode-cache-Pattern-0 unit-sort-is-symbol symbol-is-pattern BASIC-K-sort-1-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-150-is-pattern kore-sort-var-x0-elementvariable and-is-pattern typecode-cache-Pattern-14 kore-is-sort-is-pattern element-var-is-var kore-equals-is-pattern kore-valid-is-pattern x-is-element-var substitution-var-same substitution-disjoint rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-equals substitution-kore-valid substitution-imp sorting-cache-58 typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-cache-56 sorting-rearrange-99 substitution-60 substitution-293 substitution-67 substitution-294 functional-substitution-alt ) KKMNUBKTTMNJMNDOEAFAGHBIBPQRDJEAFAGHBIBUDUEKKMNUBKTKKUJUIUPUKMNCLJCLDOEAFAGHBIBPQRDJEAFAGHBIBUDUEMNJMNDOEAFAGHBIBPQRDJEAFAGHBIBUDUESUAJSUADOEAFAGHBIBPQRDJEAFAGHBIBUDUEKCLUBKTMNUBKTSUAUBKTUFCSKUFUQUFURUFUSUIKCLUBKTTCLUBKTCLJCLDOEAFAGHBIBPQRDJEAFAGHBIBUDUEKCLUBKTTCLUBKCUTKCLUBKTTKUJUIUKCVAULMNMNUBKTMNJMNDOEAFAGHBIBPQRDJEAFAGHBIBUDUECLUBKTCLJCLDOEAFAGHBIBPQRDJEAFAGHBIBUDUECUCCVBMNJMNDOEAFAGHBIBPQRDJEAFAGHBIBUDCLJCLDOEAFAGHBIBPQRDJEAFAGHBIBUDMNCUCMNCUCUGJMNDOEAFAGHBIBPQRDJEAFAGHBIBJCLDOEAFAGHBIBPQRDJEAFAGHBIBMNCUCCVCMNCUCUGDOEAFAGHBIBPQRMNCUCUHDJEAFAGHBIBMNCUCUHUMUNUOSUASUAUBKTSUAJSUADOEAFAGHBIBPQRDJEAFAGHBIBUDUECLUBKTCLJCLDOEAFAGHBIBPQRDJEAFAGHBIBUDUECUCCSVDSUAJSUADOEAFAGHBIBPQRDJEAFAGHBIBUDCLJCLDOEAFAGHBIBPQRDJEAFAGHBIBUDSUACUCSUACUCUGJSUADOEAFAGHBIBPQRDJEAFAGHBIBJCLDOEAFAGHBIBPQRDJEAFAGHBIBSUACUCCSVESUACUCUGDOEAFAGHBIBPQRSUACUCUHDJEAFAGHBIBSUACUCUHUMUNUOVFUL $.
sorting-cache-213 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lblproject'Coln'Pgm ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) \kore-sort-SortPgm ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern in-sort-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern IMP-symbol-150-is-pattern IMP-sort-18-is-pattern sorting-cache-183 IMP-symbol-150-sorting rule-imp-transitivity ) MCDEAFAGHBIBJKNLCDEAFAGHBIBJKOPLQCDEAFAGHBIBJKRS $.
equality-elim-4 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) \kore-symbol-dotk ) ) \kore-symbol-LblinitBCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-15-is-pattern IMP-sort-6-is-pattern IMP-sort-18-is-pattern BASIC-K-sort-1-is-pattern kore-dv-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern kore-top-is-pattern KSEQ-symbol-0-is-pattern kore-element-var-x0-elementvariable kore-and-is-pattern element-var-is-var IMP-symbol-150-is-pattern IMP-sort-14-is-pattern IMP-symbol-90-is-pattern IMP-symbol-22-is-pattern IMP-symbol-91-is-pattern substitution-disjoint IMP-symbol-16-is-pattern typecode-cache-Pattern-34 IMP-symbol-20-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-92-is-pattern kore-rewrites-star-is-pattern substitution-var-same substitution-kore-inj KSEQ-symbol-0-substitution IMP-symbol-22-substitution IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid kore-valid-is-pattern top-is-pattern sorting-cache-213 sorting-cache-21 sorting-rearrange-100 equality-elim-3 kore-equals-elim-alt ) DGEHBIBJFAKALNRGDHBIBJFAKACCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEGEHBIBJFAKALNRALNUATUDUBUFPULCCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEOUEALNUATUDUBUFPULVBCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEGDHBIBJFAKAALNUATUDUBUFPULCCVCOVDVEVFVGCCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEGEHBIBJFAKALNRALNUATUDUBUFPULCCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEOUEALNUATUDUBUFPULGEHBIBJFAKALNROQCGEHBIBJFAKALNROQUCCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEGEHBIBJFAKALNRALNUATUDUBUFPCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEOUEALNUATUDUBUFPGEHBIBJFAKALNROQCGEHBIBJFAKALNROQUCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPGEHBIBJFAKALNROQUCCCCMCMPDEGEHBIBJFAKALNRALNUATUDUBUFCCCMCMPDEOUEALNUATUDUBUFGEHBIBJFAKALNROQCGEHBIBJFAKALNROQUCCCMCMPGEHBIBJFAKALNROQUCOQGEHBIBJFAKALNRDEGEHBIBJFAKALNRALNUATUDUBDEOUEALNUATUDUBOQGEHBIBJFAKALNRDEGEHBIBJFAKALNRALNUATDEOUEALNUATOQGEHBIBJFAKALNRDEGEHBIBJFAKALNRALNDEOUEALNOQGEHBIBJFAKALNRDEGEHBIBJFAKALNRALDEOUEALDEGEHBIBJFAKALNRDEOUEGEHBIBJFAKALNROQDGEHBIBJFAKALNROQUCEGEHBIBJFAKALNROQUCGEHBIBJFAKALNROQUMUNLGEHBIBJFAKALNROQUCUOUPTGEHBIBJFAKALNROQUCUQUBGEHBIBJFAKALNROQUCURUSUTVACCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEGDHBIBJFAKAALNUATUDUBUFPULCCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEOUEALNUATUDUBUFPULGDHBIBJFAKAOQCGDHBIBJFAKAOQUCCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEGDHBIBJFAKAALNUATUDUBUFPCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPCCCMCMPDEOUEALNUATUDUBUFPGDHBIBJFAKAOQCGDHBIBJFAKAOQUCCCCMCMPUGSESUHFADEGDHBIBJFAKAAUIUJUKPGDHBIBJFAKAOQUCCCCMCMPDEGDHBIBJFAKAALNUATUDUBUFCCCMCMPDEOUEALNUATUDUBUFGDHBIBJFAKAOQCGDHBIBJFAKAOQUCCCMCMPGDHBIBJFAKAOQUCOQGDHBIBJFAKADEGDHBIBJFAKAALNUATUDUBDEOUEALNUATUDUBOQGDHBIBJFAKADEGDHBIBJFAKAALNUATDEOUEALNUATOQGDHBIBJFAKADEGDHBIBJFAKAALNDEOUEALNOQGDHBIBJFAKADEGDHBIBJFAKAALDEOUEALDEGDHBIBJFAKADEOUEGDHBIBJFAKAOQDGDHBIBJFAKAOQUCEGDHBIBJFAKAOQUCGDHBIBJFAKAOQUMUNLGDHBIBJFAKAOQUCUOUPTGDHBIBJFAKAOQUCUQUBGDHBIBJFAKAOQUCURUSUTVAVH $.
equality-elim-5 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) \kore-symbol-LblinitBCell ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( kore-inj-is-pattern IMP-sort-6-is-pattern IMP-sort-15-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-18-is-pattern kore-dv-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern IMP-symbol-54-is-pattern kore-top-is-pattern kore-and-is-pattern kore-element-var-x0-elementvariable KSEQ-symbol-1-is-pattern element-var-is-var KSEQ-symbol-0-is-pattern IMP-sort-14-is-pattern IMP-symbol-90-is-pattern IMP-symbol-22-is-pattern IMP-symbol-91-is-pattern IMP-symbol-16-is-pattern substitution-disjoint IMP-symbol-20-is-pattern typecode-cache-Pattern-34 IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-92-is-pattern kore-rewrites-star-is-pattern substitution-var-same KSEQ-symbol-0-substitution IMP-symbol-22-substitution IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid kore-valid-is-pattern top-is-pattern sorting-cache-22 sorting-cache-86 sorting-rearrange-27 equality-elim-4 kore-equals-elim-alt ) DEDGEHCICJFAKAAGDHCICJFAKABBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMEDGEHCICJFAKAAOQTSUBUAUDMUKBBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMNUEOQTSUBUAUDMUKUTBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMGDHCICJFAKAOQTSUBUAUDMUKBBVANVBVCVDVEBBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMEDGEHCICJFAKAAOQTSUBUAUDMUKBBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMNUEOQTSUBUAUDMUKEDGEHCICJFAKAANPBEDGEHCICJFAKAANPUCBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMEDGEHCICJFAKAAOQTSUBUAUDMBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMNUEOQTSUBUAUDMEDGEHCICJFAKAANPBEDGEHCICJFAKAANPUCBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMEDGEHCICJFAKAANPUCBBBLBLMEDGEHCICJFAKAAOQTSUBUAUDBBBLBLMNUEOQTSUBUAUDEDGEHCICJFAKAANPBEDGEHCICJFAKAANPUCBBLBLMEDGEHCICJFAKAANPUCNPEDGEHCICJFAKAAEDGEHCICJFAKAAOQTSUBUANUEOQTSUBUANPEDGEHCICJFAKAAEDGEHCICJFAKAAOQTSNUEOQTSNPEDGEHCICJFAKAAEDGEHCICJFAKAAOQNUEOQNPEDGEHCICJFAKAAEDGEHCICJFAKAAONUEOEDGEHCICJFAKAANPULOEDGEHCICJFAKAANPUCUMUNSEDGEHCICJFAKAANPUCUOUAEDGEHCICJFAKAANPUCUPUQURUSBBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMGDHCICJFAKAOQTSUBUAUDMUKBBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMNUEOQTSUBUAUDMUKGDHCICJFAKANPBGDHCICJFAKANPUCBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMGDHCICJFAKAOQTSUBUAUDMBBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMBBBLBLMNUEOQTSUBUAUDMGDHCICJFAKANPBGDHCICJFAKANPUCBBBLBLMUFRDRUGFAEDGEHCICJFAKAAUHUIUJMGDHCICJFAKANPUCBBBLBLMGDHCICJFAKAOQTSUBUAUDBBBLBLMNUEOQTSUBUAUDGDHCICJFAKANPBGDHCICJFAKANPUCBBLBLMGDHCICJFAKANPUCNPGDHCICJFAKAGDHCICJFAKAOQTSUBUANUEOQTSUBUANPGDHCICJFAKAGDHCICJFAKAOQTSNUEOQTSNPGDHCICJFAKAGDHCICJFAKAOQNUEOQNPGDHCICJFAKAGDHCICJFAKAONUEOGDHCICJFAKANPULOGDHCICJFAKANPUCUMUNSGDHCICJFAKANPUCUOUAGDHCICJFAKANPUCUPUQURUSVF $.
sorting-rearrange-101 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-top kore-sort-var-R ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( and-is-pattern typecode-cache-Pattern-0 top-is-pattern kore-is-sort-is-pattern kore-top-is-pattern rule-imp-transitivity in-sort-is-pattern kore-valid-is-pattern rule-weakening rule-and-intro-alt2-sugar and-elim-left-sugar sorting-cache-68 top-intro imp-is-pattern proof-rule-prop-1 kore-top-sorting proof-rule-mp imp-reflexivity kore-top-valid kore-and-is-pattern kore-and-intro-alt ) ACEDBACEDBACEDBACEDBDBBBACACACFACFUAIACEDBACEDBACEDBACEDBDBBAMACEDBACEDBACEDBDBAMACEDBACEDBDAMACEDBDNJKKKACACFACFACEDBACEDBACEDBDBBBACFACHACEDBACEDBACEDBDBBBACFACHOACFACHACEDBACEDBACEDBDBBBPACQRACFACHACEDBACEDBACEDBDBBBACFACHOACFACHACEDBACEDBACEDBDBBBPACQRACEDBACEDBACEDBDBBBACEDBACACFIACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBLACEDBACEACEACEDLACESGGACEDBACEDBACEDBDBBBDNJKACEDBACACFIACTJGACEDBACEDBACEDBDBBBACEDBACACFIACEDBACEDBACEDBDBBBACEDACEDBACEDBACEDBDBBBACEDBACEACEDBACEDBACEDBDBBLACEDBACEACEACEDLACESGGACEDBACEDBACEDBDBBBDNJKACEDBACACFIACTJGUBG $.
sorting-rearrange-102 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBCell kore-sort-var-R \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-top-is-pattern kore-and-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-sort-2-is-pattern IMP-symbol-90-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-68 and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity IMP-axiom-349 sorting-rearrange-101 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABJABKLMNOPABFGQABEDCABEDCABEDCABEDCDCCARABEDCABEDCABEDCDCARABEDCABEDCDARABEDCDTUAIIIABABABFABFGABJABKLMNOPABFGABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABFABFGABJABKLMNOPABFGUBQABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCSABEDCABEABEABEDSABEUCHHABEDCABEDCABEDCDCCCDTUAIAUDHABEDCABEDCABEDCDCCCABEDCABABABFABFGQABEDCABEDCABEDCDCCSAUEHUFH $.
sorting-rearrange-103 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBCell kore-sort-var-R \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 top-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-2-is-pattern IMP-symbol-90-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern sorting-cache-159 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-102 rule-imp-transitivity ) ABECDCDABECDABABFABGHIJKLABMNOABECDCDABECAPABECDCDCQRSATUA $.
sorting-rearrange-104 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortBCell kore-sort-var-R \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern rule-imp-transitivity and-elim-left-sugar IMP-sort-2-is-pattern IMP-symbol-90-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-102 ) ABEDCABEDCDCCABEDCABABHABIJKLMNABOPQABEDCABEDCDCCABEDABEDCABEDCDCCABEDCABEABEDCABEDCDCGABEDCABEABEABEDGABERFFABEDCABEDCDCCDSTUAAUBF $.
sorting-rearrange-105 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortBCell kore-sort-var-R \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern IMP-sort-2-is-pattern IMP-symbol-90-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern kore-equals-is-pattern in-sort-is-pattern sorting-cache-68 rule-and-intro-alt2-sugar kore-valid-is-pattern top-intro rule-weakening imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp sorting-rearrange-104 kore-anp-top rule-imp-transitivity ) ABEDCABEDCABEDCDCCABFABGHIJKLPABEDCABEDCABEDCDCANABEDCABEDCDANABEDCDQROOABFABGHIJKLABEDCABEDCDCCFABGHIJKLABMABEDCABEDCDCCFABGHIJKLABMSFABGHIJKLABMABEDCABEDCDCCTFABGHIJKUAUBAUCUDUE $.
sorting-rearrange-106 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortBCell kore-sort-var-R \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern IMP-sort-2-is-pattern IMP-symbol-90-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-105 rule-imp-transitivity ) BACEBDDACEBDACFACGHIJKLMBACEBDDACEBANBACEBDDBOPQARS $.
substitution-300 $p #Substitution \kore-sort-SortBCell \kore-sort-SortBCell \unit-sort kore-sort-var-R $= ( IMP-sort-2-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-301 $p #Substitution \kore-symbol-LblinitBCell \kore-symbol-LblinitBCell \unit-sort kore-sort-var-R $= ( IMP-symbol-90-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-302 $p #Substitution \kore-sort-SortBCell \kore-sort-SortBCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-2-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-303 $p #Substitution \kore-symbol-LblinitBCell \kore-symbol-LblinitBCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-90-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-304 $p #Substitution ( \kore-equals \kore-sort-SortBCell kore-sort-var-x0 \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortBCell kore-sort-var-R \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern element-var-is-var IMP-sort-2-is-pattern IMP-symbol-90-is-pattern typecode-cache-Pattern-0 substitution-302 substitution-var-same substitution-303 substitution-disjoint substitution-kore-equals ) IBCJDEFGIAKJDEFGBCAHABLBCAHMABNDEFGBCAHOP $.
sorting-rearrange-107 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortBCell \unit-sort \kore-symbol-LblinitBCell ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern IMP-sort-2-is-pattern IMP-symbol-90-is-pattern typecode-cache-Pattern-0 kore-sort-var-x0-elementvariable kore-equals-is-pattern typecode-cache-Pattern-14 and-is-pattern kore-is-sort-is-pattern element-var-is-var kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-106 substitution-60 substitution-300 substitution-301 substitution-disjoint substitution-kore-equals substitution-67 substitution-304 functional-substitution-alt rule-imp-transitivity ) DDBCPDOOBCIBCJEFGHMRDDBCPDODDUDUAUEUFBCAKIAKJEFGHMRBCIBCJEFGHMRLNILNJEFGHMRDAKPDOBCPDOLNPDOSALDSUGSUHSUIUAAUJBCBCPDOBCIBCJEFGHMRAKPDOAKIAKJEFGHMRAQAUKBCIBCJEFGHMAKIAKJEFGHMBCAQBCAQTIBCJEFGHIAKJEFGHBCAQAULBCAQTAUMEFGHBCAQUNUOUBUCLNLNPDOLNILNJEFGHMRAKPDOAKIAKJEFGHMRAQALUPLNILNJEFGHMAKIAKJEFGHMLNAQLNAQTALUQUBUCURUS $.
equality-elim-6 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-symbol-LblinitGeneratedCounterCell ) ) ) ) ) $= ( IMP-sort-6-is-pattern kore-inj-is-pattern IMP-sort-15-is-pattern kore-dv-is-pattern kore-top-is-pattern string-literal-0-is-pattern kore-and-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern kore-element-var-x0-elementvariable IMP-sort-14-is-pattern IMP-sort-18-is-pattern element-var-is-var KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-22-is-pattern IMP-symbol-91-is-pattern IMP-symbol-90-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-20-is-pattern substitution-disjoint IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-92-is-pattern typecode-cache-Pattern-34 kore-rewrites-star-is-pattern substitution-var-same IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid IMP-sort-2-is-pattern kore-valid-is-pattern top-is-pattern sorting-cache-163 sorting-cache-4 sorting-rearrange-107 equality-elim-5 kore-equals-elim-alt ) USUACFDUBAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSUAUCTUDGULAAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSMUKUCTUDGULUTAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSCFDUBUCTUDGULAAVAMVBVCVDVEAAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSUAUCTUDGULAAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSMUKUCTUDGULUAMPAUAMPUEAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSUAUCTUDGAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSMUKUCTUDGUAMPAUAMPUEAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGUAMPUEAAAEAEGIHJCKCFDBLBQRSUAUCTUDAAAEAEGIHJCKCFDBLBQRSMUKUCTUDUAMPAUAMPUEAAEAEGUAMPUEMPUAIHJCKCFDBLBQRSUAUCTIHJCKCFDBLBQRSMUKUCTMPUAIHJCKCFDBLBQRSUAIHJCKCFDBLBQRSMUKIHJCKCFDBLBQRSUAMPUEUAMPUMUNTUAMPUEUOUPUQURAAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSCFDUBUCTUDGULAAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSMUKUCTUDGULCFDUBMPACFDUBMPUEAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSCFDUBUCTUDGAAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGAAAEAEGIHJCKCFDBLBQRSMUKUCTUDGCFDUBMPACFDUBMPUEAAAEAEGUFNHNUGDBOHIOJCKCFDBLBBUHUIUJGCFDUBMPUEAAAEAEGIHJCKCFDBLBQRSCFDUBUCTUDAAAEAEGIHJCKCFDBLBQRSMUKUCTUDCFDUBMPACFDUBMPUEAAEAEGCFDUBMPUEMPCFDUBIHJCKCFDBLBQRSCFDUBUCTIHJCKCFDBLBQRSMUKUCTMPCFDUBIHJCKCFDBLBQRSCFDUBIHJCKCFDBLBQRSMUKIHJCKCFDBLBQRSCFDUBMPUECFDUBMPUMUNTCFDUBMPUEUOUPUQURVF $.
sorting-rearrange-108 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern kore-top-is-pattern kore-and-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar IMP-sort-7-is-pattern IMP-symbol-91-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-68 and-elim-left-sugar top-intro rule-weakening kore-implies-is-pattern imp-reflexivity IMP-axiom-350 sorting-rearrange-101 kore-mp-alt ) ABEDCABEDCABEDCABEDCDCCCABABJABKLMNOPABFGQABEDCABEDCABEDCABEDCDCCARABEDCABEDCABEDCDCARABEDCABEDCDARABEDCDTUAIIIABABABFABFGABJABKLMNOPABFGABEDCABEDCABEDCDCCCABEDCABEDCABEDCDCCCABEDCABABABABFABFGABJABKLMNOPABFGUBQABEDCABEDCABEDCDCCCABEDABEDCABEDCABEDCDCCCABEDCABEABEDCABEDCABEDCDCCSABEDCABEABEABEDSABEUCHHABEDCABEDCABEDCDCCCDTUAIAUDHABEDCABEDCABEDCDCCCABEDCABABABFABFGQABEDCABEDCABEDCDCCSAUEHUFH $.
sorting-rearrange-109 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 top-is-pattern and-is-pattern kore-is-sort-is-pattern IMP-sort-7-is-pattern IMP-symbol-91-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern sorting-cache-159 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-108 rule-imp-transitivity ) ABECDCDABECDABABFABGHIJKLABMNOABECDCDABECAPABECDCDCQRSATUA $.
sorting-rearrange-110 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-and kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-top kore-sort-var-R ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern rule-imp-transitivity and-elim-left-sugar IMP-sort-7-is-pattern IMP-symbol-91-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern kore-top-is-pattern kore-and-is-pattern kore-valid-is-pattern imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-108 ) ABEDCABEDCDCCABEDCABABHABIJKLMNABOPQABEDCABEDCDCCABEDABEDCABEDCDCCABEDCABEABEDCABEDCDCGABEDCABEABEABEDGABERFFABEDCABEDCDCCDSTUAAUBF $.
sorting-rearrange-111 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern IMP-sort-7-is-pattern IMP-symbol-91-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern in-sort-is-pattern sorting-cache-68 rule-and-intro-alt2-sugar kore-valid-is-pattern top-intro rule-weakening imp-is-pattern proof-rule-prop-1 kore-equals-sorting proof-rule-mp sorting-rearrange-110 kore-anp-top rule-imp-transitivity ) ABEDCABEDCABEDCDCCABFABGHIJKLPABEDCABEDCABEDCDCANABEDCABEDCDANABEDCDQROOABFABGHIJKLABEDCABEDCDCCFABGHIJKLABMABEDCABEDCDCCFABGHIJKLABMSFABGHIJKLABMABEDCABEDCDCCTFABGHIJKUAUBAUCUDUE $.
sorting-rearrange-112 $p |- ( \imp ( \and \top ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( top-is-pattern typecode-cache-Pattern-0 and-is-pattern kore-is-sort-is-pattern IMP-sort-7-is-pattern IMP-symbol-91-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern kore-valid-is-pattern sorting-cache-56 top-intro rule-weakening rule-and-intro-alt2-sugar sorting-rearrange-111 rule-imp-transitivity ) BACEBDDACEBDACFACGHIJKLMBACEBDDACEBANBACEBDDBOPQARS $.
substitution-305 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell \unit-sort kore-sort-var-R $= ( IMP-sort-7-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-306 $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell \unit-sort kore-sort-var-R $= ( IMP-symbol-91-is-pattern unit-sort-is-symbol symbol-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-307 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-308 $p #Substitution \kore-symbol-LblinitGeneratedCounterCell \kore-symbol-LblinitGeneratedCounterCell kore-sort-var-x0 kore-sort-var-R $= ( IMP-symbol-91-is-pattern typecode-cache-Pattern-14 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-309 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern element-var-is-var IMP-sort-7-is-pattern IMP-symbol-91-is-pattern typecode-cache-Pattern-0 substitution-307 substitution-var-same substitution-308 substitution-disjoint substitution-kore-equals ) IBCJDEFGIAKJDEFGBCAHABLBCAHMABNDEFGBCAHOP $.
sorting-rearrange-113 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort \kore-symbol-LblinitGeneratedCounterCell ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) $= ( kore-sort-var-R-elementvariable unit-sort-is-symbol symbol-is-pattern top-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern IMP-sort-7-is-pattern IMP-symbol-91-is-pattern typecode-cache-Pattern-0 kore-sort-var-x0-elementvariable kore-equals-is-pattern typecode-cache-Pattern-14 and-is-pattern kore-is-sort-is-pattern element-var-is-var kore-valid-is-pattern x-is-element-var substitution-var-same rule-weakening substitution-kore-valid substitution-imp top-intro sorting-cache-58 rule-and-intro-alt2-sugar typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-rearrange-112 substitution-60 substitution-305 substitution-306 substitution-disjoint substitution-kore-equals substitution-67 substitution-309 functional-substitution-alt rule-imp-transitivity ) DDBCPDOOBCIBCJEFGHMRDDBCPDODDUDUAUEUFBCAKIAKJEFGHMRBCIBCJEFGHMRLNILNJEFGHMRDAKPDOBCPDOLNPDOSALDSUGSUHSUIUAAUJBCBCPDOBCIBCJEFGHMRAKPDOAKIAKJEFGHMRAQAUKBCIBCJEFGHMAKIAKJEFGHMBCAQBCAQTIBCJEFGHIAKJEFGHBCAQAULBCAQTAUMEFGHBCAQUNUOUBUCLNLNPDOLNILNJEFGHMRAKPDOAKIAKJEFGHMRAQALUPLNILNJEFGHMAKIAKJEFGHMLNAQLNAQTALUQUBUCURUS $.
typecode-cache-Pattern-101 $p #Pattern kore-element-var-VE2 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-102 $p #Pattern kore-element-var-VE3 $= ( element-var-is-var var-is-pattern ) ABC $.
typecode-cache-Pattern-103 $p #Pattern ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( in-sort-is-pattern and-is-pattern typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern ) AEFCBGHCIDD $.
sorting-rearrange-114 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) $= ( IMP-sort-15-is-pattern top-is-pattern typecode-cache-Pattern-72 in-sort-is-pattern typecode-cache-Pattern-103 and-is-pattern string-literal-0-is-pattern kore-dv-is-pattern typecode-cache-Pattern-37 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-3 sorting-rearrange-14 kore-functional rule-imp-transitivity ) AGEHBCIJFDMEKLNDOAGEHBCIJFPQEEKLFDRDSTUA $.
sorting-cache-214 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-103 typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern and-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity ) ABFADECADECADECBGHCIJKADECLM $.
sorting-cache-215 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ) $= ( in-sort-is-pattern IMP-sort-15-is-pattern and-is-pattern typecode-cache-Pattern-103 typecode-cache-Pattern-72 typecode-cache-Pattern-74 top-is-pattern typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-214 ) AIFEBDHGCJFEKGGAIFEBDHGBLMEAIFEBDHGCJFEKGOAIFEBDHGBDHBLMEAIFEBDHPBDQNN $.
sorting-cache-216 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern and-is-pattern rule-imp-transitivity typecode-cache-Pattern-103 typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) ABIBDECFGBDECAJKCBDECFGLBDECFGBDECBDECBDECFMBDECNHH $.
sorting-cache-217 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern IMP-sort-15-is-pattern and-is-pattern typecode-cache-Pattern-103 typecode-cache-Pattern-72 typecode-cache-Pattern-74 top-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern rule-imp-transitivity and-elim-left-sugar and-elim-right-sugar sorting-cache-216 ) AIFEBDHGCJFEKGGAIFEBDHGDLMEAIFEBDHGCJFEKGOAIFEBDHGBDHDLMEAIFEBDHPBDQNN $.
sorting-cache-218 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( and-is-pattern in-sort-is-pattern IMP-sort-15-is-pattern top-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-103 typecode-cache-Pattern-74 typecode-cache-Pattern-102 IMP-sort-7-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern sorting-cache-215 sorting-cache-217 top-intro rule-weakening ) AIGFBDJECKGFHEEBOPFDLMFHEABCDQAIGFBDJECKGFHEEDLMFHABCDRAIGFBDJECKGFHEEHSTNN $.
typecode-cache-Pattern-104 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) $= ( kore-inj-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-72 IMP-symbol-54-is-pattern typecode-cache-Pattern-101 KSEQ-symbol-0-is-pattern ) DEFGHAICJCBKL $.
typecode-cache-Pattern-105 $p #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) ) $= ( typecode-cache-Pattern-101 IMP-symbol-22-is-pattern typecode-cache-Pattern-72 IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern ) BCDAEFG $.
substitution-310 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE0 $= ( typecode-cache-Pattern-102 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-311 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-element-var-x0 kore-element-var-VE0 $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-312 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern element-var-is-var typecode-cache-Pattern-74 substitution-var-same substitution-311 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-313 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) \top ) ( \and ( \in-sort kore-element-var-VE0 \kore-sort-SortInt ) \top ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-74 element-var-is-var substitution-312 substitution-218 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-314 $p #Substitution ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE0 ) kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-74 substitution-var-same IMP-symbol-18-substitution ) ADBCBCAEBCADFG $.
substitution-315 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 kore-element-var-x0 kore-element-var-VE0 $= ( typecode-cache-Pattern-102 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) BDCEAFG $.
sorting-cache-219 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-103 typecode-cache-Pattern-72 IMP-sort-15-is-pattern and-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-216 rule-imp-transitivity top-intro rule-weakening rule-and-intro-alt2-sugar ) AFGDBCEHCIJDKAFGDBCEHBCECIJDAFGDBCELBCMNAFGDBCEHKOPQ $.
sorting-cache-220 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-103 typecode-cache-Pattern-72 IMP-sort-15-is-pattern and-is-pattern typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern and-elim-right-sugar sorting-cache-214 rule-imp-transitivity sorting-cache-219 rule-and-intro-alt2-sugar ) AFGDBCEHBIJDCKLDMHAFGDBCEHBCEBIJDAFGDBCENBCOPABCQR $.
sorting-rearrange-115 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) ) ) ) $= ( IMP-sort-6-is-pattern IMP-sort-15-is-pattern kore-element-var-VE0-elementvariable in-sort-is-pattern and-is-pattern typecode-cache-Pattern-102 kore-top-is-pattern string-literal-0-is-pattern IMP-symbol-20-is-pattern kore-dv-is-pattern kore-and-is-pattern typecode-cache-Pattern-74 typecode-cache-Pattern-104 IMP-symbol-22-is-pattern typecode-cache-Pattern-72 IMP-symbol-18-is-pattern element-var-is-var typecode-cache-Pattern-103 IMP-symbol-16-is-pattern kore-element-var-x0-elementvariable top-is-pattern typecode-cache-Pattern-105 typecode-cache-Pattern-34 kore-rewrites-is-pattern substitution-disjoint kore-valid-is-pattern rule-imp-transitivity rule-and-intro-alt2-sugar and-elim-left-sugar substitution-226 imp-reflexivity kore-element-var-x1-elementvariable substitution-var-same IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-and substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-220 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-114 and-elim-right-sugar sorting-cache-218 IMP-axiom-289 substitution-in-sort substitution-and IMP-symbol-18-substitution substitution-310 substitution-313 substitution-314 substitution-315 functional-substitution-alt ) AREGBCUAHAREGBCUAHEKMEGUDHHDDDDJABPQEKMSUBCILNDDJABUECILNUGUIAREGBCUAHAREGBCUAHEKMEGUDHAREGBCUAHAREGBCUAAREGBCUAHAREGAREGAREGBCUAULAREGUNUJABCVCUKAREGBCUAHEKMEGUDEKMEGAREGBCUAHEKMEGVDEKMEGAREGBCUAHVEEKVFVGAREGBCUAHUDVHVIUKUKEKMDDDDJABPQFOSUBCILNDDJABUECILNUGUIDDDDJABPQEKMSUBCILNDDJABUECILNUGUIDDDDJABPQUCUFSUBCILNDDJABUECILNUGUIAREGBCUAHFOEGUDHEKMEGUDHUCUFEGUDHUOFUCABCUOVJAREGBCUAHFOEGUDHHFOEGAREGBCUAHHDDDDJABPQFOSUBCILNDDJABUECILNUGUIAREGBCUAHFOEGUDHHFOEGAREGBCUAHAREGBCUAHFOEGUDHHFOEGUDHFOEGAREGBCUAHFOEGUDHVKFOEGUDHFOEGFOEGFOEGUDULFOEGUNUJUJAREGBCUAHFOEGUDHHAREGBCUAAREGBCUAHFOEGUDHHAREGBCUAHAREGAREGBCUAHFOEGUDHULAREGBCUAULUJABFCVLUKUKABFCVMUJEKMEKMEGUDHDDDDJABPQEKMSUBCILNDDJABUECILNUGUIFOEGUDHDDDDJABPQFOSUBCILNDDJABUECILNUGUIFTEKMEKMEGUDFOEGUDFTEKMEKMEFOEFTEKMFTUPEEKMFTUHVNUDEKMFTUHVODDDDJABPQEKMSUBCILNDDJABUECILNUGDDDDJABPQFOSUBCILNDDJABUECILNUGEKMFTDEKMFTUHDDDJABPQEKMSUBCILNDDJABUECILNDDDJABPQFOSUBCILNDDJABUECILNEKMFTDEKMFTUHDDJABPQEKMSUBCILDDJABPQFOSUBCILEKMFTDEKMFTUHDJEKMFTUHFTEKMABPQEKMSUBCIABPQFOSUBCIFTEKMABPQEKMSABPQFOSABPQEKMFTUHFTEKMEKMFOEKMFTUPVPUQFCVQURUSDDJABUECILNEKMFTUHUTVAVBUCUFUCUFEGUDHDDDDJABPQUCUFSUBCILNDDJABUECILNUGUIFOEGUDHDDDDJABPQFOSUBCILNDDJABUECILNUGUIFTFUCVRDDDDJABPQUCUFSUBCILNDDJABUECILNUGDDDDJABPQFOSUBCILNDDJABUECILNUGUCUFFTFUCUMDDDJABPQUCUFSUBCILNDDJABUECILNDDDJABPQFOSUBCILNDDJABUECILNUCUFFTFUCUMDDJABPQUCUFSUBCILDDJABPQFOSUBCILUCUFFTFUCUMDJUCUFFTUHFTUCUFABPQUCUFSUBCIABPQFOSUBCIFTUCUFABPQUCUFSABPQFOSABPQUCUFFTUHFUCVSUQFCUCVTURUSDDJABUECILNUCUFFTUHUTVAVBWAUJ $.
sorting-rearrange-116 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \exists kore-element-var-x1 ( \eq kore-element-var-x1 ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) $= ( top-is-pattern IMP-sort-15-is-pattern typecode-cache-Pattern-103 string-literal-0-is-pattern kore-dv-is-pattern typecode-cache-Pattern-37 eq-is-pattern exists-is-pattern top-intro rule-weakening sorting-cache-3 sorting-rearrange-14 kore-functional rule-imp-transitivity ) ABFDCIEGHJCKABFDLMEEGHDCNCOPQ $.
sorting-cache-221 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( and-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-103 typecode-cache-Pattern-72 IMP-sort-15-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern and-elim-left-sugar rule-imp-transitivity rule-and-intro-alt2-sugar sorting-cache-214 sorting-cache-216 top-intro rule-weakening ) BCGAHIEFDDBLMECJKEFDBCGAHIEFDDBCGBLMEBCGAHIEFDNBCQOBCGAHIEFDDCJKEFBCGAHIEFDDBCGCJKEBCGAHIEFDNBCROBCGAHIEFDDFSTPP $.
typecode-cache-Pattern-106 $p #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) $= ( typecode-cache-Pattern-101 IMP-symbol-22-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern typecode-cache-Pattern-102 IMP-symbol-20-is-pattern ) ACDEFGHIBJK $.
typecode-cache-Pattern-107 $p #Pattern ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ) kore-element-var-VE2 ) $= ( kore-inj-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-34 IMP-symbol-54-is-pattern typecode-cache-Pattern-101 KSEQ-symbol-0-is-pattern ) DEFGHBICJCAKL $.
typecode-cache-Pattern-108 $p #Pattern ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-x0 ) ) $= ( typecode-cache-Pattern-101 IMP-symbol-22-is-pattern typecode-cache-Pattern-34 IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern ) ACDBEFG $.
substitution-316 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 $= ( typecode-cache-Pattern-101 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-317 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) kore-element-var-VE2 ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var IMP-sort-10-is-pattern kore-inj-is-pattern IMP-symbol-83-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern substitution-disjoint IMP-symbol-54-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-101 substitution-kore-inj substitution-var-same IMP-symbol-54-substitution substitution-316 KSEQ-symbol-0-substitution ) AFCDEJKICGCDEHMHBOJKICGANHMHBOJKICGCDEHMJKICGANHMCDEAFJCDEAFLKCDEAFLAFCDEICGCDEHICGANHICDEAFLCGCDECGANCDEAFCCDEAFLGCDEAFLCDEAFQPRPABST $.
substitution-318 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 $= ( typecode-cache-Pattern-102 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) BCDEFAGH $.
substitution-319 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) ) kore-element-var-VE3 ) ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-VE1 $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var typecode-cache-Pattern-101 IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern typecode-cache-Pattern-102 typecode-cache-Pattern-72 IMP-symbol-16-is-pattern typecode-cache-Pattern-105 substitution-disjoint substitution-var-same IMP-symbol-18-substitution IMP-symbol-16-substitution substitution-318 IMP-symbol-20-substitution ) AGDEFBHIDEFJMCKABNCKAGDEFBHIDEFJBHIALJBHIDEFAGOAGDEFDEFALDEFAGPQRACST $.
substitution-320 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-321 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-var-same substitution-320 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-322 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) \top ) ( \and ( \in-sort kore-element-var-VE1 \kore-sort-SortInt ) \top ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-321 substitution-231 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-323 $p #Substitution \kore-sort-SortStmt \kore-sort-SortStmt kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-21-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-324 $p #Substitution \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 kore-element-var-x0 kore-element-var-VE1 $= ( IMP-symbol-83-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-325 $p #Substitution \kore-sort-SortAExp \kore-sort-SortAExp kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-10-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-326 $p #Substitution ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern IMP-sort-10-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-320 substitution-325 substitution-var-same substitution-kore-inj ) DEBCDEAGBCAFABHABIBCAFJK $.
substitution-327 $p #Substitution ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 IMP-symbol-83-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern kore-inj-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-324 substitution-326 IMP-symbol-54-substitution ) AHBCDEFBCGDEFAIGABJABKL $.
substitution-328 $p #Substitution ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ) ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ) ) kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern typecode-cache-Pattern-34 kore-inj-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-72 element-var-is-var substitution-323 substitution-254 substitution-327 substitution-kore-inj ) CDEFGBHIJCDEFGAKIJBHALABMABNABOP $.
substitution-329 $p #Substitution kore-element-var-VE2 kore-element-var-VE2 kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-101 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-330 $p #Substitution ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-x0 ) ) ) kore-element-var-VE2 ) ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp kore-element-var-VE1 ) ) ) kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE1 $= ( kore-inj-is-pattern typecode-cache-Pattern-34 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-15-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-101 element-var-is-var typecode-cache-Pattern-72 substitution-328 substitution-329 KSEQ-symbol-0-substitution ) AMCEFGHIJCEDKDBLFGHIJANDKDBLACOABCPQ $.
substitution-331 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-102 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-332 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-101 IMP-symbol-22-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) BDECFAGH $.
substitution-333 $p #Substitution ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-72 substitution-var-same IMP-symbol-18-substitution ) ADBCBCAEBCADFG $.
substitution-334 $p #Substitution ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-x0 ) ) ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-34 typecode-cache-Pattern-101 IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern element-var-is-var typecode-cache-Pattern-72 substitution-332 substitution-333 IMP-symbol-16-substitution ) AHCDBEFCDGBEFAIGABCJACKL $.
substitution-335 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-x0 ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) ) kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE1 $= ( typecode-cache-Pattern-102 element-var-is-var typecode-cache-Pattern-34 typecode-cache-Pattern-108 typecode-cache-Pattern-105 substitution-334 substitution-331 IMP-symbol-20-substitution ) AFDGBDHCEABICEABDJACDKL $.
substitution-336 $p #Substitution ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-x0 ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' kore-element-var-VE1 ) ) kore-element-var-VE3 ) ) kore-element-var-x0 kore-element-var-VE1 $= ( IMP-sort-6-is-pattern kore-top-is-pattern typecode-cache-Pattern-102 IMP-symbol-20-is-pattern typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-108 typecode-cache-Pattern-105 substitution-235 substitution-disjoint substitution-335 substitution-kore-and ) EEFBDKCGHEEFABLCGHDIAJADMEFDIAJNABCDOP $.
sorting-cache-222 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ) $= ( typecode-cache-Pattern-103 in-sort-is-pattern top-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern rule-and-intro-alt2-sugar typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern and-is-pattern sorting-cache-214 sorting-cache-216 top-intro rule-weakening ) ABCAIJDBFGDEKABLABCBFGDEABMABCENOHH $.
sorting-rearrange-117 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) kore-element-var-VE2 ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ) ) ) ) $= ( IMP-sort-6-is-pattern IMP-sort-15-is-pattern kore-element-var-VE1-elementvariable string-literal-0-is-pattern kore-dv-is-pattern kore-top-is-pattern typecode-cache-Pattern-102 IMP-symbol-20-is-pattern kore-and-is-pattern IMP-symbol-18-is-pattern kore-element-var-x0-elementvariable IMP-symbol-22-is-pattern element-var-is-var in-sort-is-pattern IMP-symbol-16-is-pattern top-is-pattern and-is-pattern kore-inj-is-pattern typecode-cache-Pattern-72 typecode-cache-Pattern-104 typecode-cache-Pattern-103 kore-rewrites-is-pattern typecode-cache-Pattern-34 substitution-disjoint IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern typecode-cache-Pattern-101 KSEQ-symbol-0-is-pattern kore-valid-is-pattern typecode-cache-Pattern-105 typecode-cache-Pattern-107 typecode-cache-Pattern-106 typecode-cache-Pattern-108 rule-imp-transitivity rule-and-intro-alt2-sugar substitution-kore-and substitution-235 kore-element-var-x1-elementvariable IMP-symbol-22-substitution IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-222 imp-is-pattern proof-rule-prop-1 kore-dv-sorting proof-rule-mp top-intro rule-weakening sorting-rearrange-116 and-elim-right-sugar and-elim-left-sugar imp-reflexivity sorting-cache-221 sorting-rearrange-115 substitution-var-same substitution-in-sort substitution-and substitution-317 substitution-318 substitution-319 substitution-322 substitution-330 substitution-331 substitution-336 functional-substitution-alt ) ABUCABUCDFGDPRSSCCCCHUGUHUIDUJDFGTUKTAULUMNDFGLQBIJKCCHABUQKUDUNABUCABUCDFGDPRSABVJABUCDFGDPRDFGDPABUCDFGDPVKDFGDPABUCVLDFVMVNABUCRVOVPUTUTDFGCCCCHEAUBNDFGLQBIJKCCHEAUOBIJKUDUNCCCCHUGUHUIDUJDFGTUKTAULUMNDFGLQBIJKCCHABUQKUDUNCCCCHAMUPNDFGLQBIJKCCHAMURBIJKUDUNABUCEUADPRSDFGDPRSMUEDPRSVCEMABVCVQABUCEUADPRSSEUADPABUCSCCCCHEAUBNDFGLQBIJKCCHEAUOBIJKUDUNABUCEUADPRSSEUADPABUCABUCEUADPRSSEUADPRSEUADPABUCEUADPRSVREUADPRSEUADPEUADPEUADPRVSEUADPVTUSUSEABWAUTEABWBUSDFGDFGDPRSCCCCHUGUHUIDUJDFGTUKTAULUMNDFGLQBIJKCCHABUQKUDUNEUADPRSCCCCHEAUBNDFGLQBIJKCCHEAUOBIJKUDUNEODFGDFGDPREUADPREODFGDFGDEUADEODFGEOWCDDFGEOUFWDRDFGEOUFWECCCCHUGUHUIDUJDFGTUKTAULUMNDFGLQBIJKCCHABUQKUDCCCCHEAUBNDFGLQBIJKCCHEAUOBIJKUDDFGEOCDFGEOUFCCCHUGUHUIDUJDFGTUKTAULUMNDFGLQBIJKCCHABUQKCCCHEAUBNDFGLQBIJKCCHEAUOBIJKDFGEOCDFGEOUFCCHUGUHUIDUJDFGTUKTAULUMNDFGLQBIJCCHEAUBNDFGLQBIJDFGEOCDFGEOUFCHDFGEOUFEODFGUGUHUIDUJDFGTUKTAULUMNDFGLQBIEAUBNDFGLQBIEODFGUGUHUIDUJDFGTUKTAULUMNDFGLEAUBNDFGLEODFGUGUHUIDUJDFGTUKTAULUMEAUBEAWFVDDFGLDFGEOUFVEEBWGVFVACCHABUQCCHEAUOBIJDFGEOCDFGEOUFCHDFGEOUFEABWHVAVGVHVIMUEMUEDPRSCCCCHAMUPNDFGLQBIJKCCHAMURBIJKUDUNEUADPRSCCCCHEAUBNDFGLQBIJKCCHEAUOBIJKUDUNEOEMWICCCCHAMUPNDFGLQBIJKCCHAMURBIJKUDCCCCHEAUBNDFGLQBIJKCCHEAUOBIJKUDMUEEOEMVBCCCHAMUPNDFGLQBIJKCCHAMURBIJKCCCHEAUBNDFGLQBIJKCCHEAUOBIJKMUEEOEMVBCCHAMUPNDFGLQBIJCCHEAUBNDFGLQBIJMUEEOEMVBCHMUEEOUFEOMUEAMUPNDFGLQBIEAUBNDFGLQBIEOMUEAMUPNDFGLEAUBNDFGLEOMUEAMUPEAUBEAMWJVDDFGLMUEEOUFVEEBMWKVFVAEABMWLVGVHVIWMUS $.
sorting-rearrange-118 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \exists kore-element-var-V0 ( \eq kore-element-var-V0 \kore-symbol-dotk ) ) ) $= ( top-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern in-sort-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern typecode-cache-Pattern-51 eq-is-pattern exists-is-pattern top-intro rule-weakening BASIC-K-sort-0-is-pattern sorting-cache-1 sorting-rearrange-82 kore-functional rule-imp-transitivity ) ADEFCGCBIHJBKADEFCGCLMNHCBOBPQR $.
sorting-cache-223 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) BHICFGADECFGGADECFGADECBHICFGADECFGKADECFGADECADECADECFLADECMJJ $.
sorting-cache-224 $p |- ( \imp ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-101 BASIC-K-sort-0-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) BDECFGAHICFGGBDECFGBDECBDECFGAHICFGJBDECFGBDECBDECBDECFJBDECLKK $.
typecode-cache-Pattern-109 $p #Pattern ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) $= ( typecode-cache-Pattern-34 IMP-symbol-22-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern typecode-cache-Pattern-102 IMP-symbol-20-is-pattern ) BCDEFGHIAJK $.
substitution-337 $p #Substitution ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) \kore-symbol-dotk kore-element-var-VE2 $= ( KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern element-var-is-var top-is-pattern in-sort-is-pattern typecode-cache-Pattern-101 substitution-disjoint substitution-var-same substitution-in-sort substitution-and ) BBCFEAGCFEADBBCAGCADBADICBADHJEBADHK $.
substitution-338 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 \kore-symbol-dotk kore-element-var-VE2 $= ( typecode-cache-Pattern-102 KSEQ-symbol-1-is-pattern element-var-is-var substitution-disjoint ) BCDAEF $.
substitution-339 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) \kore-symbol-dotk kore-element-var-VE2 $= ( KSEQ-symbol-1-is-pattern element-var-is-var IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern IMP-symbol-22-is-pattern typecode-cache-Pattern-101 IMP-symbol-16-is-pattern typecode-cache-Pattern-102 substitution-var-same IMP-symbol-22-substitution substitution-disjoint IMP-symbol-16-substitution substitution-338 IMP-symbol-20-substitution ) ADCCIEFGHKBLAJIEFGHKBLADCCIEFGHAJIEFGHADCCAJCADMNEFGHCADOPABQR $.
substitution-340 $p #Substitution \kore-sort-SortK \kore-sort-SortK kore-element-var-x0 kore-element-var-VE2 $= ( BASIC-K-sort-0-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-341 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortK ) ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-34 BASIC-K-sort-0-is-pattern element-var-is-var typecode-cache-Pattern-101 substitution-var-same substitution-340 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-342 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE2 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-343 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortK ) \top ) ( \and ( \in-sort kore-element-var-VE2 \kore-sort-SortK ) \top ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-34 BASIC-K-sort-0-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-101 element-var-is-var substitution-341 substitution-342 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-344 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE2 $= ( IMP-sort-6-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-345 $p #Substitution kore-element-var-VE3 kore-element-var-VE3 kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-102 typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) BDCEAFG $.
substitution-346 $p #Substitution ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-101 substitution-var-same IMP-symbol-22-substitution ) ADBCBCAEBCADFG $.
substitution-347 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' kore-element-var-VE2 ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) kore-element-var-x0 kore-element-var-VE2 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-18-is-pattern IMP-symbol-22-is-pattern element-var-is-var IMP-symbol-16-is-pattern typecode-cache-Pattern-102 typecode-cache-Pattern-101 substitution-346 substitution-disjoint IMP-symbol-16-substitution substitution-345 IMP-symbol-20-substitution ) AJCDCDIEFGHKBLAMIEFGHKBLAJCDCDIEFGHAMIEFGHACNEFGHCDAJOPABCQR $.
sorting-cache-225 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) ) $= ( in-sort-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern and-is-pattern imp-is-pattern proof-rule-prop-1 KSEQ-symbol-1-sorting proof-rule-mp ) CDBAEFBGHCDBICDBAEFBGHJKL $.
sorting-cache-226 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ) $= ( top-is-pattern in-sort-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern and-is-pattern KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern sorting-cache-225 top-intro rule-weakening rule-and-intro-alt2-sugar ) ADECBFGHCBAIADECBFBJKL $.
sorting-cache-227 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort \kore-symbol-dotk \kore-sort-SortK ) \top ) ) ) $= ( in-sort-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern top-is-pattern and-is-pattern rule-and-intro-alt2-sugar KSEQ-symbol-1-is-pattern BASIC-K-sort-0-is-pattern and-elim-left-sugar imp-reflexivity rule-imp-transitivity top-intro rule-weakening sorting-cache-226 ) ACDBEFACDBEFHIBEFACDBEFACDBEACDBEFACDBACDBACDBEJACDBKLACDBEFEMNGAOG $.
sorting-rearrange-119 $p |- ( \imp ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-element-var-VE3 ) ) ) ) ) $= ( IMP-sort-6-is-pattern IMP-sort-15-is-pattern kore-element-var-VE2-elementvariable kore-inj-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-top-is-pattern typecode-cache-Pattern-102 IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern kore-element-var-x0-elementvariable IMP-symbol-18-is-pattern IMP-symbol-22-is-pattern kore-and-is-pattern KSEQ-symbol-0-is-pattern element-var-is-var IMP-symbol-16-is-pattern IMP-symbol-20-is-pattern typecode-cache-Pattern-101 and-is-pattern typecode-cache-Pattern-34 in-sort-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern kore-rewrites-is-pattern substitution-disjoint typecode-cache-Pattern-106 IMP-sort-7-is-pattern kore-valid-is-pattern typecode-cache-Pattern-109 substitution-kore-and substitution-344 kore-element-var-V0-elementvariable rule-and-intro-alt2-sugar rule-imp-transitivity substitution-var-same KSEQ-symbol-0-substitution IMP-symbol-22-substitution IMP-symbol-16-substitution IMP-symbol-20-substitution substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-cache-227 sorting-rearrange-118 typecode-cache-Pattern-103 sorting-cache-223 sorting-cache-224 top-intro rule-weakening sorting-rearrange-117 substitution-337 substitution-338 substitution-339 substitution-343 substitution-345 substitution-347 functional-substitution-alt ) AIUMUGUHUEAIUMUGUHUEOUIUGUHUEUEBBBBHJKLCMCFGENEOTRCFGQUBAIUCSBBHORCFGQUBAIUCSUJUNAVIOBBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSUJUNBBBBHJKLCMCFGENEOTRCFGQUBAIUCSBBHORCFGQUBAIUCSUJUNBBBBHJKLCMCFGENEPUFTRCFGQUBAIUCSBBHAPUOSUJUNAIUMUGUHUEDUDUIUGUHUEOUIUGUHUEPUFUIUGUHUEURDPAURVJAIUMUGUHUEDUDUIUGUHUEUEDAVKBBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSUJUNAIUMUGUHUEDUDUIUGUHUEUEDUDUIUGAIUMUGUHUEDAVLAIUMUGUHUEDUDUIUGUHUEUEAIUMUGUHDAVMAIUMUGUHUEDUDUIUGUHUEUEUHVNVOUSUSDAVPUTOOUIUGUHUEBBBBHJKLCMCFGENEOTRCFGQUBAIUCSBBHORCFGQUBAIUCSUJUNDUDUIUGUHUEBBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSUJUNDUADVQBBBBHJKLCMCFGENEOTRCFGQUBAIUCSBBHORCFGQUBAIUCSUJBBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSUJODUABODUAUKBBBHJKLCMCFGENEOTRCFGQUBAIUCSBBHORCFGQUBAIUCSBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSODUABODUAUKBBHJKLCMCFGENEOTRCFGQUBAIUCBBHJKLCMCFGENEDUDTRCFGQUBAIUCODUABODUAUKBHODUAUKDUAOJKLCMCFGENEOTRCFGQUBAIJKLCMCFGENEDUDTRCFGQUBAIDUAOJKLCMCFGENEOTRCFGQJKLCMCFGENEDUDTRCFGQDUAOJKLCMCFGENEOTJKLCMCFGENEDUDTDUAOJKLCMCFGENEOJKLCMCFGENEDUDJKLCMCFGENEODUAUKODUAVAVBVCCFGQODUAUKVDDAVRVEUPBBHORCFGQUBAIUCBBHDAULODUABODUAUKBHODUAUKDAVSUPVFVGVHPUFPUFUIUGUHUEBBBBHJKLCMCFGENEPUFTRCFGQUBAIUCSBBHAPUOSUJUNDUDUIUGUHUEBBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSUJUNDUADPVTBBBBHJKLCMCFGENEPUFTRCFGQUBAIUCSBBHAPUOSUJBBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSUJPUFDUADPUQBBBHJKLCMCFGENEPUFTRCFGQUBAIUCSBBHAPUOSBBBHJKLCMCFGENEDUDTRCFGQUBAIUCSBBHDAULSPUFDUADPUQBBHJKLCMCFGENEPUFTRCFGQUBAIUCBBHJKLCMCFGENEDUDTRCFGQUBAIUCPUFDUADPUQBHPUFDUAUKDUAPUFJKLCMCFGENEPUFTRCFGQUBAIJKLCMCFGENEDUDTRCFGQUBAIDUAPUFJKLCMCFGENEPUFTRCFGQJKLCMCFGENEDUDTRCFGQDUAPUFJKLCMCFGENEPUFTJKLCMCFGENEDUDTDUAPUFJKLCMCFGENEPUFJKLCMCFGENEDUDJKLCMCFGENEPUFDUAUKPUFDUAVAVBVCCFGQPUFDUAUKVDDAPWAVEUPBBHAPUOBBHDAULPUFDUADPUQBHPUFDUAUKDAPWBUPVFVGVHWCUT $.
sorting-cache-228 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-is-sort kore-sort-var-R ) ) $= ( typecode-cache-Pattern-0 kore-is-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-29 IMP-sort-15-is-pattern in-sort-is-pattern and-elim-left-sugar rule-imp-transitivity imp-reflexivity ) ACDEFBGHIEFFACDEFACDACDEFBGHIEFJACDEFACDACDACDEJACDLKK $.
sorting-cache-229 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) ) $= ( typecode-cache-Pattern-29 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity ) AHIFGBCDEFGGBCDEFGBCDEAHIFGBCDEFGKBCDEFGBCDEBCDEBCDEFLBCDEMJJ $.
sorting-cache-230 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ) $= ( and-is-pattern top-is-pattern typecode-cache-Pattern-29 IMP-sort-15-is-pattern in-sort-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern rule-and-intro-alt2-sugar sorting-cache-228 sorting-cache-229 top-intro rule-weakening ) AHIDCBEFGDCCAHIBEFGDCABKAHIDCBEFGDCCBEFGDABLAHIDCBEFGDCCDMNJJ $.
typecode-cache-Pattern-110 $p #Pattern ( \and ( \kore-is-sort kore-sort-var-R ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) $= ( and-is-pattern typecode-cache-Pattern-0 kore-is-sort-is-pattern typecode-cache-Pattern-29 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern ) ADEBFGHICC $.
typecode-cache-Pattern-111 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-29 IMP-symbol-19-is-pattern kore-equals-is-pattern ) DAEBFCGHI $.
sorting-rearrange-120 $p |- ( \imp ( \and ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) ) ) $= ( typecode-cache-Pattern-0 and-is-pattern top-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-29 IMP-sort-15-is-pattern in-sort-is-pattern typecode-cache-Pattern-110 IMP-sort-7-is-pattern typecode-cache-Pattern-111 kore-exists-is-pattern kore-valid-is-pattern sorting-cache-230 IMP-axiom-125 rule-imp-transitivity ) ADGFECHIJFEEACKADLADABCMBNOACPABCQR $.
typecode-cache-Pattern-112 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern ) CADBEFGHIJ $.
typecode-cache-Pattern-113 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-34 IMP-symbol-19-is-pattern kore-equals-is-pattern ) DAEBFCGHI $.
substitution-348 $p #Substitution kore-sort-var-R kore-sort-var-R ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-K0 $= ( typecode-cache-Pattern-0 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-349 $p #Substitution kore-element-var-Val kore-element-var-Val ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-K0 $= ( typecode-cache-Pattern-23 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var substitution-disjoint ) ACDEFBGH $.
substitution-350 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ( \kore-dv \kore-sort-SortInt "0" ) kore-element-var-K0 $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern element-var-is-var IMP-sort-7-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 IMP-symbol-19-is-pattern typecode-cache-Pattern-29 substitution-disjoint substitution-348 substitution-349 substitution-var-same IMP-symbol-19-substitution substitution-kore-equals ) HAIBJDEFKHAIBJCLKDEFCGHDEFCGMACNBCOCGDEFDEFCLDEFCGPQR $.
substitution-351 $p #Substitution \kore-sort-SortInt \kore-sort-SortInt kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-352 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern element-var-is-var typecode-cache-Pattern-29 substitution-var-same substitution-351 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-353 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortInt ) \top ) ( \and ( \in-sort kore-element-var-K0 \kore-sort-SortInt ) \top ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 IMP-sort-15-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-29 element-var-is-var substitution-352 substitution-82 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-354 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-355 $p #Substitution ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-34 element-var-is-var typecode-cache-Pattern-29 substitution-var-same IMP-symbol-19-substitution ) ADBCBCAEBCADFG $.
substitution-356 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-23 typecode-cache-Pattern-34 IMP-symbol-19-is-pattern typecode-cache-Pattern-29 element-var-is-var substitution-354 substitution-84 substitution-86 substitution-355 substitution-kore-equals ) EAFBGDHIEAFBGCJIDHCKCDLACDMBCDNCDOP $.
substitution-357 $p #Substitution ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ) ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-0 typecode-cache-Pattern-113 typecode-cache-Pattern-111 typecode-cache-Pattern-34 element-var-is-var substitution-354 substitution-84 substitution-356 substitution-kore-exists-alt ) EAFABDGEAFABCHDIBCJCDKACDLABCDMN $.
substitution-358 $p #Substitution ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-x0 ) ) ) ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' kore-element-var-K0 ) ) ) ) kore-element-var-x0 kore-element-var-K0 $= ( typecode-cache-Pattern-0 IMP-sort-7-is-pattern kore-exists-is-pattern typecode-cache-Pattern-113 typecode-cache-Pattern-111 typecode-cache-Pattern-34 element-var-is-var substitution-84 substitution-357 substitution-kore-valid ) AEFAEABDHBGAEFAEABCIBGDJCKACDLABCDMN $.
sorting-rearrange-121 $p |- ( \imp ( \and ( \kore-is-sort kore-sort-var-R ) \top ) ( \kore-valid kore-sort-var-R ( \kore-exists \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern typecode-cache-Pattern-0 kore-element-var-K0-elementvariable top-is-pattern string-literal-0-is-pattern kore-dv-is-pattern and-is-pattern IMP-sort-7-is-pattern in-sort-is-pattern kore-exists-is-pattern element-var-is-var kore-valid-is-pattern kore-element-var-x0-elementvariable kore-is-sort-is-pattern typecode-cache-Pattern-112 typecode-cache-Pattern-111 typecode-cache-Pattern-29 typecode-cache-Pattern-34 substitution-disjoint typecode-cache-Pattern-113 kore-element-var-x1-elementvariable substitution-348 substitution-imp sorting-cache-68 sorting-cache-70 rule-and-intro-alt2-sugar sorting-rearrange-15 sorting-rearrange-120 substitution-var-same substitution-in-sort substitution-and substitution-350 substitution-kore-exists-alt substitution-kore-valid substitution-353 substitution-358 functional-substitution-alt rule-imp-transitivity ) ADPFIADPFICGHCKFIIADJADABQBLNADPFIADPFICGHCKFIAUFAUGUHCGHADJADABERBLNADJADABQBLNADJADABOUBBLNADPFIESCKFICGHCKFIOTCKFIUCEOAUCUIABEUJCGHCGHCKFIADJADABQBLNESCKFIADJADABERBLNEMCGHCGHCKFESCKFEMCGHCGHCESCEMCGHEMUKCCGHEMUAULFCGHEMUAUMADJADABQBLADJADABERBLCGHEMAEUDJADABQJADABERCGHBEMJCGHEMUAAEUDABEUNUOUPUEOTOTCKFIADJADABOUBBLNESCKFIADJADABERBLNEMEOUQABEOURUEUSUT $.
typecode-cache-Pattern-114 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) $= ( IMP-sort-7-is-pattern unit-sort-is-symbol symbol-is-pattern typecode-cache-Pattern-23 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern ) BCDAEFGHIJ $.
typecode-cache-Pattern-115 $p #Pattern ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-14 typecode-cache-Pattern-23 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern kore-equals-is-pattern ) CBDAEFGHIJ $.
substitution-359 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \unit-sort kore-sort-var-R $= ( unit-sort-is-symbol symbol-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern element-var-is-var IMP-sort-7-is-pattern typecode-cache-Pattern-23 typecode-cache-Pattern-0 substitution-305 substitution-var-same substitution-62 substitution-disjoint substitution-kore-equals ) JCDBKEFGHJALBKEFGHCDAIAMCDAINABOEFGHCDAIPQ $.
substitution-360 $p #Substitution ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-x0 kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-equals \kore-sort-SortGeneratedCounterCell kore-sort-var-R kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) kore-sort-var-x0 kore-sort-var-R $= ( typecode-cache-Pattern-14 IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-19-is-pattern element-var-is-var IMP-sort-7-is-pattern typecode-cache-Pattern-23 typecode-cache-Pattern-0 substitution-307 substitution-var-same substitution-69 substitution-disjoint substitution-kore-equals ) JCDBKEFGHJALBKEFGHCDAIACMCDAINABCOEFGHCDAIPQ $.
sorting-rearrange-122 $p |- ( \imp \top ( \kore-valid \unit-sort ( \kore-exists \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-equals \kore-sort-SortGeneratedCounterCell \unit-sort kore-element-var-Val ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) $= ( kore-sort-var-R-elementvariable top-is-pattern typecode-cache-Pattern-0 kore-sort-var-x0-elementvariable unit-sort-is-symbol symbol-is-pattern and-is-pattern IMP-sort-7-is-pattern kore-is-sort-is-pattern typecode-cache-Pattern-14 kore-exists-is-pattern element-var-is-var kore-valid-is-pattern typecode-cache-Pattern-112 typecode-cache-Pattern-114 typecode-cache-Pattern-115 x-is-element-var substitution-var-same rule-weakening top-intro rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-exists-alt substitution-kore-valid substitution-imp sorting-cache-58 typecode-cache-Pattern-22 exists-is-pattern unit-sort-is-functional sorting-cache-56 sorting-rearrange-121 substitution-60 substitution-305 substitution-359 substitution-67 substitution-307 substitution-360 functional-substitution-alt ) CCFGJCHHFGIFGAPALNCCFGJCHCCUATUGUBFGBDIBDBAOALNFGIFGAPALNEKIEKAEQALNCBDJCHFGJCHEKJCHRBECRUHRUIRUJTCBDJCHHBDJCHBDIBDBAOALNCBDJCHHBDJCBUKCBDJCHHCUATUBBAULUCFGFGJCHFGIFGAPALNBDJCHBDIBDBAOALNBMBUMFGIFGAPALBDIBDBAOALFGBMFGBMSIFGAPIBDBAOFGABMBUNFGBMSBAUOUDUEUFEKEKJCHEKIEKAEQALNBDJCHBDIBDBAOALNBMBEUPEKIEKAEQALBDIBDBAOALEKBMEKBMSIEKAEQIBDBAOEKABMBEUQEKBMSBAEURUDUEUFUSUC $.
sorting-cache-231 $p |- ( \imp ( \and \top ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) ) $= ( top-is-pattern typecode-cache-Pattern-102 IMP-sort-7-is-pattern in-sort-is-pattern and-is-pattern rule-imp-transitivity and-elim-right-sugar and-elim-left-sugar imp-reflexivity top-intro rule-weakening rule-and-intro-alt2-sugar ) BACDEBFFACDEBBACDEBFFACDEBFACDEBACDEBFHACDEBFACDEACDEACDEBIACDEJGGBACDEBFFBKLM $.
substitution-361 $p #Substitution \kore-sort-SortGeneratedCounterCell \kore-sort-SortGeneratedCounterCell kore-element-var-x0 kore-element-var-VE3 $= ( IMP-sort-7-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-362 $p #Substitution ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-34 IMP-sort-7-is-pattern element-var-is-var typecode-cache-Pattern-102 substitution-var-same substitution-361 substitution-in-sort ) BCBCDAFDAEBCAEGABHI $.
substitution-363 $p #Substitution \top \top kore-element-var-x0 kore-element-var-VE3 $= ( top-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
substitution-364 $p #Substitution ( \and ( \in-sort kore-element-var-x0 \kore-sort-SortGeneratedCounterCell ) \top ) ( \and ( \in-sort kore-element-var-VE3 \kore-sort-SortGeneratedCounterCell ) \top ) kore-element-var-x0 kore-element-var-VE3 $= ( typecode-cache-Pattern-34 IMP-sort-7-is-pattern in-sort-is-pattern top-is-pattern typecode-cache-Pattern-102 element-var-is-var substitution-362 substitution-363 substitution-and ) BCBCDEFAGDEFAHABIABJK $.
substitution-365 $p #Substitution \kore-sort-SortGeneratedTopCell \kore-sort-SortGeneratedTopCell kore-element-var-x0 kore-element-var-VE3 $= ( IMP-sort-6-is-pattern typecode-cache-Pattern-34 element-var-is-var substitution-disjoint ) CBDAEF $.
sorting-rearrange-123 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-sort-6-is-pattern kore-element-var-VE3-elementvariable kore-inj-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern kore-top-is-pattern IMP-symbol-19-is-pattern IMP-symbol-20-is-pattern element-var-is-var kore-and-is-pattern kore-element-var-x0-elementvariable typecode-cache-Pattern-102 top-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-0-is-pattern typecode-cache-Pattern-34 IMP-sort-7-is-pattern in-sort-is-pattern substitution-disjoint and-is-pattern kore-rewrites-is-pattern kore-valid-is-pattern substitution-var-same IMP-symbol-20-substitution substitution-kore-and substitution-365 kore-element-var-Val-elementvariable top-intro rule-weakening sorting-cache-6 rule-and-intro-alt2-sugar rule-imp-transitivity substitution-kore-rewrites substitution-kore-valid substitution-imp sorting-rearrange-122 kore-functional sorting-cache-231 sorting-rearrange-119 substitution-in-sort substitution-and substitution-364 functional-substitution-alt ) RRABCLUFUGRUIUIDDDDKSTUAAUBABCFUCFGUDHABCIJABCLMODDKGHABCIJABCLMOUJUKRRABCLUFUGRUIRRUQURRABCLUFUGRUSRRUQURUTUTABCLDDDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOUJUKDDDDKSTUAAUBABCFUCFGUDHABCIJABCLMODDKGHABCIJABCLMOUJUKDDDDKSTUAAUBABCFUCFGUDHABCIJPUEMODDKGHABCIJPUEMOUJUKREQUFUGRUIABCLUFUGRUIPUEUFUGRUIUPEPUFABCLRUPUSUPVEVFREQUFUGRUIUIEQUFUGRUIDDDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOUJUKEVGEVHVAABCLABCLUFUGRUIDDDDKSTUAAUBABCFUCFGUDHABCIJABCLMODDKGHABCIJABCLMOUJUKEQUFUGRUIDDDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOUJUKENABCLABCLUFUGREQUFUGRENABCLABCLUFEQUFENABCLENULUFABCLENUHVIRABCLENUHVJDDDDKSTUAAUBABCFUCFGUDHABCIJABCLMODDKGHABCIJABCLMOUJDDDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOUJABCLENDABCLENUHDDDKSTUAAUBABCFUCFGUDHABCIJABCLMODDKGHABCIJABCLMODDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOABCLENDABCLENUHDDKSTUAAUBABCFUCFGUDHABCIJABCLMDDKSTUAAUBABCFUCFGUDHABCIJEQMABCLENDABCLENUHDKABCLENUHENABCLSTUAAUBABCFUCFGUDHABCIJABCLSTUAAUBABCFUCFGUDHABCIJEQSTUAAUBABCFUCFGUDHABCIJABCLENUHABCLENULUMUNDDKGHABCIJABCLMDDKGHABCIJEQMABCLENDABCLENUHDKABCLENUHENABCLGHABCIJABCLGHABCIJEQGHABCIJABCLENUHABCLENULUMUNVBVCVDPUEPUEUFUGRUIDDDDKSTUAAUBABCFUCFGUDHABCIJPUEMODDKGHABCIJPUEMOUJUKEQUFUGRUIDDDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOUJUKENEPVKDDDDKSTUAAUBABCFUCFGUDHABCIJPUEMODDKGHABCIJPUEMOUJDDDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOUJPUEENEPUODDDKSTUAAUBABCFUCFGUDHABCIJPUEMODDKGHABCIJPUEMODDDKSTUAAUBABCFUCFGUDHABCIJEQMODDKGHABCIJEQMOPUEENEPUODDKSTUAAUBABCFUCFGUDHABCIJPUEMDDKSTUAAUBABCFUCFGUDHABCIJEQMPUEENEPUODKPUEENUHENPUESTUAAUBABCFUCFGUDHABCIJPUESTUAAUBABCFUCFGUDHABCIJEQSTUAAUBABCFUCFGUDHABCIJPUEENUHPUEENULUMUNDDKGHABCIJPUEMDDKGHABCIJEQMPUEENEPUODKPUEENUHENPUEGHABCIJPUEGHABCIJEQGHABCIJPUEENUHPUEENULUMUNVBVCVDVLVA $.
sorting-cache-232 $p |- ( \imp \top ( \in-sort ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-6-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern kore-top-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-19-is-pattern IMP-symbol-20-is-pattern top-is-pattern and-is-pattern kore-and-is-pattern sorting-cache-0 sorting-cache-7 rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity ) MAFAEGHBCDIJBCDKLAENAAFGHBCDIJBCDKLOAEMAFAEGHBCDIJBCDKLAEPQRAAFGHBCDIJBCDKLST $.
sorting-cache-233 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) \kore-sort-SortKCell ) ) $= ( IMP-sort-15-is-pattern kore-inj-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern string-literal-0-is-pattern kore-dv-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern in-sort-is-pattern top-is-pattern BASIC-K-sort-0-is-pattern IMP-symbol-22-is-pattern IMP-sort-5-is-pattern sorting-cache-183 IMP-symbol-22-sorting rule-imp-transitivity ) MCDEAFAGHBIBJKNLCDEAFAGHBIBJKOPLQCDEAFAGHBIBJKRS $.
sorting-cache-234 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortTCell ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern in-sort-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern top-is-pattern IMP-sort-5-is-pattern IMP-sort-2-is-pattern and-is-pattern IMP-symbol-16-is-pattern IMP-sort-20-is-pattern sorting-cache-233 sorting-cache-4 rule-and-intro-alt2-sugar IMP-symbol-16-sorting rule-imp-transitivity ) OFGHAIABCDJDKLMPEABCNQERFGHAIABCDJDKLMABCNSTEOFGHAIABCDJDKLMPEABCNQEUAUBUCFGHAIABCDJDKLMABCNUDUE $.
sorting-cache-235 $p |- ( \imp \top ( \in-sort ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) \kore-sort-SortGeneratedTopCell ) ) $= ( IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-inj-is-pattern in-sort-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-19-is-pattern top-is-pattern IMP-sort-20-is-pattern IMP-sort-7-is-pattern and-is-pattern IMP-symbol-20-is-pattern IMP-sort-6-is-pattern sorting-cache-234 sorting-cache-6 rule-and-intro-alt2-sugar IMP-symbol-20-sorting rule-imp-transitivity ) QFGHAIABCDJDKLMABCNOREABCPSETFGHAIABCDJDKLMABCNOABCPUAUBEQFGHAIABCDJDKLMABCNOREABCPSEUCUDUEFGHAIABCDJDKLMABCNOABCPUFUG $.
pattern-subsumption-0 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-6-is-pattern kore-top-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern in-sort-is-pattern kore-inj-is-pattern kore-and-is-pattern top-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern KSEQ-symbol-0-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-19-is-pattern IMP-symbol-20-is-pattern sorting-cache-0 and-is-pattern rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity sorting-cache-235 kore-valid-is-pattern kore-top-valid rule-weakening kore-weakening kore-implies-reflexivity-alt kore-imp-conj-simplify ) AAABABHABAAABABHJKLCMCDEGNGOPQCDERSCDETUAHJKLCMCDEGNGOPQCDERSCDETUAIIABAFABAFUCAABABHAFIABAFABAFUBUBUDAABABUEUFUBUGAAABABHABIIAABUHAUIUJUKAAAABABHJKLCMCDEGNGOPQCDERSCDETUAHIIAABABHAFJKLCMCDEGNGOPQCDERSCDETUAAFUCAAABABHJKLCMCDEGNGOPQCDERSCDETUAHAFIAABABHAFJKLCMCDEGNGOPQCDERSCDETUAAFIABAFABAFUCAABABHAFIABAFABAFUBUBUDAABABUEUFUGUDAAABABHJKLCMCDEGNGOPQCDERSCDETUAUEUFULUM $.
pattern-subsumption-1 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-implies \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-6-is-pattern kore-top-is-pattern kore-and-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-19-is-pattern IMP-symbol-20-is-pattern top-is-pattern sorting-cache-8 kore-implies-reflexivity-alt ) AAAABABCGHDEFIJDEFKLCMNO $.
symbolic-step-0 $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' ( \kore-symbol-kseq ( \kore-inj \kore-sort-SortStmt \kore-sort-SortKItem ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) \kore-symbol-dotk ) ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-6-is-pattern kore-top-is-pattern IMP-sort-15-is-pattern string-literal-0-is-pattern kore-dv-is-pattern kore-and-is-pattern in-sort-is-pattern kore-inj-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern IMP-symbol-19-is-pattern IMP-symbol-20-is-pattern top-is-pattern IMP-sort-21-is-pattern BASIC-K-sort-1-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-0-is-pattern sorting-cache-0 and-is-pattern rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity sorting-cache-235 sorting-cache-8 sorting-cache-7 predicate-intro-top kore-is-predicate-top kore-rewrites-subsumption-rhs kore-implies-is-pattern kore-valid-is-pattern top-intro proof-rule-mp kore-implies-reflexivity rule-weakening kore-implies-reflexivity-alt kore-implies-compat-in-kore-and kore-is-predicate-and-alt pattern-subsumption-0 sorting-cache-232 sorting-rearrange-123 kore-and-elim-right-alt3 kore-rewrites-subsumption-lhs kore-rewrites-constraint-lemma pattern-subsumption-1 kore-rewrites-star-intro kore-rewrites-star-subsumption-lhs ) AAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNFAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNFAAABABFIJCDEKLCDEMNFOAAABABFAABABFPQRCSCDEHTHIUAJCDEKLCDEMNPQRCSCDEHTHIUAJCDEKLCDEMNOOABAGABAGUCAABABFAGOABAGABAGUBUBUDAABABUEUFOABAGABAGUCAABABFAGOABAGABAGUBUBUDAABABUEUFUGUGOAAAABABFAABABFUMUNAAABABFOAABABFAGOABAGABAGUCAABABFAGOABAGABAGUBUBUDAABABUEUFUOUPUQURAPQRCSCDEHTHIUAJCDEKLCDEMNOUGUSUTAAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNFAAABABFIJCDEKLCDEMNFOOAABABFAGPQRCSCDEHTHIUAJCDEKLCDEMNAGUCAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNFAGOAABABFAGPQRCSCDEHTHIUAJCDEKLCDEMNAGOABAGABAGUCAABABFAGOABAGABAGUBUBUDAABABUEUFUGUDAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNUEUFUHAAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNFAAABABFIJCDEKLCDEMNFAAABABFIJCDEKLCDEMNFOUJUHUHAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNIJCDEKLCDEMNOAABABAUKAUKVAOABAGABAGUCAABABFAGOABAGABAGUBUBUDAABABUEUFUGUIAAAABABFPQRCSCDEHTHIUAJCDEKLCDEMNFAABPQRCSCDEHTHIUAJCDEKLCDEMNFIJCDEKLCDEMNOVBAAABPQRCSCDEHTHIUAJCDEKLCDEMNFAABIJCDEKLCDEMNFIJCDEKLCDEMNOUJVCUIVDAABIJCDEKLCDEMNOUBUIVEULVFVGVHULVIVJ $.
goal $p |- ( \imp \top ( \kore-valid \kore-sort-SortGeneratedTopCell ( \kore-rewrites-star \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-LblinitGeneratedTopCell ( \kore-symbol-Lbl'Unds'Map'Unds' \kore-symbol-Lbl'Stop'Map ( \kore-symbol-Lbl'UndsPipe'-'-GT-Unds' ( \kore-inj \kore-sort-SortKConfigVar \kore-sort-SortKItem ( \kore-dv \kore-sort-SortKConfigVar "%24PGM" ) ) ( \kore-inj \kore-sort-SortPgm \kore-sort-SortKItem ( \kore-inj \kore-sort-SortStmt \kore-sort-SortPgm ( \kore-symbol-Lbl'UndsEqlsUndsSClnUnds'IMP-SYNTAX'Unds'Stmt'Unds'Id2'Unds'AExp \kore-symbol-Lblb'Unds'IMP-SYNTAX'Unds'Id2 ( \kore-inj \kore-sort-SortInt \kore-sort-SortAExp ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) ) ) ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-and \kore-sort-SortGeneratedTopCell ( \kore-top \kore-sort-SortGeneratedTopCell ) ( \kore-top \kore-sort-SortGeneratedTopCell ) ) ( \kore-symbol-Lbl'-LT-'generatedTop'-GT-' ( \kore-symbol-Lbl'-LT-'T'-GT-' ( \kore-symbol-Lbl'-LT-'k'-GT-' \kore-symbol-dotk ) ( \kore-symbol-Lbl'-LT-'b'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ( \kore-symbol-Lbl'-LT-'generatedCounter'-GT-' ( \kore-dv \kore-sort-SortInt "0" ) ) ) ) ) ) ) $= ( IMP-sort-6-is-pattern IMP-sort-15-is-pattern kore-dv-is-pattern kore-inj-is-pattern string-literal-0-is-pattern kore-top-is-pattern kore-and-is-pattern BASIC-K-sort-1-is-pattern IMP-sort-21-is-pattern IMP-symbol-83-is-pattern IMP-sort-10-is-pattern IMP-symbol-54-is-pattern KSEQ-symbol-1-is-pattern IMP-symbol-22-is-pattern IMP-symbol-18-is-pattern IMP-symbol-16-is-pattern KSEQ-symbol-0-is-pattern kore-element-var-x0-elementvariable IMP-symbol-19-is-pattern IMP-symbol-20-is-pattern IMP-sort-14-is-pattern IMP-sort-18-is-pattern element-var-is-var in-sort-is-pattern IMP-symbol-91-is-pattern IMP-symbol-14-is-pattern string-literal-4-is-pattern IMP-symbol-79-is-pattern IMP-symbol-59-is-pattern IMP-symbol-92-is-pattern top-is-pattern substitution-disjoint typecode-cache-Pattern-34 kore-rewrites-star-is-pattern and-is-pattern sorting-cache-0 rule-and-intro-alt2-sugar kore-and-sorting rule-imp-transitivity sorting-cache-235 substitution-var-same IMP-symbol-20-substitution substitution-kore-and substitution-kore-rewrites-star substitution-kore-valid sorting-cache-25 sorting-cache-8 IMP-sort-7-is-pattern kore-valid-is-pattern sorting-cache-160 sorting-cache-6 sorting-rearrange-113 equality-elim-6 kore-equals-elim-alt kore-implies-reflexivity-alt symbolic-step-0 kore-rewrites-star-subsumption-lhs kore-rewrites-star-transitivity ) AAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPBECSTGAAAFAFGMNBECOPBECSTGUKVFUKAAFAFGAUDIHJBKBECDLDMQNBECOPBECSTAUDUOAAAFAFGIHJBKBECDLDMQNBECOPBECSTGAUDUKAAFAFGAUDIHJBKBECDLDMQNBECOPBECSTAUDUKAFAUDAFAUDUOAAFAFGAUDUKAFAUDAFAUDUPUPUQAAFAFURUSUTUQAAAFAFGIHJBKBECDLDMQNBECOPBECSTURUSVGVHUEBECSAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPUETGUNAAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPRUMTGUNVIAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPBECSTGUNAAUKRVJVKVLVMAAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPUETGUNAAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPRUMTGUNUERUCAUERUCULAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPUETGAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPRUMTGUERUCAUERUCULAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGUERUCULAAAFAFGIHJBKBECDLDMQNBECOPUETAAAFAFGIHJBKBECDLDMQNBECOPRUMTUERUCAUERUCULAAFAFGUERUCULRUCUEIHJBKBECDLDMQNBECOPUEIHJBKBECDLDMQNBECOPRUMIHJBKBECDLDMQNBECOPUERUCULUERUCVAVBVCVDVEAAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPBECSTGUNAAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPRUMTGUNBECSRUCABECSRUCULAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPBECSTGAAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGAAAFAFGIHJBKBECDLDMQNBECOPRUMTGBECSRUCABECSRUCULAAAFAFGUFUAHUAUGCDUBHIUBJBKBECDLDDUHUIUJGBECSRUCULAAAFAFGIHJBKBECDLDMQNBECOPBECSTAAAFAFGIHJBKBECDLDMQNBECOPRUMTBECSRUCABECSRUCULAAFAFGBECSRUCULRUCBECSIHJBKBECDLDMQNBECOPBECSIHJBKBECDLDMQNBECOPRUMIHJBKBECDLDMQNBECOPBECSRUCULBECSRUCVAVBVCVDVEVNAAAAFAFGIHJBKBECDLDMQNBECOPBECSTGAAAFAFGIHJBKBECDLDMQNBECOPBECSTGAAAFAFGMNBECOPBECSTGUKAAAAFAFGIHJBKBECDLDMQNBECOPBECSTGUKUKAAFAFGAUDIHJBKBECDLDMQNBECOPBECSTAUDUOAAAFAFGIHJBKBECDLDMQNBECOPBECSTGAUDUKAAFAFGAUDIHJBKBECDLDMQNBECOPBECSTAUDUKAFAUDAFAUDUOAAFAFGAUDUKAFAUDAFAUDUPUPUQAAFAFURUSUTUQAAAFAFGIHJBKBECDLDMQNBECOPBECSTURUSVOVPVQVR $.
